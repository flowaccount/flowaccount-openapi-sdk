export * from './allBankAccountResponse';
export * from './allDocumentResponse';
export * from './allDocumentResponseData';
export * from './allExpenseDocumentResponse';
export * from './allExpenseDocumentResponseData';
export * from './allWithholidingTaxDocumentResponse';
export * from './allWithholidingTaxDocumentResponseData';
export * from './attachmentResponse';
export * from './attachmentResponseData';
export * from './authenResponse';
export * from './bankAccount';
export * from './bankAccountResponse';
export * from './bankAccountResponseData';
export * from './businessCategory';
export * from './companyInfo';
export * from './companyInfoResponse';
export * from './companyInfoResponseData';
export * from './contact';
export * from './contactResponse';
export * from './contactResponseData';
export * from './deleteResponse';
export * from './deleteResponseData';
export * from './document';
export * from './documentResponse';
export * from './expenseDocument';
export * from './expenseInlineDocument';
export * from './expenseInlineDocumentAllOf';
export * from './expenseInlineDocumentResponse';
export * from './expenseInlineDocumentResponseAllOf';
export * from './expenseInlineDocumentResponseAllOfData';
export * from './expenseInlineDocumentWithPaymentPaid';
export * from './expenseInlineDocumentWithPaymentPaidCash';
export * from './expenseInlineDocumentWithPaymentPaidCheque';
export * from './expenseInlineDocumentWithPaymentPaidCreditCard';
export * from './expenseInlineDocumentWithPaymentPaidTransfer';
export * from './expenseInlineProductItem';
export * from './expenseResponse';
export * from './expenseSimpleDocument';
export * from './expenseSimpleDocumentAllOf';
export * from './expenseSimpleDocumentResponse';
export * from './expenseSimpleDocumentResponseAllOf';
export * from './expenseSimpleDocumentResponseAllOfData';
export * from './expenseSimpleDocumentWithPaymentPaid';
export * from './expenseSimpleDocumentWithPaymentPaidCash';
export * from './expenseSimpleDocumentWithPaymentPaidCheque';
export * from './expenseSimpleDocumentWithPaymentPaidCreditCard';
export * from './expenseSimpleDocumentWithPaymentPaidTransfer';
export * from './expenseSimpleProductItem';
export * from './inlineDocument';
export * from './inlineDocumentAllOf';
export * from './inlineDocumentResponse';
export * from './inlineDocumentResponseAllOf';
export * from './inlineDocumentResponseAllOfData';
export * from './inlineDocumentWithPaymentPaid';
export * from './inlineDocumentWithPaymentPaidCash';
export * from './inlineDocumentWithPaymentPaidCheque';
export * from './inlineDocumentWithPaymentPaidCreditCard';
export * from './inlineDocumentWithPaymentPaidTransfer';
export * from './inlineDocumentWithPaymentReceiving';
export * from './inlineDocumentWithPaymentReceivingCash';
export * from './inlineDocumentWithPaymentReceivingCheque';
export * from './inlineDocumentWithPaymentReceivingCreditCard';
export * from './inlineDocumentWithPaymentReceivingTransfer';
export * from './inlineObject';
export * from './inlineObject1';
export * from './inlineObject2';
export * from './inlineObject3';
export * from './inlineObject4';
export * from './inlineObject5';
export * from './inlineObject6';
export * from './inlineObject7';
export * from './inlineObject8';
export * from './inlineObject9';
export * from './inlineProductItem';
export * from './inlineProductItemAllOf';
export * from './paymentPaidCash';
export * from './paymentPaidCheque';
export * from './paymentPaidCreditCard';
export * from './paymentPaidDocument';
export * from './paymentPaidTransfer';
export * from './paymentReceivingCash';
export * from './paymentReceivingCheque';
export * from './paymentReceivingCreditCard';
export * from './paymentReceivingDocument';
export * from './paymentReceivingTransfer';
export * from './product';
export * from './productInventory';
export * from './productInventoryBalance';
export * from './productItem';
export * from './productNonInventory';
export * from './productResponse';
export * from './productResponseData';
export * from './productService';
export * from './productType';
export * from './referencedByMe';
export * from './referencedToMe';
export * from './sendEmail';
export * from './sendEmailCoppies';
export * from './sendEmailCoppiesAllOf';
export * from './sendEmailResponse';
export * from './sendEmailResponseData';
export * from './sendEmailSimple';
export * from './shareDocument';
export * from './shareDocumentResponse';
export * from './shareDocumentResponseData';
export * from './simpleDocument';
export * from './simpleDocumentAllOf';
export * from './simpleDocumentResponse';
export * from './simpleDocumentResponseAllOf';
export * from './simpleDocumentResponseAllOfData';
export * from './simpleDocumentResponseAllOfDataCompany';
export * from './simpleDocumentResponseAllOfDataPayments';
export * from './simpleDocumentWithPaymentPaid';
export * from './simpleDocumentWithPaymentPaidCash';
export * from './simpleDocumentWithPaymentPaidCheque';
export * from './simpleDocumentWithPaymentPaidCreditCard';
export * from './simpleDocumentWithPaymentPaidTransfer';
export * from './simpleDocumentWithPaymentReceiving';
export * from './simpleDocumentWithPaymentReceivingCash';
export * from './simpleDocumentWithPaymentReceivingCheque';
export * from './simpleDocumentWithPaymentReceivingCreditCard';
export * from './simpleDocumentWithPaymentReceivingTransfer';
export * from './simpleProductItem';
export * from './statusDocument';
export * from './updateDocument';
export * from './updateExpenseDocument';
export * from './updateExpenseInlineDocument';
export * from './updateExpenseSimpleDocument';
export * from './updateInlineDocument';
export * from './updateSimpleDocument';
export * from './updateWithholidingTaxDocument';
export * from './upgradeDocument';
export * from './withholidingTaxDocument';
export * from './withholidingTaxDocumentResponse';
export * from './withholidingTaxDocumentResponseData';
export * from './withholidingTaxItem';
import localVarRequest = require('request');
export declare class ObjectSerializer {
    static findCorrectType(data: any, expectedType: string): any;
    static serialize(data: any, type: string): any;
    static deserialize(data: any, type: string): any;
}
export interface Authentication {
    applyToRequest(requestOptions: localVarRequest.Options): Promise<void> | void;
}
export declare class HttpBasicAuth implements Authentication {
    username: string;
    password: string;
    applyToRequest(requestOptions: localVarRequest.Options): void;
}
export declare class HttpBearerAuth implements Authentication {
    accessToken: string | (() => string);
    applyToRequest(requestOptions: localVarRequest.Options): void;
}
export declare class ApiKeyAuth implements Authentication {
    private location;
    private paramName;
    apiKey: string;
    constructor(location: string, paramName: string);
    applyToRequest(requestOptions: localVarRequest.Options): void;
}
export declare class OAuth implements Authentication {
    accessToken: string;
    applyToRequest(requestOptions: localVarRequest.Options): void;
}
export declare class VoidAuth implements Authentication {
    username: string;
    password: string;
    applyToRequest(_: localVarRequest.Options): void;
}
export declare type Interceptor = (requestOptions: localVarRequest.Options) => (Promise<void> | void);
