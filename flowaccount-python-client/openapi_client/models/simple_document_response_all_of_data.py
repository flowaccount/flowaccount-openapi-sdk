# coding: utf-8

"""
    FlowAccount Open API

    # Introduction  **Servers Production**    <site>Site:</site> https://www.flowaccount.com    <site>Api url:</site> https://openapi.flowaccount.com/v1    **Beta test**   <site>Site:</site> http://sandbox-new.flowaccount.com/    <site>Api url:</site> https://openapi.flowaccount.com/test    **PostMan Collection**   <site>Link:</site> https://www.getpostman.com/collections/01e7c68d7093e2092a64  # noqa: E501

    The version of the OpenAPI document: 2-oas3
    Contact: developer_support@flowaccount.com
    Generated by: https://openapi-generator.tech
"""


import pprint
import re  # noqa: F401

import six

from openapi_client.configuration import Configuration


class SimpleDocumentResponseAllOfData(object):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    """
    Attributes:
      openapi_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    openapi_types = {
        'record_id': 'int',
        'document_id': 'int',
        'document_serial': 'str',
        'contact_code': 'str',
        'contact_name': 'str',
        'contact_address': 'str',
        'contact_tax_id': 'str',
        'contact_branch': 'str',
        'contact_person': 'str',
        'contact_email': 'str',
        'contact_number': 'str',
        'contact_zip_code': 'str',
        'contact_group': 'int',
        'published_on': 'date',
        'credit_type': 'int',
        'credit_days': 'int',
        'due_date': 'date',
        'sales_name': 'str',
        'project_name': 'str',
        'reference': 'str',
        'is_vat_inclusive': 'bool',
        'use_receipt_deduction': 'bool',
        'sub_total': 'float',
        'discount_percentage': 'int',
        'discount_amount': 'float',
        'total_after_discount': 'float',
        'total_without_vat': 'float',
        'is_vat': 'bool',
        'vat_amount': 'float',
        'grand_total': 'float',
        'document_show_withholding_tax': 'bool',
        'document_withholding_tax_percentage': 'int',
        'document_deduction_type': 'int',
        'document_deduction_amount': 'float',
        'remarks': 'str',
        'internal_notes': 'str',
        'show_signature_or_stamp': 'bool',
        'items': 'list[SimpleProductItem]',
        'referenced_to_me': 'list[ReferencedToMe]',
        'referenced_by_me': 'list[ReferencedByMe]',
        'payments': 'SimpleDocumentResponseAllOfDataPayments',
        'company': 'SimpleDocumentResponseAllOfDataCompany',
        'status': 'int',
        'status_string': 'int',
        'document_type': 'int',
        'allow_delete': 'bool'
    }

    attribute_map = {
        'record_id': 'recordId',
        'document_id': 'documentId',
        'document_serial': 'documentSerial',
        'contact_code': 'contactCode',
        'contact_name': 'contactName',
        'contact_address': 'contactAddress',
        'contact_tax_id': 'contactTaxId',
        'contact_branch': 'contactBranch',
        'contact_person': 'contactPerson',
        'contact_email': 'contactEmail',
        'contact_number': 'contactNumber',
        'contact_zip_code': 'contactZipCode',
        'contact_group': 'contactGroup',
        'published_on': 'publishedOn',
        'credit_type': 'creditType',
        'credit_days': 'creditDays',
        'due_date': 'dueDate',
        'sales_name': 'salesName',
        'project_name': 'projectName',
        'reference': 'reference',
        'is_vat_inclusive': 'isVatInclusive',
        'use_receipt_deduction': 'useReceiptDeduction',
        'sub_total': 'subTotal',
        'discount_percentage': 'discountPercentage',
        'discount_amount': 'discountAmount',
        'total_after_discount': 'totalAfterDiscount',
        'total_without_vat': 'totalWithoutVat',
        'is_vat': 'isVat',
        'vat_amount': 'vatAmount',
        'grand_total': 'grandTotal',
        'document_show_withholding_tax': 'documentShowWithholdingTax',
        'document_withholding_tax_percentage': 'documentWithholdingTaxPercentage',
        'document_deduction_type': 'documentDeductionType',
        'document_deduction_amount': 'documentDeductionAmount',
        'remarks': 'remarks',
        'internal_notes': 'internalNotes',
        'show_signature_or_stamp': 'showSignatureOrStamp',
        'items': 'items',
        'referenced_to_me': 'referencedToMe',
        'referenced_by_me': 'referencedByMe',
        'payments': 'payments',
        'company': 'company',
        'status': 'status',
        'status_string': 'statusString',
        'document_type': 'documentType',
        'allow_delete': 'allowDelete'
    }

    def __init__(self, record_id=0, document_id=0, document_serial=None, contact_code=None, contact_name=None, contact_address=None, contact_tax_id=None, contact_branch=None, contact_person=None, contact_email=None, contact_number=None, contact_zip_code=None, contact_group=1, published_on=None, credit_type=1, credit_days=0, due_date=None, sales_name='อีเมล หรือ ชื่อผู้สร้างเอกสาร', project_name=None, reference=None, is_vat_inclusive=False, use_receipt_deduction=False, sub_total=0, discount_percentage=0, discount_amount=0, total_after_discount=None, total_without_vat=None, is_vat=False, vat_amount=None, grand_total=None, document_show_withholding_tax=False, document_withholding_tax_percentage=0, document_deduction_type=0, document_deduction_amount=0, remarks=None, internal_notes=None, show_signature_or_stamp=True, items=None, referenced_to_me=None, referenced_by_me=None, payments=None, company=None, status=None, status_string=None, document_type=None, allow_delete=None, local_vars_configuration=None):  # noqa: E501
        """SimpleDocumentResponseAllOfData - a model defined in OpenAPI"""  # noqa: E501
        if local_vars_configuration is None:
            local_vars_configuration = Configuration()
        self.local_vars_configuration = local_vars_configuration

        self._record_id = None
        self._document_id = None
        self._document_serial = None
        self._contact_code = None
        self._contact_name = None
        self._contact_address = None
        self._contact_tax_id = None
        self._contact_branch = None
        self._contact_person = None
        self._contact_email = None
        self._contact_number = None
        self._contact_zip_code = None
        self._contact_group = None
        self._published_on = None
        self._credit_type = None
        self._credit_days = None
        self._due_date = None
        self._sales_name = None
        self._project_name = None
        self._reference = None
        self._is_vat_inclusive = None
        self._use_receipt_deduction = None
        self._sub_total = None
        self._discount_percentage = None
        self._discount_amount = None
        self._total_after_discount = None
        self._total_without_vat = None
        self._is_vat = None
        self._vat_amount = None
        self._grand_total = None
        self._document_show_withholding_tax = None
        self._document_withholding_tax_percentage = None
        self._document_deduction_type = None
        self._document_deduction_amount = None
        self._remarks = None
        self._internal_notes = None
        self._show_signature_or_stamp = None
        self._items = None
        self._referenced_to_me = None
        self._referenced_by_me = None
        self._payments = None
        self._company = None
        self._status = None
        self._status_string = None
        self._document_type = None
        self._allow_delete = None
        self.discriminator = None

        if record_id is not None:
            self.record_id = record_id
        if document_id is not None:
            self.document_id = document_id
        if document_serial is not None:
            self.document_serial = document_serial
        if contact_code is not None:
            self.contact_code = contact_code
        if contact_name is not None:
            self.contact_name = contact_name
        if contact_address is not None:
            self.contact_address = contact_address
        if contact_tax_id is not None:
            self.contact_tax_id = contact_tax_id
        if contact_branch is not None:
            self.contact_branch = contact_branch
        if contact_person is not None:
            self.contact_person = contact_person
        if contact_email is not None:
            self.contact_email = contact_email
        if contact_number is not None:
            self.contact_number = contact_number
        if contact_zip_code is not None:
            self.contact_zip_code = contact_zip_code
        if contact_group is not None:
            self.contact_group = contact_group
        if published_on is not None:
            self.published_on = published_on
        if credit_type is not None:
            self.credit_type = credit_type
        if credit_days is not None:
            self.credit_days = credit_days
        if due_date is not None:
            self.due_date = due_date
        if sales_name is not None:
            self.sales_name = sales_name
        if project_name is not None:
            self.project_name = project_name
        if reference is not None:
            self.reference = reference
        if is_vat_inclusive is not None:
            self.is_vat_inclusive = is_vat_inclusive
        if use_receipt_deduction is not None:
            self.use_receipt_deduction = use_receipt_deduction
        if sub_total is not None:
            self.sub_total = sub_total
        if discount_percentage is not None:
            self.discount_percentage = discount_percentage
        if discount_amount is not None:
            self.discount_amount = discount_amount
        if total_after_discount is not None:
            self.total_after_discount = total_after_discount
        if total_without_vat is not None:
            self.total_without_vat = total_without_vat
        if is_vat is not None:
            self.is_vat = is_vat
        if vat_amount is not None:
            self.vat_amount = vat_amount
        if grand_total is not None:
            self.grand_total = grand_total
        if document_show_withholding_tax is not None:
            self.document_show_withholding_tax = document_show_withholding_tax
        if document_withholding_tax_percentage is not None:
            self.document_withholding_tax_percentage = document_withholding_tax_percentage
        if document_deduction_type is not None:
            self.document_deduction_type = document_deduction_type
        if document_deduction_amount is not None:
            self.document_deduction_amount = document_deduction_amount
        if remarks is not None:
            self.remarks = remarks
        if internal_notes is not None:
            self.internal_notes = internal_notes
        if show_signature_or_stamp is not None:
            self.show_signature_or_stamp = show_signature_or_stamp
        if items is not None:
            self.items = items
        if referenced_to_me is not None:
            self.referenced_to_me = referenced_to_me
        if referenced_by_me is not None:
            self.referenced_by_me = referenced_by_me
        if payments is not None:
            self.payments = payments
        if company is not None:
            self.company = company
        if status is not None:
            self.status = status
        if status_string is not None:
            self.status_string = status_string
        if document_type is not None:
            self.document_type = document_type
        if allow_delete is not None:
            self.allow_delete = allow_delete

    @property
    def record_id(self):
        """Gets the record_id of this SimpleDocumentResponseAllOfData.  # noqa: E501

        id ของเอกสาร  # noqa: E501

        :return: The record_id of this SimpleDocumentResponseAllOfData.  # noqa: E501
        :rtype: int
        """
        return self._record_id

    @record_id.setter
    def record_id(self, record_id):
        """Sets the record_id of this SimpleDocumentResponseAllOfData.

        id ของเอกสาร  # noqa: E501

        :param record_id: The record_id of this SimpleDocumentResponseAllOfData.  # noqa: E501
        :type: int
        """

        self._record_id = record_id

    @property
    def document_id(self):
        """Gets the document_id of this SimpleDocumentResponseAllOfData.  # noqa: E501

        id ของเอกสาร  # noqa: E501

        :return: The document_id of this SimpleDocumentResponseAllOfData.  # noqa: E501
        :rtype: int
        """
        return self._document_id

    @document_id.setter
    def document_id(self, document_id):
        """Sets the document_id of this SimpleDocumentResponseAllOfData.

        id ของเอกสาร  # noqa: E501

        :param document_id: The document_id of this SimpleDocumentResponseAllOfData.  # noqa: E501
        :type: int
        """

        self._document_id = document_id

    @property
    def document_serial(self):
        """Gets the document_serial of this SimpleDocumentResponseAllOfData.  # noqa: E501

        เลขที่เอกสาร  # noqa: E501

        :return: The document_serial of this SimpleDocumentResponseAllOfData.  # noqa: E501
        :rtype: str
        """
        return self._document_serial

    @document_serial.setter
    def document_serial(self, document_serial):
        """Sets the document_serial of this SimpleDocumentResponseAllOfData.

        เลขที่เอกสาร  # noqa: E501

        :param document_serial: The document_serial of this SimpleDocumentResponseAllOfData.  # noqa: E501
        :type: str
        """

        self._document_serial = document_serial

    @property
    def contact_code(self):
        """Gets the contact_code of this SimpleDocumentResponseAllOfData.  # noqa: E501

        รหัส ลูกค้า/ผู้จำหน่าย  # noqa: E501

        :return: The contact_code of this SimpleDocumentResponseAllOfData.  # noqa: E501
        :rtype: str
        """
        return self._contact_code

    @contact_code.setter
    def contact_code(self, contact_code):
        """Sets the contact_code of this SimpleDocumentResponseAllOfData.

        รหัส ลูกค้า/ผู้จำหน่าย  # noqa: E501

        :param contact_code: The contact_code of this SimpleDocumentResponseAllOfData.  # noqa: E501
        :type: str
        """

        self._contact_code = contact_code

    @property
    def contact_name(self):
        """Gets the contact_name of this SimpleDocumentResponseAllOfData.  # noqa: E501

        ชื่อ ลูกค้า/ผู้จำหน่าย <br> <ex>Example: บริษัท ลูกค้า จำกัด, คุณลูกค้า ซื้อประจำ</ex>  # noqa: E501

        :return: The contact_name of this SimpleDocumentResponseAllOfData.  # noqa: E501
        :rtype: str
        """
        return self._contact_name

    @contact_name.setter
    def contact_name(self, contact_name):
        """Sets the contact_name of this SimpleDocumentResponseAllOfData.

        ชื่อ ลูกค้า/ผู้จำหน่าย <br> <ex>Example: บริษัท ลูกค้า จำกัด, คุณลูกค้า ซื้อประจำ</ex>  # noqa: E501

        :param contact_name: The contact_name of this SimpleDocumentResponseAllOfData.  # noqa: E501
        :type: str
        """

        self._contact_name = contact_name

    @property
    def contact_address(self):
        """Gets the contact_address of this SimpleDocumentResponseAllOfData.  # noqa: E501

        ที่อยู่ ลูกค้า/ผู้จำหน่าย  # noqa: E501

        :return: The contact_address of this SimpleDocumentResponseAllOfData.  # noqa: E501
        :rtype: str
        """
        return self._contact_address

    @contact_address.setter
    def contact_address(self, contact_address):
        """Sets the contact_address of this SimpleDocumentResponseAllOfData.

        ที่อยู่ ลูกค้า/ผู้จำหน่าย  # noqa: E501

        :param contact_address: The contact_address of this SimpleDocumentResponseAllOfData.  # noqa: E501
        :type: str
        """

        self._contact_address = contact_address

    @property
    def contact_tax_id(self):
        """Gets the contact_tax_id of this SimpleDocumentResponseAllOfData.  # noqa: E501

        เลขประจำตัวผู้เสียภาษี ลูกค้า หรือ ผู้จำหน่าย/ลูกค้า <br> (ถ้ามีจำเป็นต้องครบ 13 หลัก) <br> <ex>Example: 1234567890123 </ex>  # noqa: E501

        :return: The contact_tax_id of this SimpleDocumentResponseAllOfData.  # noqa: E501
        :rtype: str
        """
        return self._contact_tax_id

    @contact_tax_id.setter
    def contact_tax_id(self, contact_tax_id):
        """Sets the contact_tax_id of this SimpleDocumentResponseAllOfData.

        เลขประจำตัวผู้เสียภาษี ลูกค้า หรือ ผู้จำหน่าย/ลูกค้า <br> (ถ้ามีจำเป็นต้องครบ 13 หลัก) <br> <ex>Example: 1234567890123 </ex>  # noqa: E501

        :param contact_tax_id: The contact_tax_id of this SimpleDocumentResponseAllOfData.  # noqa: E501
        :type: str
        """

        self._contact_tax_id = contact_tax_id

    @property
    def contact_branch(self):
        """Gets the contact_branch of this SimpleDocumentResponseAllOfData.  # noqa: E501

        สำนักงาน/สาขา  # noqa: E501

        :return: The contact_branch of this SimpleDocumentResponseAllOfData.  # noqa: E501
        :rtype: str
        """
        return self._contact_branch

    @contact_branch.setter
    def contact_branch(self, contact_branch):
        """Sets the contact_branch of this SimpleDocumentResponseAllOfData.

        สำนักงาน/สาขา  # noqa: E501

        :param contact_branch: The contact_branch of this SimpleDocumentResponseAllOfData.  # noqa: E501
        :type: str
        """

        self._contact_branch = contact_branch

    @property
    def contact_person(self):
        """Gets the contact_person of this SimpleDocumentResponseAllOfData.  # noqa: E501

        ชื่อผู้ติดต่อ  # noqa: E501

        :return: The contact_person of this SimpleDocumentResponseAllOfData.  # noqa: E501
        :rtype: str
        """
        return self._contact_person

    @contact_person.setter
    def contact_person(self, contact_person):
        """Sets the contact_person of this SimpleDocumentResponseAllOfData.

        ชื่อผู้ติดต่อ  # noqa: E501

        :param contact_person: The contact_person of this SimpleDocumentResponseAllOfData.  # noqa: E501
        :type: str
        """

        self._contact_person = contact_person

    @property
    def contact_email(self):
        """Gets the contact_email of this SimpleDocumentResponseAllOfData.  # noqa: E501

        อีเมลผู้ติดต่อ <br> <ex>Example: contact@email.com</ex>  # noqa: E501

        :return: The contact_email of this SimpleDocumentResponseAllOfData.  # noqa: E501
        :rtype: str
        """
        return self._contact_email

    @contact_email.setter
    def contact_email(self, contact_email):
        """Sets the contact_email of this SimpleDocumentResponseAllOfData.

        อีเมลผู้ติดต่อ <br> <ex>Example: contact@email.com</ex>  # noqa: E501

        :param contact_email: The contact_email of this SimpleDocumentResponseAllOfData.  # noqa: E501
        :type: str
        """

        self._contact_email = contact_email

    @property
    def contact_number(self):
        """Gets the contact_number of this SimpleDocumentResponseAllOfData.  # noqa: E501

        เบอร์มือถือผู้ติดต่อ <br> <ex>Example: 099-999-9999</ex>  # noqa: E501

        :return: The contact_number of this SimpleDocumentResponseAllOfData.  # noqa: E501
        :rtype: str
        """
        return self._contact_number

    @contact_number.setter
    def contact_number(self, contact_number):
        """Sets the contact_number of this SimpleDocumentResponseAllOfData.

        เบอร์มือถือผู้ติดต่อ <br> <ex>Example: 099-999-9999</ex>  # noqa: E501

        :param contact_number: The contact_number of this SimpleDocumentResponseAllOfData.  # noqa: E501
        :type: str
        """

        self._contact_number = contact_number

    @property
    def contact_zip_code(self):
        """Gets the contact_zip_code of this SimpleDocumentResponseAllOfData.  # noqa: E501

        รหัสไปรษณีย์ติดต่อ  # noqa: E501

        :return: The contact_zip_code of this SimpleDocumentResponseAllOfData.  # noqa: E501
        :rtype: str
        """
        return self._contact_zip_code

    @contact_zip_code.setter
    def contact_zip_code(self, contact_zip_code):
        """Sets the contact_zip_code of this SimpleDocumentResponseAllOfData.

        รหัสไปรษณีย์ติดต่อ  # noqa: E501

        :param contact_zip_code: The contact_zip_code of this SimpleDocumentResponseAllOfData.  # noqa: E501
        :type: str
        """

        self._contact_zip_code = contact_zip_code

    @property
    def contact_group(self):
        """Gets the contact_group of this SimpleDocumentResponseAllOfData.  # noqa: E501

        ประผู้ติดต่อ <br> 1 = บุคคลธรรมดา <br> 3 = นิติบุคคล  # noqa: E501

        :return: The contact_group of this SimpleDocumentResponseAllOfData.  # noqa: E501
        :rtype: int
        """
        return self._contact_group

    @contact_group.setter
    def contact_group(self, contact_group):
        """Sets the contact_group of this SimpleDocumentResponseAllOfData.

        ประผู้ติดต่อ <br> 1 = บุคคลธรรมดา <br> 3 = นิติบุคคล  # noqa: E501

        :param contact_group: The contact_group of this SimpleDocumentResponseAllOfData.  # noqa: E501
        :type: int
        """

        self._contact_group = contact_group

    @property
    def published_on(self):
        """Gets the published_on of this SimpleDocumentResponseAllOfData.  # noqa: E501

        วันที่เอกสาร รูปแบบ yyyy-MM-dd <br> <ex>Example: 2020-01-01</ex>  # noqa: E501

        :return: The published_on of this SimpleDocumentResponseAllOfData.  # noqa: E501
        :rtype: date
        """
        return self._published_on

    @published_on.setter
    def published_on(self, published_on):
        """Sets the published_on of this SimpleDocumentResponseAllOfData.

        วันที่เอกสาร รูปแบบ yyyy-MM-dd <br> <ex>Example: 2020-01-01</ex>  # noqa: E501

        :param published_on: The published_on of this SimpleDocumentResponseAllOfData.  # noqa: E501
        :type: date
        """

        self._published_on = published_on

    @property
    def credit_type(self):
        """Gets the credit_type of this SimpleDocumentResponseAllOfData.  # noqa: E501

        รูปแบบเครดิต <br> 1 = เครดิต (วัน) <br> 3 = เงินสด  <br> 5 = เครดิต (ไม่แสดงวันที่ครบกำหนด)  # noqa: E501

        :return: The credit_type of this SimpleDocumentResponseAllOfData.  # noqa: E501
        :rtype: int
        """
        return self._credit_type

    @credit_type.setter
    def credit_type(self, credit_type):
        """Sets the credit_type of this SimpleDocumentResponseAllOfData.

        รูปแบบเครดิต <br> 1 = เครดิต (วัน) <br> 3 = เงินสด  <br> 5 = เครดิต (ไม่แสดงวันที่ครบกำหนด)  # noqa: E501

        :param credit_type: The credit_type of this SimpleDocumentResponseAllOfData.  # noqa: E501
        :type: int
        """

        self._credit_type = credit_type

    @property
    def credit_days(self):
        """Gets the credit_days of this SimpleDocumentResponseAllOfData.  # noqa: E501

        จำนวนวันที่ให้เครดิต <br> <ex>Example: 30</ex>  # noqa: E501

        :return: The credit_days of this SimpleDocumentResponseAllOfData.  # noqa: E501
        :rtype: int
        """
        return self._credit_days

    @credit_days.setter
    def credit_days(self, credit_days):
        """Sets the credit_days of this SimpleDocumentResponseAllOfData.

        จำนวนวันที่ให้เครดิต <br> <ex>Example: 30</ex>  # noqa: E501

        :param credit_days: The credit_days of this SimpleDocumentResponseAllOfData.  # noqa: E501
        :type: int
        """

        self._credit_days = credit_days

    @property
    def due_date(self):
        """Gets the due_date of this SimpleDocumentResponseAllOfData.  # noqa: E501

        วันครบกำหนดเอกสาร รูปแบบ yyyy-MM-dd <br> <ex>Example: 2020-01-01</ex>  # noqa: E501

        :return: The due_date of this SimpleDocumentResponseAllOfData.  # noqa: E501
        :rtype: date
        """
        return self._due_date

    @due_date.setter
    def due_date(self, due_date):
        """Sets the due_date of this SimpleDocumentResponseAllOfData.

        วันครบกำหนดเอกสาร รูปแบบ yyyy-MM-dd <br> <ex>Example: 2020-01-01</ex>  # noqa: E501

        :param due_date: The due_date of this SimpleDocumentResponseAllOfData.  # noqa: E501
        :type: date
        """

        self._due_date = due_date

    @property
    def sales_name(self):
        """Gets the sales_name of this SimpleDocumentResponseAllOfData.  # noqa: E501

        ชื่อผู้สร้างเอกสาร หรือ ชื่อพนักงานขาย <br> <ex>Example: sale@email.com or Mr.Sale Shop</ex>  # noqa: E501

        :return: The sales_name of this SimpleDocumentResponseAllOfData.  # noqa: E501
        :rtype: str
        """
        return self._sales_name

    @sales_name.setter
    def sales_name(self, sales_name):
        """Sets the sales_name of this SimpleDocumentResponseAllOfData.

        ชื่อผู้สร้างเอกสาร หรือ ชื่อพนักงานขาย <br> <ex>Example: sale@email.com or Mr.Sale Shop</ex>  # noqa: E501

        :param sales_name: The sales_name of this SimpleDocumentResponseAllOfData.  # noqa: E501
        :type: str
        """

        self._sales_name = sales_name

    @property
    def project_name(self):
        """Gets the project_name of this SimpleDocumentResponseAllOfData.  # noqa: E501

        ชื่อโปรเจค  # noqa: E501

        :return: The project_name of this SimpleDocumentResponseAllOfData.  # noqa: E501
        :rtype: str
        """
        return self._project_name

    @project_name.setter
    def project_name(self, project_name):
        """Sets the project_name of this SimpleDocumentResponseAllOfData.

        ชื่อโปรเจค  # noqa: E501

        :param project_name: The project_name of this SimpleDocumentResponseAllOfData.  # noqa: E501
        :type: str
        """

        self._project_name = project_name

    @property
    def reference(self):
        """Gets the reference of this SimpleDocumentResponseAllOfData.  # noqa: E501

        เลขที่อ้างอิง หรือ เลขที่เอกสารที่เกี่ยวข้อง <br> <ex>Example: INV2020010001</ex>  # noqa: E501

        :return: The reference of this SimpleDocumentResponseAllOfData.  # noqa: E501
        :rtype: str
        """
        return self._reference

    @reference.setter
    def reference(self, reference):
        """Sets the reference of this SimpleDocumentResponseAllOfData.

        เลขที่อ้างอิง หรือ เลขที่เอกสารที่เกี่ยวข้อง <br> <ex>Example: INV2020010001</ex>  # noqa: E501

        :param reference: The reference of this SimpleDocumentResponseAllOfData.  # noqa: E501
        :type: str
        """

        self._reference = reference

    @property
    def is_vat_inclusive(self):
        """Gets the is_vat_inclusive of this SimpleDocumentResponseAllOfData.  # noqa: E501

        มูลค่าเอกสารรวมภาษีแล้วหรือไม่  # noqa: E501

        :return: The is_vat_inclusive of this SimpleDocumentResponseAllOfData.  # noqa: E501
        :rtype: bool
        """
        return self._is_vat_inclusive

    @is_vat_inclusive.setter
    def is_vat_inclusive(self, is_vat_inclusive):
        """Sets the is_vat_inclusive of this SimpleDocumentResponseAllOfData.

        มูลค่าเอกสารรวมภาษีแล้วหรือไม่  # noqa: E501

        :param is_vat_inclusive: The is_vat_inclusive of this SimpleDocumentResponseAllOfData.  # noqa: E501
        :type: bool
        """

        self._is_vat_inclusive = is_vat_inclusive

    @property
    def use_receipt_deduction(self):
        """Gets the use_receipt_deduction of this SimpleDocumentResponseAllOfData.  # noqa: E501

        เปิดใช้งานฟังก์ชั่น ปรับลดท้ายเอกสาร <br> (เฉพาะเอกสารใบกำกับภาษี / ใบเสร็จรับเงิน และ ใบเสร็จรับเงิน)  # noqa: E501

        :return: The use_receipt_deduction of this SimpleDocumentResponseAllOfData.  # noqa: E501
        :rtype: bool
        """
        return self._use_receipt_deduction

    @use_receipt_deduction.setter
    def use_receipt_deduction(self, use_receipt_deduction):
        """Sets the use_receipt_deduction of this SimpleDocumentResponseAllOfData.

        เปิดใช้งานฟังก์ชั่น ปรับลดท้ายเอกสาร <br> (เฉพาะเอกสารใบกำกับภาษี / ใบเสร็จรับเงิน และ ใบเสร็จรับเงิน)  # noqa: E501

        :param use_receipt_deduction: The use_receipt_deduction of this SimpleDocumentResponseAllOfData.  # noqa: E501
        :type: bool
        """

        self._use_receipt_deduction = use_receipt_deduction

    @property
    def sub_total(self):
        """Gets the sub_total of this SimpleDocumentResponseAllOfData.  # noqa: E501

        มูลค่ารวมเป็นเงิน  # noqa: E501

        :return: The sub_total of this SimpleDocumentResponseAllOfData.  # noqa: E501
        :rtype: float
        """
        return self._sub_total

    @sub_total.setter
    def sub_total(self, sub_total):
        """Sets the sub_total of this SimpleDocumentResponseAllOfData.

        มูลค่ารวมเป็นเงิน  # noqa: E501

        :param sub_total: The sub_total of this SimpleDocumentResponseAllOfData.  # noqa: E501
        :type: float
        """

        self._sub_total = sub_total

    @property
    def discount_percentage(self):
        """Gets the discount_percentage of this SimpleDocumentResponseAllOfData.  # noqa: E501

        มูลค่าส่วนลดเป็นเปอร์เซ็นต์  # noqa: E501

        :return: The discount_percentage of this SimpleDocumentResponseAllOfData.  # noqa: E501
        :rtype: int
        """
        return self._discount_percentage

    @discount_percentage.setter
    def discount_percentage(self, discount_percentage):
        """Sets the discount_percentage of this SimpleDocumentResponseAllOfData.

        มูลค่าส่วนลดเป็นเปอร์เซ็นต์  # noqa: E501

        :param discount_percentage: The discount_percentage of this SimpleDocumentResponseAllOfData.  # noqa: E501
        :type: int
        """

        self._discount_percentage = discount_percentage

    @property
    def discount_amount(self):
        """Gets the discount_amount of this SimpleDocumentResponseAllOfData.  # noqa: E501

        มูลค่าส่วนลดเป็นจำนวน (บาท)  # noqa: E501

        :return: The discount_amount of this SimpleDocumentResponseAllOfData.  # noqa: E501
        :rtype: float
        """
        return self._discount_amount

    @discount_amount.setter
    def discount_amount(self, discount_amount):
        """Sets the discount_amount of this SimpleDocumentResponseAllOfData.

        มูลค่าส่วนลดเป็นจำนวน (บาท)  # noqa: E501

        :param discount_amount: The discount_amount of this SimpleDocumentResponseAllOfData.  # noqa: E501
        :type: float
        """

        self._discount_amount = discount_amount

    @property
    def total_after_discount(self):
        """Gets the total_after_discount of this SimpleDocumentResponseAllOfData.  # noqa: E501

        มูลค่าหลังหักส่วนลด  # noqa: E501

        :return: The total_after_discount of this SimpleDocumentResponseAllOfData.  # noqa: E501
        :rtype: float
        """
        return self._total_after_discount

    @total_after_discount.setter
    def total_after_discount(self, total_after_discount):
        """Sets the total_after_discount of this SimpleDocumentResponseAllOfData.

        มูลค่าหลังหักส่วนลด  # noqa: E501

        :param total_after_discount: The total_after_discount of this SimpleDocumentResponseAllOfData.  # noqa: E501
        :type: float
        """

        self._total_after_discount = total_after_discount

    @property
    def total_without_vat(self):
        """Gets the total_without_vat of this SimpleDocumentResponseAllOfData.  # noqa: E501

        มูลค่าไม่รวมภาษีมูลค่าเพิ่ม  # noqa: E501

        :return: The total_without_vat of this SimpleDocumentResponseAllOfData.  # noqa: E501
        :rtype: float
        """
        return self._total_without_vat

    @total_without_vat.setter
    def total_without_vat(self, total_without_vat):
        """Sets the total_without_vat of this SimpleDocumentResponseAllOfData.

        มูลค่าไม่รวมภาษีมูลค่าเพิ่ม  # noqa: E501

        :param total_without_vat: The total_without_vat of this SimpleDocumentResponseAllOfData.  # noqa: E501
        :type: float
        """

        self._total_without_vat = total_without_vat

    @property
    def is_vat(self):
        """Gets the is_vat of this SimpleDocumentResponseAllOfData.  # noqa: E501

        มูลค่าหลังหักส่วนลด มีภาษีมูลค่าเพิ่ม 7%  # noqa: E501

        :return: The is_vat of this SimpleDocumentResponseAllOfData.  # noqa: E501
        :rtype: bool
        """
        return self._is_vat

    @is_vat.setter
    def is_vat(self, is_vat):
        """Sets the is_vat of this SimpleDocumentResponseAllOfData.

        มูลค่าหลังหักส่วนลด มีภาษีมูลค่าเพิ่ม 7%  # noqa: E501

        :param is_vat: The is_vat of this SimpleDocumentResponseAllOfData.  # noqa: E501
        :type: bool
        """

        self._is_vat = is_vat

    @property
    def vat_amount(self):
        """Gets the vat_amount of this SimpleDocumentResponseAllOfData.  # noqa: E501

        ภาษีมูลค่าเพิ่ม  # noqa: E501

        :return: The vat_amount of this SimpleDocumentResponseAllOfData.  # noqa: E501
        :rtype: float
        """
        return self._vat_amount

    @vat_amount.setter
    def vat_amount(self, vat_amount):
        """Sets the vat_amount of this SimpleDocumentResponseAllOfData.

        ภาษีมูลค่าเพิ่ม  # noqa: E501

        :param vat_amount: The vat_amount of this SimpleDocumentResponseAllOfData.  # noqa: E501
        :type: float
        """

        self._vat_amount = vat_amount

    @property
    def grand_total(self):
        """Gets the grand_total of this SimpleDocumentResponseAllOfData.  # noqa: E501

        จำนวนเงินรวมทั้งสิ้น (รวมภาษีมูลค่าเพิ่ม 7% แล้ว)  # noqa: E501

        :return: The grand_total of this SimpleDocumentResponseAllOfData.  # noqa: E501
        :rtype: float
        """
        return self._grand_total

    @grand_total.setter
    def grand_total(self, grand_total):
        """Sets the grand_total of this SimpleDocumentResponseAllOfData.

        จำนวนเงินรวมทั้งสิ้น (รวมภาษีมูลค่าเพิ่ม 7% แล้ว)  # noqa: E501

        :param grand_total: The grand_total of this SimpleDocumentResponseAllOfData.  # noqa: E501
        :type: float
        """

        self._grand_total = grand_total

    @property
    def document_show_withholding_tax(self):
        """Gets the document_show_withholding_tax of this SimpleDocumentResponseAllOfData.  # noqa: E501

        แสดงหรือไม่แสดง หัก ณ ที่จ่ายท้ายเอกสาร  # noqa: E501

        :return: The document_show_withholding_tax of this SimpleDocumentResponseAllOfData.  # noqa: E501
        :rtype: bool
        """
        return self._document_show_withholding_tax

    @document_show_withholding_tax.setter
    def document_show_withholding_tax(self, document_show_withholding_tax):
        """Sets the document_show_withholding_tax of this SimpleDocumentResponseAllOfData.

        แสดงหรือไม่แสดง หัก ณ ที่จ่ายท้ายเอกสาร  # noqa: E501

        :param document_show_withholding_tax: The document_show_withholding_tax of this SimpleDocumentResponseAllOfData.  # noqa: E501
        :type: bool
        """

        self._document_show_withholding_tax = document_show_withholding_tax

    @property
    def document_withholding_tax_percentage(self):
        """Gets the document_withholding_tax_percentage of this SimpleDocumentResponseAllOfData.  # noqa: E501

        ภาษี ณ ที่จ่าย (%)  # noqa: E501

        :return: The document_withholding_tax_percentage of this SimpleDocumentResponseAllOfData.  # noqa: E501
        :rtype: int
        """
        return self._document_withholding_tax_percentage

    @document_withholding_tax_percentage.setter
    def document_withholding_tax_percentage(self, document_withholding_tax_percentage):
        """Sets the document_withholding_tax_percentage of this SimpleDocumentResponseAllOfData.

        ภาษี ณ ที่จ่าย (%)  # noqa: E501

        :param document_withholding_tax_percentage: The document_withholding_tax_percentage of this SimpleDocumentResponseAllOfData.  # noqa: E501
        :type: int
        """

        self._document_withholding_tax_percentage = document_withholding_tax_percentage

    @property
    def document_deduction_type(self):
        """Gets the document_deduction_type of this SimpleDocumentResponseAllOfData.  # noqa: E501

        ประเภทรายการปรับลด <br> 1 = ส่วนลดพิเศษ <br> 3 = ค่านายหน้าและส่วนแบ่งการขาย <br> 5 = ค่าดำเนินการ <br> 7 = ปัดเศษ <br> (เฉพาะเอกสารใบกำกับภาษี/ใบเสร็จรับเงิน)  # noqa: E501

        :return: The document_deduction_type of this SimpleDocumentResponseAllOfData.  # noqa: E501
        :rtype: int
        """
        return self._document_deduction_type

    @document_deduction_type.setter
    def document_deduction_type(self, document_deduction_type):
        """Sets the document_deduction_type of this SimpleDocumentResponseAllOfData.

        ประเภทรายการปรับลด <br> 1 = ส่วนลดพิเศษ <br> 3 = ค่านายหน้าและส่วนแบ่งการขาย <br> 5 = ค่าดำเนินการ <br> 7 = ปัดเศษ <br> (เฉพาะเอกสารใบกำกับภาษี/ใบเสร็จรับเงิน)  # noqa: E501

        :param document_deduction_type: The document_deduction_type of this SimpleDocumentResponseAllOfData.  # noqa: E501
        :type: int
        """

        self._document_deduction_type = document_deduction_type

    @property
    def document_deduction_amount(self):
        """Gets the document_deduction_amount of this SimpleDocumentResponseAllOfData.  # noqa: E501

        จำนวนเงินยอดรายการปรับลด <br> (เฉพาะเอกสารใบกำกับภาษี/ใบเสร็จรับเงิน)  # noqa: E501

        :return: The document_deduction_amount of this SimpleDocumentResponseAllOfData.  # noqa: E501
        :rtype: float
        """
        return self._document_deduction_amount

    @document_deduction_amount.setter
    def document_deduction_amount(self, document_deduction_amount):
        """Sets the document_deduction_amount of this SimpleDocumentResponseAllOfData.

        จำนวนเงินยอดรายการปรับลด <br> (เฉพาะเอกสารใบกำกับภาษี/ใบเสร็จรับเงิน)  # noqa: E501

        :param document_deduction_amount: The document_deduction_amount of this SimpleDocumentResponseAllOfData.  # noqa: E501
        :type: float
        """

        self._document_deduction_amount = document_deduction_amount

    @property
    def remarks(self):
        """Gets the remarks of this SimpleDocumentResponseAllOfData.  # noqa: E501

        หมายเหตุเอกสาร  # noqa: E501

        :return: The remarks of this SimpleDocumentResponseAllOfData.  # noqa: E501
        :rtype: str
        """
        return self._remarks

    @remarks.setter
    def remarks(self, remarks):
        """Sets the remarks of this SimpleDocumentResponseAllOfData.

        หมายเหตุเอกสาร  # noqa: E501

        :param remarks: The remarks of this SimpleDocumentResponseAllOfData.  # noqa: E501
        :type: str
        """

        self._remarks = remarks

    @property
    def internal_notes(self):
        """Gets the internal_notes of this SimpleDocumentResponseAllOfData.  # noqa: E501

        โน๊ตภายในบริษัท  # noqa: E501

        :return: The internal_notes of this SimpleDocumentResponseAllOfData.  # noqa: E501
        :rtype: str
        """
        return self._internal_notes

    @internal_notes.setter
    def internal_notes(self, internal_notes):
        """Sets the internal_notes of this SimpleDocumentResponseAllOfData.

        โน๊ตภายในบริษัท  # noqa: E501

        :param internal_notes: The internal_notes of this SimpleDocumentResponseAllOfData.  # noqa: E501
        :type: str
        """

        self._internal_notes = internal_notes

    @property
    def show_signature_or_stamp(self):
        """Gets the show_signature_or_stamp of this SimpleDocumentResponseAllOfData.  # noqa: E501

        ลายเซ็นอิเล็กทรอนิกส์และตรายาง  # noqa: E501

        :return: The show_signature_or_stamp of this SimpleDocumentResponseAllOfData.  # noqa: E501
        :rtype: bool
        """
        return self._show_signature_or_stamp

    @show_signature_or_stamp.setter
    def show_signature_or_stamp(self, show_signature_or_stamp):
        """Sets the show_signature_or_stamp of this SimpleDocumentResponseAllOfData.

        ลายเซ็นอิเล็กทรอนิกส์และตรายาง  # noqa: E501

        :param show_signature_or_stamp: The show_signature_or_stamp of this SimpleDocumentResponseAllOfData.  # noqa: E501
        :type: bool
        """

        self._show_signature_or_stamp = show_signature_or_stamp

    @property
    def items(self):
        """Gets the items of this SimpleDocumentResponseAllOfData.  # noqa: E501

        รายการสินค้าใช้งานสำหรับเอกสาร Simple Document  # noqa: E501

        :return: The items of this SimpleDocumentResponseAllOfData.  # noqa: E501
        :rtype: list[SimpleProductItem]
        """
        return self._items

    @items.setter
    def items(self, items):
        """Sets the items of this SimpleDocumentResponseAllOfData.

        รายการสินค้าใช้งานสำหรับเอกสาร Simple Document  # noqa: E501

        :param items: The items of this SimpleDocumentResponseAllOfData.  # noqa: E501
        :type: list[SimpleProductItem]
        """

        self._items = items

    @property
    def referenced_to_me(self):
        """Gets the referenced_to_me of this SimpleDocumentResponseAllOfData.  # noqa: E501

        ข้อมูลเอกสารปลายทางที่อ้างอิง ถึง เอกสารฉบับนี้  # noqa: E501

        :return: The referenced_to_me of this SimpleDocumentResponseAllOfData.  # noqa: E501
        :rtype: list[ReferencedToMe]
        """
        return self._referenced_to_me

    @referenced_to_me.setter
    def referenced_to_me(self, referenced_to_me):
        """Sets the referenced_to_me of this SimpleDocumentResponseAllOfData.

        ข้อมูลเอกสารปลายทางที่อ้างอิง ถึง เอกสารฉบับนี้  # noqa: E501

        :param referenced_to_me: The referenced_to_me of this SimpleDocumentResponseAllOfData.  # noqa: E501
        :type: list[ReferencedToMe]
        """

        self._referenced_to_me = referenced_to_me

    @property
    def referenced_by_me(self):
        """Gets the referenced_by_me of this SimpleDocumentResponseAllOfData.  # noqa: E501

        เอกสารต้นทางที่อ้างอิง ถึง เอกสารฉบับนี้  # noqa: E501

        :return: The referenced_by_me of this SimpleDocumentResponseAllOfData.  # noqa: E501
        :rtype: list[ReferencedByMe]
        """
        return self._referenced_by_me

    @referenced_by_me.setter
    def referenced_by_me(self, referenced_by_me):
        """Sets the referenced_by_me of this SimpleDocumentResponseAllOfData.

        เอกสารต้นทางที่อ้างอิง ถึง เอกสารฉบับนี้  # noqa: E501

        :param referenced_by_me: The referenced_by_me of this SimpleDocumentResponseAllOfData.  # noqa: E501
        :type: list[ReferencedByMe]
        """

        self._referenced_by_me = referenced_by_me

    @property
    def payments(self):
        """Gets the payments of this SimpleDocumentResponseAllOfData.  # noqa: E501


        :return: The payments of this SimpleDocumentResponseAllOfData.  # noqa: E501
        :rtype: SimpleDocumentResponseAllOfDataPayments
        """
        return self._payments

    @payments.setter
    def payments(self, payments):
        """Sets the payments of this SimpleDocumentResponseAllOfData.


        :param payments: The payments of this SimpleDocumentResponseAllOfData.  # noqa: E501
        :type: SimpleDocumentResponseAllOfDataPayments
        """

        self._payments = payments

    @property
    def company(self):
        """Gets the company of this SimpleDocumentResponseAllOfData.  # noqa: E501


        :return: The company of this SimpleDocumentResponseAllOfData.  # noqa: E501
        :rtype: SimpleDocumentResponseAllOfDataCompany
        """
        return self._company

    @company.setter
    def company(self, company):
        """Sets the company of this SimpleDocumentResponseAllOfData.


        :param company: The company of this SimpleDocumentResponseAllOfData.  # noqa: E501
        :type: SimpleDocumentResponseAllOfDataCompany
        """

        self._company = company

    @property
    def status(self):
        """Gets the status of this SimpleDocumentResponseAllOfData.  # noqa: E501

        เลขสถานะเอกสารฉบับนี้  # noqa: E501

        :return: The status of this SimpleDocumentResponseAllOfData.  # noqa: E501
        :rtype: int
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this SimpleDocumentResponseAllOfData.

        เลขสถานะเอกสารฉบับนี้  # noqa: E501

        :param status: The status of this SimpleDocumentResponseAllOfData.  # noqa: E501
        :type: int
        """

        self._status = status

    @property
    def status_string(self):
        """Gets the status_string of this SimpleDocumentResponseAllOfData.  # noqa: E501

        ชื่อสถานะเอกสารฉบับนี้  # noqa: E501

        :return: The status_string of this SimpleDocumentResponseAllOfData.  # noqa: E501
        :rtype: int
        """
        return self._status_string

    @status_string.setter
    def status_string(self, status_string):
        """Sets the status_string of this SimpleDocumentResponseAllOfData.

        ชื่อสถานะเอกสารฉบับนี้  # noqa: E501

        :param status_string: The status_string of this SimpleDocumentResponseAllOfData.  # noqa: E501
        :type: int
        """

        self._status_string = status_string

    @property
    def document_type(self):
        """Gets the document_type of this SimpleDocumentResponseAllOfData.  # noqa: E501

        เลขประเภทเอกสารฉบับนี้  # noqa: E501

        :return: The document_type of this SimpleDocumentResponseAllOfData.  # noqa: E501
        :rtype: int
        """
        return self._document_type

    @document_type.setter
    def document_type(self, document_type):
        """Sets the document_type of this SimpleDocumentResponseAllOfData.

        เลขประเภทเอกสารฉบับนี้  # noqa: E501

        :param document_type: The document_type of this SimpleDocumentResponseAllOfData.  # noqa: E501
        :type: int
        """

        self._document_type = document_type

    @property
    def allow_delete(self):
        """Gets the allow_delete of this SimpleDocumentResponseAllOfData.  # noqa: E501

        สามารถลบเอกสาร :<br> true = ลบได้ <br> false = ลบไม่ได้  # noqa: E501

        :return: The allow_delete of this SimpleDocumentResponseAllOfData.  # noqa: E501
        :rtype: bool
        """
        return self._allow_delete

    @allow_delete.setter
    def allow_delete(self, allow_delete):
        """Sets the allow_delete of this SimpleDocumentResponseAllOfData.

        สามารถลบเอกสาร :<br> true = ลบได้ <br> false = ลบไม่ได้  # noqa: E501

        :param allow_delete: The allow_delete of this SimpleDocumentResponseAllOfData.  # noqa: E501
        :type: bool
        """

        self._allow_delete = allow_delete

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.openapi_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, SimpleDocumentResponseAllOfData):
            return False

        return self.to_dict() == other.to_dict()

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        if not isinstance(other, SimpleDocumentResponseAllOfData):
            return True

        return self.to_dict() != other.to_dict()
