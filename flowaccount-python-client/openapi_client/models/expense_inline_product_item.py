# coding: utf-8

"""
    FlowAccount Open API

    # Introduction  **Servers Production**    <site>Site:</site> https://www.flowaccount.com    <site>Api url:</site> https://openapi.flowaccount.com/v1    **Beta test**   <site>Site:</site> http://sandbox-new.flowaccount.com/    <site>Api url:</site> https://openapi.flowaccount.com/test    **PostMan Collection**   <site>Link:</site> https://www.getpostman.com/collections/01e7c68d7093e2092a64  # noqa: E501

    The version of the OpenAPI document: 2-oas3
    Contact: developer_support@flowaccount.com
    Generated by: https://openapi-generator.tech
"""


import pprint
import re  # noqa: F401

import six

from openapi_client.configuration import Configuration


class ExpenseInlineProductItem(object):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    """
    Attributes:
      openapi_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    openapi_types = {
        'system_code': 'int',
        'category_id': 'int',
        'description': 'str',
        'name_local': 'str',
        'name_foreign': 'str',
        'credit_category': 'int',
        'credit_id': 'int',
        'credit_code': 'str',
        'credit_name_local': 'str',
        'credit_name_foreign': 'str',
        'debit_category': 'int',
        'debit_id': 'int',
        'debit_code': 'str',
        'debit_name_local': 'str',
        'debit_name_foreign': 'str',
        'quantity': 'float',
        'unit_name': 'str',
        'price_per_unit': 'float',
        'discount_amount': 'int',
        'vat_rate': 'int',
        'total': 'float'
    }

    attribute_map = {
        'system_code': 'systemCode',
        'category_id': 'categoryId',
        'description': 'description',
        'name_local': 'nameLocal',
        'name_foreign': 'nameForeign',
        'credit_category': 'creditCategory',
        'credit_id': 'creditId',
        'credit_code': 'creditCode',
        'credit_name_local': 'creditNameLocal',
        'credit_name_foreign': 'creditNameForeign',
        'debit_category': 'debitCategory',
        'debit_id': 'debitId',
        'debit_code': 'debitCode',
        'debit_name_local': 'debitNameLocal',
        'debit_name_foreign': 'debitNameForeign',
        'quantity': 'quantity',
        'unit_name': 'unitName',
        'price_per_unit': 'pricePerUnit',
        'discount_amount': 'discountAmount',
        'vat_rate': 'vatRate',
        'total': 'total'
    }

    def __init__(self, system_code=None, category_id=None, description=None, name_local=None, name_foreign=None, credit_category=None, credit_id=None, credit_code=None, credit_name_local=None, credit_name_foreign=None, debit_category=None, debit_id=None, debit_code=None, debit_name_local=None, debit_name_foreign=None, quantity=None, unit_name=None, price_per_unit=None, discount_amount=0, vat_rate=7, total=None, local_vars_configuration=None):  # noqa: E501
        """ExpenseInlineProductItem - a model defined in OpenAPI"""  # noqa: E501
        if local_vars_configuration is None:
            local_vars_configuration = Configuration()
        self.local_vars_configuration = local_vars_configuration

        self._system_code = None
        self._category_id = None
        self._description = None
        self._name_local = None
        self._name_foreign = None
        self._credit_category = None
        self._credit_id = None
        self._credit_code = None
        self._credit_name_local = None
        self._credit_name_foreign = None
        self._debit_category = None
        self._debit_id = None
        self._debit_code = None
        self._debit_name_local = None
        self._debit_name_foreign = None
        self._quantity = None
        self._unit_name = None
        self._price_per_unit = None
        self._discount_amount = None
        self._vat_rate = None
        self._total = None
        self.discriminator = None

        self.system_code = system_code
        self.category_id = category_id
        self.description = description
        self.name_local = name_local
        self.name_foreign = name_foreign
        self.credit_category = credit_category
        self.credit_id = credit_id
        self.credit_code = credit_code
        self.credit_name_local = credit_name_local
        self.credit_name_foreign = credit_name_foreign
        self.debit_category = debit_category
        self.debit_id = debit_id
        self.debit_code = debit_code
        self.debit_name_local = debit_name_local
        self.debit_name_foreign = debit_name_foreign
        self.quantity = quantity
        if unit_name is not None:
            self.unit_name = unit_name
        self.price_per_unit = price_per_unit
        self.discount_amount = discount_amount
        self.vat_rate = vat_rate
        self.total = total

    @property
    def system_code(self):
        """Gets the system_code of this ExpenseInlineProductItem.  # noqa: E501

        เลขที่ system code หมวดหมู่ค่าใช้จ่าย (เลือกใช้ หมวดหมู่ค่าใช้จ่ายสำหรับธุรกิจ)  # noqa: E501

        :return: The system_code of this ExpenseInlineProductItem.  # noqa: E501
        :rtype: int
        """
        return self._system_code

    @system_code.setter
    def system_code(self, system_code):
        """Sets the system_code of this ExpenseInlineProductItem.

        เลขที่ system code หมวดหมู่ค่าใช้จ่าย (เลือกใช้ หมวดหมู่ค่าใช้จ่ายสำหรับธุรกิจ)  # noqa: E501

        :param system_code: The system_code of this ExpenseInlineProductItem.  # noqa: E501
        :type: int
        """
        if self.local_vars_configuration.client_side_validation and system_code is None:  # noqa: E501
            raise ValueError("Invalid value for `system_code`, must not be `None`")  # noqa: E501

        self._system_code = system_code

    @property
    def category_id(self):
        """Gets the category_id of this ExpenseInlineProductItem.  # noqa: E501

        เลขที่ id หมวดหมู่ค่าใช้จ่าย (เลือกใช้ หมวดหมู่ค่าใช้จ่ายสำหรับธุรกิจ) <br> <ex>Example: 40238</ex>  # noqa: E501

        :return: The category_id of this ExpenseInlineProductItem.  # noqa: E501
        :rtype: int
        """
        return self._category_id

    @category_id.setter
    def category_id(self, category_id):
        """Sets the category_id of this ExpenseInlineProductItem.

        เลขที่ id หมวดหมู่ค่าใช้จ่าย (เลือกใช้ หมวดหมู่ค่าใช้จ่ายสำหรับธุรกิจ) <br> <ex>Example: 40238</ex>  # noqa: E501

        :param category_id: The category_id of this ExpenseInlineProductItem.  # noqa: E501
        :type: int
        """
        if self.local_vars_configuration.client_side_validation and category_id is None:  # noqa: E501
            raise ValueError("Invalid value for `category_id`, must not be `None`")  # noqa: E501

        self._category_id = category_id

    @property
    def description(self):
        """Gets the description of this ExpenseInlineProductItem.  # noqa: E501

        รายละเอียดค่าใช้จ่าย  # noqa: E501

        :return: The description of this ExpenseInlineProductItem.  # noqa: E501
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this ExpenseInlineProductItem.

        รายละเอียดค่าใช้จ่าย  # noqa: E501

        :param description: The description of this ExpenseInlineProductItem.  # noqa: E501
        :type: str
        """
        if self.local_vars_configuration.client_side_validation and description is None:  # noqa: E501
            raise ValueError("Invalid value for `description`, must not be `None`")  # noqa: E501

        self._description = description

    @property
    def name_local(self):
        """Gets the name_local of this ExpenseInlineProductItem.  # noqa: E501

        ชื่อหมวดหมู่ค่าใช้จ่าย <br> <ex>Example: การตลาดและโฆษณา</ex>  # noqa: E501

        :return: The name_local of this ExpenseInlineProductItem.  # noqa: E501
        :rtype: str
        """
        return self._name_local

    @name_local.setter
    def name_local(self, name_local):
        """Sets the name_local of this ExpenseInlineProductItem.

        ชื่อหมวดหมู่ค่าใช้จ่าย <br> <ex>Example: การตลาดและโฆษณา</ex>  # noqa: E501

        :param name_local: The name_local of this ExpenseInlineProductItem.  # noqa: E501
        :type: str
        """
        if self.local_vars_configuration.client_side_validation and name_local is None:  # noqa: E501
            raise ValueError("Invalid value for `name_local`, must not be `None`")  # noqa: E501

        self._name_local = name_local

    @property
    def name_foreign(self):
        """Gets the name_foreign of this ExpenseInlineProductItem.  # noqa: E501

        ชื่อหมวดหมู่ค่าใช้จ่าย (ภาษาอังกฤษ) <br> <ex>Example: Marketing & Advertising</ex>  # noqa: E501

        :return: The name_foreign of this ExpenseInlineProductItem.  # noqa: E501
        :rtype: str
        """
        return self._name_foreign

    @name_foreign.setter
    def name_foreign(self, name_foreign):
        """Sets the name_foreign of this ExpenseInlineProductItem.

        ชื่อหมวดหมู่ค่าใช้จ่าย (ภาษาอังกฤษ) <br> <ex>Example: Marketing & Advertising</ex>  # noqa: E501

        :param name_foreign: The name_foreign of this ExpenseInlineProductItem.  # noqa: E501
        :type: str
        """
        if self.local_vars_configuration.client_side_validation and name_foreign is None:  # noqa: E501
            raise ValueError("Invalid value for `name_foreign`, must not be `None`")  # noqa: E501

        self._name_foreign = name_foreign

    @property
    def credit_category(self):
        """Gets the credit_category of this ExpenseInlineProductItem.  # noqa: E501

        เลขหมวดหมู่ ฝั่งเครดิต ของ หมวดหมู่ค่าใช้จ่าย <br> <ex>Example: 2</ex>  # noqa: E501

        :return: The credit_category of this ExpenseInlineProductItem.  # noqa: E501
        :rtype: int
        """
        return self._credit_category

    @credit_category.setter
    def credit_category(self, credit_category):
        """Sets the credit_category of this ExpenseInlineProductItem.

        เลขหมวดหมู่ ฝั่งเครดิต ของ หมวดหมู่ค่าใช้จ่าย <br> <ex>Example: 2</ex>  # noqa: E501

        :param credit_category: The credit_category of this ExpenseInlineProductItem.  # noqa: E501
        :type: int
        """
        if self.local_vars_configuration.client_side_validation and credit_category is None:  # noqa: E501
            raise ValueError("Invalid value for `credit_category`, must not be `None`")  # noqa: E501

        self._credit_category = credit_category

    @property
    def credit_id(self):
        """Gets the credit_id of this ExpenseInlineProductItem.  # noqa: E501

        เลข id หมวดหมู่ค่าใช้จ่ายทางบัญชี ฝั่งเครดิิต <br> <ex>Example: 1081994</ex>  # noqa: E501

        :return: The credit_id of this ExpenseInlineProductItem.  # noqa: E501
        :rtype: int
        """
        return self._credit_id

    @credit_id.setter
    def credit_id(self, credit_id):
        """Sets the credit_id of this ExpenseInlineProductItem.

        เลข id หมวดหมู่ค่าใช้จ่ายทางบัญชี ฝั่งเครดิิต <br> <ex>Example: 1081994</ex>  # noqa: E501

        :param credit_id: The credit_id of this ExpenseInlineProductItem.  # noqa: E501
        :type: int
        """
        if self.local_vars_configuration.client_side_validation and credit_id is None:  # noqa: E501
            raise ValueError("Invalid value for `credit_id`, must not be `None`")  # noqa: E501

        self._credit_id = credit_id

    @property
    def credit_code(self):
        """Gets the credit_code of this ExpenseInlineProductItem.  # noqa: E501

        เลขที่หมวดหมู่ค่าใช้จ่ายทางบัญชี ฝั่งเครดิต <br> <ex>Example: 21399</ex>  # noqa: E501

        :return: The credit_code of this ExpenseInlineProductItem.  # noqa: E501
        :rtype: str
        """
        return self._credit_code

    @credit_code.setter
    def credit_code(self, credit_code):
        """Sets the credit_code of this ExpenseInlineProductItem.

        เลขที่หมวดหมู่ค่าใช้จ่ายทางบัญชี ฝั่งเครดิต <br> <ex>Example: 21399</ex>  # noqa: E501

        :param credit_code: The credit_code of this ExpenseInlineProductItem.  # noqa: E501
        :type: str
        """
        if self.local_vars_configuration.client_side_validation and credit_code is None:  # noqa: E501
            raise ValueError("Invalid value for `credit_code`, must not be `None`")  # noqa: E501

        self._credit_code = credit_code

    @property
    def credit_name_local(self):
        """Gets the credit_name_local of this ExpenseInlineProductItem.  # noqa: E501

        ชื่อหมวดหมู่ค่าใช้จ่ายทางบัญชี ฝั่งเครดิต <br> <ex>Example: 21399 / เจ้าหนี้อื่นๆ</ex>  # noqa: E501

        :return: The credit_name_local of this ExpenseInlineProductItem.  # noqa: E501
        :rtype: str
        """
        return self._credit_name_local

    @credit_name_local.setter
    def credit_name_local(self, credit_name_local):
        """Sets the credit_name_local of this ExpenseInlineProductItem.

        ชื่อหมวดหมู่ค่าใช้จ่ายทางบัญชี ฝั่งเครดิต <br> <ex>Example: 21399 / เจ้าหนี้อื่นๆ</ex>  # noqa: E501

        :param credit_name_local: The credit_name_local of this ExpenseInlineProductItem.  # noqa: E501
        :type: str
        """
        if self.local_vars_configuration.client_side_validation and credit_name_local is None:  # noqa: E501
            raise ValueError("Invalid value for `credit_name_local`, must not be `None`")  # noqa: E501

        self._credit_name_local = credit_name_local

    @property
    def credit_name_foreign(self):
        """Gets the credit_name_foreign of this ExpenseInlineProductItem.  # noqa: E501

        ชื่อหมวดหมู่ค่าใช้จ่ายทางบัญชี ฝั่งเครดิต (ภาษาอังกฤษ) <br> <ex>Example: 21399 / Other Payables</ex>  # noqa: E501

        :return: The credit_name_foreign of this ExpenseInlineProductItem.  # noqa: E501
        :rtype: str
        """
        return self._credit_name_foreign

    @credit_name_foreign.setter
    def credit_name_foreign(self, credit_name_foreign):
        """Sets the credit_name_foreign of this ExpenseInlineProductItem.

        ชื่อหมวดหมู่ค่าใช้จ่ายทางบัญชี ฝั่งเครดิต (ภาษาอังกฤษ) <br> <ex>Example: 21399 / Other Payables</ex>  # noqa: E501

        :param credit_name_foreign: The credit_name_foreign of this ExpenseInlineProductItem.  # noqa: E501
        :type: str
        """
        if self.local_vars_configuration.client_side_validation and credit_name_foreign is None:  # noqa: E501
            raise ValueError("Invalid value for `credit_name_foreign`, must not be `None`")  # noqa: E501

        self._credit_name_foreign = credit_name_foreign

    @property
    def debit_category(self):
        """Gets the debit_category of this ExpenseInlineProductItem.  # noqa: E501

        เลขหมวดหมู่ ฝั่งเดบิต ของ หมวดหมู่ค่าใช้จ่าย  # noqa: E501

        :return: The debit_category of this ExpenseInlineProductItem.  # noqa: E501
        :rtype: int
        """
        return self._debit_category

    @debit_category.setter
    def debit_category(self, debit_category):
        """Sets the debit_category of this ExpenseInlineProductItem.

        เลขหมวดหมู่ ฝั่งเดบิต ของ หมวดหมู่ค่าใช้จ่าย  # noqa: E501

        :param debit_category: The debit_category of this ExpenseInlineProductItem.  # noqa: E501
        :type: int
        """
        if self.local_vars_configuration.client_side_validation and debit_category is None:  # noqa: E501
            raise ValueError("Invalid value for `debit_category`, must not be `None`")  # noqa: E501

        self._debit_category = debit_category

    @property
    def debit_id(self):
        """Gets the debit_id of this ExpenseInlineProductItem.  # noqa: E501

        เลข id หมวดหมู่ค่าใช้จ่ายทางบัญชี ฝั่งเดบิต <br> <ex>Example: 1082099</ex>  # noqa: E501

        :return: The debit_id of this ExpenseInlineProductItem.  # noqa: E501
        :rtype: int
        """
        return self._debit_id

    @debit_id.setter
    def debit_id(self, debit_id):
        """Sets the debit_id of this ExpenseInlineProductItem.

        เลข id หมวดหมู่ค่าใช้จ่ายทางบัญชี ฝั่งเดบิต <br> <ex>Example: 1082099</ex>  # noqa: E501

        :param debit_id: The debit_id of this ExpenseInlineProductItem.  # noqa: E501
        :type: int
        """
        if self.local_vars_configuration.client_side_validation and debit_id is None:  # noqa: E501
            raise ValueError("Invalid value for `debit_id`, must not be `None`")  # noqa: E501

        self._debit_id = debit_id

    @property
    def debit_code(self):
        """Gets the debit_code of this ExpenseInlineProductItem.  # noqa: E501

        เลขที่หมวดหมู่ค่าใช้จ่ายทางบัญชี ฝั่งเดบิต <br> <ex>Example: 53029</ex>  # noqa: E501

        :return: The debit_code of this ExpenseInlineProductItem.  # noqa: E501
        :rtype: str
        """
        return self._debit_code

    @debit_code.setter
    def debit_code(self, debit_code):
        """Sets the debit_code of this ExpenseInlineProductItem.

        เลขที่หมวดหมู่ค่าใช้จ่ายทางบัญชี ฝั่งเดบิต <br> <ex>Example: 53029</ex>  # noqa: E501

        :param debit_code: The debit_code of this ExpenseInlineProductItem.  # noqa: E501
        :type: str
        """
        if self.local_vars_configuration.client_side_validation and debit_code is None:  # noqa: E501
            raise ValueError("Invalid value for `debit_code`, must not be `None`")  # noqa: E501

        self._debit_code = debit_code

    @property
    def debit_name_local(self):
        """Gets the debit_name_local of this ExpenseInlineProductItem.  # noqa: E501

        ชื่อหมวดหมู่ค่าใช้จ่ายทางบัญชี ฝั่งเดบิต <br> <ex>Example: 53029 / ค่าใช้จ่ายด้านโฆษณาและการตลาดอื่นๆ</ex>  # noqa: E501

        :return: The debit_name_local of this ExpenseInlineProductItem.  # noqa: E501
        :rtype: str
        """
        return self._debit_name_local

    @debit_name_local.setter
    def debit_name_local(self, debit_name_local):
        """Sets the debit_name_local of this ExpenseInlineProductItem.

        ชื่อหมวดหมู่ค่าใช้จ่ายทางบัญชี ฝั่งเดบิต <br> <ex>Example: 53029 / ค่าใช้จ่ายด้านโฆษณาและการตลาดอื่นๆ</ex>  # noqa: E501

        :param debit_name_local: The debit_name_local of this ExpenseInlineProductItem.  # noqa: E501
        :type: str
        """
        if self.local_vars_configuration.client_side_validation and debit_name_local is None:  # noqa: E501
            raise ValueError("Invalid value for `debit_name_local`, must not be `None`")  # noqa: E501

        self._debit_name_local = debit_name_local

    @property
    def debit_name_foreign(self):
        """Gets the debit_name_foreign of this ExpenseInlineProductItem.  # noqa: E501

        ชื่อหมวดหมู่ค่าใช้จ่ายทางบัญชี ฝั่งเดบิต (ภาษาอังกฤษ) <br> <ex>Example: 53029 / Other advertising and marketing expenses</ex>  # noqa: E501

        :return: The debit_name_foreign of this ExpenseInlineProductItem.  # noqa: E501
        :rtype: str
        """
        return self._debit_name_foreign

    @debit_name_foreign.setter
    def debit_name_foreign(self, debit_name_foreign):
        """Sets the debit_name_foreign of this ExpenseInlineProductItem.

        ชื่อหมวดหมู่ค่าใช้จ่ายทางบัญชี ฝั่งเดบิต (ภาษาอังกฤษ) <br> <ex>Example: 53029 / Other advertising and marketing expenses</ex>  # noqa: E501

        :param debit_name_foreign: The debit_name_foreign of this ExpenseInlineProductItem.  # noqa: E501
        :type: str
        """
        if self.local_vars_configuration.client_side_validation and debit_name_foreign is None:  # noqa: E501
            raise ValueError("Invalid value for `debit_name_foreign`, must not be `None`")  # noqa: E501

        self._debit_name_foreign = debit_name_foreign

    @property
    def quantity(self):
        """Gets the quantity of this ExpenseInlineProductItem.  # noqa: E501

        จำนวนรายการค่าใช้จ่าย  # noqa: E501

        :return: The quantity of this ExpenseInlineProductItem.  # noqa: E501
        :rtype: float
        """
        return self._quantity

    @quantity.setter
    def quantity(self, quantity):
        """Sets the quantity of this ExpenseInlineProductItem.

        จำนวนรายการค่าใช้จ่าย  # noqa: E501

        :param quantity: The quantity of this ExpenseInlineProductItem.  # noqa: E501
        :type: float
        """
        if self.local_vars_configuration.client_side_validation and quantity is None:  # noqa: E501
            raise ValueError("Invalid value for `quantity`, must not be `None`")  # noqa: E501

        self._quantity = quantity

    @property
    def unit_name(self):
        """Gets the unit_name of this ExpenseInlineProductItem.  # noqa: E501

        หน่วยรายการค่าใช้จ่าย  # noqa: E501

        :return: The unit_name of this ExpenseInlineProductItem.  # noqa: E501
        :rtype: str
        """
        return self._unit_name

    @unit_name.setter
    def unit_name(self, unit_name):
        """Sets the unit_name of this ExpenseInlineProductItem.

        หน่วยรายการค่าใช้จ่าย  # noqa: E501

        :param unit_name: The unit_name of this ExpenseInlineProductItem.  # noqa: E501
        :type: str
        """
        if (self.local_vars_configuration.client_side_validation and
                unit_name is not None and len(unit_name) > 7):
            raise ValueError("Invalid value for `unit_name`, length must be less than or equal to `7`")  # noqa: E501

        self._unit_name = unit_name

    @property
    def price_per_unit(self):
        """Gets the price_per_unit of this ExpenseInlineProductItem.  # noqa: E501

        ราคาต่อหน่วยค่าใช้จ่าย  # noqa: E501

        :return: The price_per_unit of this ExpenseInlineProductItem.  # noqa: E501
        :rtype: float
        """
        return self._price_per_unit

    @price_per_unit.setter
    def price_per_unit(self, price_per_unit):
        """Sets the price_per_unit of this ExpenseInlineProductItem.

        ราคาต่อหน่วยค่าใช้จ่าย  # noqa: E501

        :param price_per_unit: The price_per_unit of this ExpenseInlineProductItem.  # noqa: E501
        :type: float
        """
        if self.local_vars_configuration.client_side_validation and price_per_unit is None:  # noqa: E501
            raise ValueError("Invalid value for `price_per_unit`, must not be `None`")  # noqa: E501

        self._price_per_unit = price_per_unit

    @property
    def discount_amount(self):
        """Gets the discount_amount of this ExpenseInlineProductItem.  # noqa: E501

        จำนวนส่วนลดรายการค่าใช้จ่าย  # noqa: E501

        :return: The discount_amount of this ExpenseInlineProductItem.  # noqa: E501
        :rtype: int
        """
        return self._discount_amount

    @discount_amount.setter
    def discount_amount(self, discount_amount):
        """Sets the discount_amount of this ExpenseInlineProductItem.

        จำนวนส่วนลดรายการค่าใช้จ่าย  # noqa: E501

        :param discount_amount: The discount_amount of this ExpenseInlineProductItem.  # noqa: E501
        :type: int
        """
        if self.local_vars_configuration.client_side_validation and discount_amount is None:  # noqa: E501
            raise ValueError("Invalid value for `discount_amount`, must not be `None`")  # noqa: E501

        self._discount_amount = discount_amount

    @property
    def vat_rate(self):
        """Gets the vat_rate of this ExpenseInlineProductItem.  # noqa: E501

        รูปแบบภาษี <br> 7 = ภาษี 7% <br> 0 = ภาษี 0% <br> -1 = ยกเว้นภาษี  # noqa: E501

        :return: The vat_rate of this ExpenseInlineProductItem.  # noqa: E501
        :rtype: int
        """
        return self._vat_rate

    @vat_rate.setter
    def vat_rate(self, vat_rate):
        """Sets the vat_rate of this ExpenseInlineProductItem.

        รูปแบบภาษี <br> 7 = ภาษี 7% <br> 0 = ภาษี 0% <br> -1 = ยกเว้นภาษี  # noqa: E501

        :param vat_rate: The vat_rate of this ExpenseInlineProductItem.  # noqa: E501
        :type: int
        """
        if self.local_vars_configuration.client_side_validation and vat_rate is None:  # noqa: E501
            raise ValueError("Invalid value for `vat_rate`, must not be `None`")  # noqa: E501

        self._vat_rate = vat_rate

    @property
    def total(self):
        """Gets the total of this ExpenseInlineProductItem.  # noqa: E501

        มูลค่ารวม  # noqa: E501

        :return: The total of this ExpenseInlineProductItem.  # noqa: E501
        :rtype: float
        """
        return self._total

    @total.setter
    def total(self, total):
        """Sets the total of this ExpenseInlineProductItem.

        มูลค่ารวม  # noqa: E501

        :param total: The total of this ExpenseInlineProductItem.  # noqa: E501
        :type: float
        """
        if self.local_vars_configuration.client_side_validation and total is None:  # noqa: E501
            raise ValueError("Invalid value for `total`, must not be `None`")  # noqa: E501

        self._total = total

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.openapi_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, ExpenseInlineProductItem):
            return False

        return self.to_dict() == other.to_dict()

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        if not isinstance(other, ExpenseInlineProductItem):
            return True

        return self.to_dict() != other.to_dict()
