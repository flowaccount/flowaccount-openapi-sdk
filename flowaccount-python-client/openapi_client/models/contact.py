# coding: utf-8

"""
    FlowAccount Open API

    # Introduction  **Servers Production**    <site>Site:</site> https://www.flowaccount.com    <site>Api url:</site> https://openapi.flowaccount.com/v1    **Beta test**   <site>Site:</site> http://sandbox-new.flowaccount.com/    <site>Api url:</site> https://openapi.flowaccount.com/test    **PostMan Collection**   <site>Link:</site> https://www.getpostman.com/collections/01e7c68d7093e2092a64  # noqa: E501

    The version of the OpenAPI document: 2-oas3
    Contact: developer_support@flowaccount.com
    Generated by: https://openapi-generator.tech
"""


import pprint
import re  # noqa: F401

import six

from openapi_client.configuration import Configuration


class Contact(object):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    """
    Attributes:
      openapi_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    openapi_types = {
        'id': 'int',
        'contact_group': 'int',
        'contact_type': 'int',
        'contact_code': 'int',
        'contact_name': 'str',
        'contact_address': 'str',
        'contact_zip_code': 'str',
        'contact_tax_id': 'int',
        'contact_branch_code': 'str',
        'contact_branch': 'str',
        'contact_person': 'str',
        'contact_email': 'str',
        'contact_mobile': 'str',
        'contact_bank_id': 'int',
        'contact_bank_account_number': 'int',
        'contact_bank_branch': 'str',
        'contact_bank_account_type': 'int',
        'contact_credit_days': 'int',
        'contact_office': 'str',
        'contact_fax': 'str',
        'contact_website': 'str',
        'conatact_shipping_address': 'str',
        'contact_note': 'str'
    }

    attribute_map = {
        'id': 'id',
        'contact_group': 'contactGroup',
        'contact_type': 'contactType',
        'contact_code': 'contactCode',
        'contact_name': 'contactName',
        'contact_address': 'contactAddress',
        'contact_zip_code': 'contactZipCode',
        'contact_tax_id': 'contactTaxId',
        'contact_branch_code': 'contactBranchCode',
        'contact_branch': 'contactBranch',
        'contact_person': 'contactPerson',
        'contact_email': 'contactEmail',
        'contact_mobile': 'contactMobile',
        'contact_bank_id': 'contactBankId',
        'contact_bank_account_number': 'contactBankAccountNumber',
        'contact_bank_branch': 'contactBankBranch',
        'contact_bank_account_type': 'contactBankAccountType',
        'contact_credit_days': 'contactCreditDays',
        'contact_office': 'contactOffice',
        'contact_fax': 'contactFax',
        'contact_website': 'contactWebsite',
        'conatact_shipping_address': 'conatactShippingAddress',
        'contact_note': 'contactNote'
    }

    def __init__(self, id=None, contact_group=3, contact_type=3, contact_code=None, contact_name=None, contact_address=None, contact_zip_code=None, contact_tax_id=None, contact_branch_code=None, contact_branch='สำนักงานใหญ่', contact_person=None, contact_email=None, contact_mobile=None, contact_bank_id=0, contact_bank_account_number=None, contact_bank_branch=None, contact_bank_account_type=1, contact_credit_days=0, contact_office=None, contact_fax=None, contact_website=None, conatact_shipping_address=None, contact_note=None, local_vars_configuration=None):  # noqa: E501
        """Contact - a model defined in OpenAPI"""  # noqa: E501
        if local_vars_configuration is None:
            local_vars_configuration = Configuration()
        self.local_vars_configuration = local_vars_configuration

        self._id = None
        self._contact_group = None
        self._contact_type = None
        self._contact_code = None
        self._contact_name = None
        self._contact_address = None
        self._contact_zip_code = None
        self._contact_tax_id = None
        self._contact_branch_code = None
        self._contact_branch = None
        self._contact_person = None
        self._contact_email = None
        self._contact_mobile = None
        self._contact_bank_id = None
        self._contact_bank_account_number = None
        self._contact_bank_branch = None
        self._contact_bank_account_type = None
        self._contact_credit_days = None
        self._contact_office = None
        self._contact_fax = None
        self._contact_website = None
        self._conatact_shipping_address = None
        self._contact_note = None
        self.discriminator = None

        if id is not None:
            self.id = id
        self.contact_group = contact_group
        self.contact_type = contact_type
        if contact_code is not None:
            self.contact_code = contact_code
        self.contact_name = contact_name
        if contact_address is not None:
            self.contact_address = contact_address
        if contact_zip_code is not None:
            self.contact_zip_code = contact_zip_code
        if contact_tax_id is not None:
            self.contact_tax_id = contact_tax_id
        if contact_branch_code is not None:
            self.contact_branch_code = contact_branch_code
        if contact_branch is not None:
            self.contact_branch = contact_branch
        if contact_person is not None:
            self.contact_person = contact_person
        if contact_email is not None:
            self.contact_email = contact_email
        if contact_mobile is not None:
            self.contact_mobile = contact_mobile
        if contact_bank_id is not None:
            self.contact_bank_id = contact_bank_id
        if contact_bank_account_number is not None:
            self.contact_bank_account_number = contact_bank_account_number
        if contact_bank_branch is not None:
            self.contact_bank_branch = contact_bank_branch
        if contact_bank_account_type is not None:
            self.contact_bank_account_type = contact_bank_account_type
        if contact_credit_days is not None:
            self.contact_credit_days = contact_credit_days
        if contact_office is not None:
            self.contact_office = contact_office
        if contact_fax is not None:
            self.contact_fax = contact_fax
        if contact_website is not None:
            self.contact_website = contact_website
        if conatact_shipping_address is not None:
            self.conatact_shipping_address = conatact_shipping_address
        if contact_note is not None:
            self.contact_note = contact_note

    @property
    def id(self):
        """Gets the id of this Contact.  # noqa: E501

        เลข id Contact  # noqa: E501

        :return: The id of this Contact.  # noqa: E501
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this Contact.

        เลข id Contact  # noqa: E501

        :param id: The id of this Contact.  # noqa: E501
        :type: int
        """

        self._id = id

    @property
    def contact_group(self):
        """Gets the contact_group of this Contact.  # noqa: E501

        ประเภทผู้ติดต่อ: 1 = บุคคลธรรมดา / 3 = นิติบุคคล  # noqa: E501

        :return: The contact_group of this Contact.  # noqa: E501
        :rtype: int
        """
        return self._contact_group

    @contact_group.setter
    def contact_group(self, contact_group):
        """Sets the contact_group of this Contact.

        ประเภทผู้ติดต่อ: 1 = บุคคลธรรมดา / 3 = นิติบุคคล  # noqa: E501

        :param contact_group: The contact_group of this Contact.  # noqa: E501
        :type: int
        """
        if self.local_vars_configuration.client_side_validation and contact_group is None:  # noqa: E501
            raise ValueError("Invalid value for `contact_group`, must not be `None`")  # noqa: E501

        self._contact_group = contact_group

    @property
    def contact_type(self):
        """Gets the contact_type of this Contact.  # noqa: E501

        ประเภท: 3 = ลูกค้า / 5 = ผู้จำหน่าย / 7 = ผู้จำหน่ายและลูกค้า  # noqa: E501

        :return: The contact_type of this Contact.  # noqa: E501
        :rtype: int
        """
        return self._contact_type

    @contact_type.setter
    def contact_type(self, contact_type):
        """Sets the contact_type of this Contact.

        ประเภท: 3 = ลูกค้า / 5 = ผู้จำหน่าย / 7 = ผู้จำหน่ายและลูกค้า  # noqa: E501

        :param contact_type: The contact_type of this Contact.  # noqa: E501
        :type: int
        """
        if self.local_vars_configuration.client_side_validation and contact_type is None:  # noqa: E501
            raise ValueError("Invalid value for `contact_type`, must not be `None`")  # noqa: E501

        self._contact_type = contact_type

    @property
    def contact_code(self):
        """Gets the contact_code of this Contact.  # noqa: E501

        รหัสผู้ติดต่อ ​<br><ex>Example: C0001</ex>  # noqa: E501

        :return: The contact_code of this Contact.  # noqa: E501
        :rtype: int
        """
        return self._contact_code

    @contact_code.setter
    def contact_code(self, contact_code):
        """Sets the contact_code of this Contact.

        รหัสผู้ติดต่อ ​<br><ex>Example: C0001</ex>  # noqa: E501

        :param contact_code: The contact_code of this Contact.  # noqa: E501
        :type: int
        """

        self._contact_code = contact_code

    @property
    def contact_name(self):
        """Gets the contact_name of this Contact.  # noqa: E501

        ชื่อผู้ธุรกิจ หรือ ชื่อลูกค้า หรือ ชื่อผู้จำหน่าย  # noqa: E501

        :return: The contact_name of this Contact.  # noqa: E501
        :rtype: str
        """
        return self._contact_name

    @contact_name.setter
    def contact_name(self, contact_name):
        """Sets the contact_name of this Contact.

        ชื่อผู้ธุรกิจ หรือ ชื่อลูกค้า หรือ ชื่อผู้จำหน่าย  # noqa: E501

        :param contact_name: The contact_name of this Contact.  # noqa: E501
        :type: str
        """
        if self.local_vars_configuration.client_side_validation and contact_name is None:  # noqa: E501
            raise ValueError("Invalid value for `contact_name`, must not be `None`")  # noqa: E501

        self._contact_name = contact_name

    @property
    def contact_address(self):
        """Gets the contact_address of this Contact.  # noqa: E501

        ที่อยู่ผู้ติดต่อ  # noqa: E501

        :return: The contact_address of this Contact.  # noqa: E501
        :rtype: str
        """
        return self._contact_address

    @contact_address.setter
    def contact_address(self, contact_address):
        """Sets the contact_address of this Contact.

        ที่อยู่ผู้ติดต่อ  # noqa: E501

        :param contact_address: The contact_address of this Contact.  # noqa: E501
        :type: str
        """

        self._contact_address = contact_address

    @property
    def contact_zip_code(self):
        """Gets the contact_zip_code of this Contact.  # noqa: E501

        รหัสไปรษณีย์ติดต่อ <ex>Example: 10140 </ex>  # noqa: E501

        :return: The contact_zip_code of this Contact.  # noqa: E501
        :rtype: str
        """
        return self._contact_zip_code

    @contact_zip_code.setter
    def contact_zip_code(self, contact_zip_code):
        """Sets the contact_zip_code of this Contact.

        รหัสไปรษณีย์ติดต่อ <ex>Example: 10140 </ex>  # noqa: E501

        :param contact_zip_code: The contact_zip_code of this Contact.  # noqa: E501
        :type: str
        """

        self._contact_zip_code = contact_zip_code

    @property
    def contact_tax_id(self):
        """Gets the contact_tax_id of this Contact.  # noqa: E501

        เลขประจำตัวผู้เสียภาษี 13 หลัก ​<br><ex>Example: 1234567890123</ex>  # noqa: E501

        :return: The contact_tax_id of this Contact.  # noqa: E501
        :rtype: int
        """
        return self._contact_tax_id

    @contact_tax_id.setter
    def contact_tax_id(self, contact_tax_id):
        """Sets the contact_tax_id of this Contact.

        เลขประจำตัวผู้เสียภาษี 13 หลัก ​<br><ex>Example: 1234567890123</ex>  # noqa: E501

        :param contact_tax_id: The contact_tax_id of this Contact.  # noqa: E501
        :type: int
        """

        self._contact_tax_id = contact_tax_id

    @property
    def contact_branch_code(self):
        """Gets the contact_branch_code of this Contact.  # noqa: E501

        รหัสสาขา  # noqa: E501

        :return: The contact_branch_code of this Contact.  # noqa: E501
        :rtype: str
        """
        return self._contact_branch_code

    @contact_branch_code.setter
    def contact_branch_code(self, contact_branch_code):
        """Sets the contact_branch_code of this Contact.

        รหัสสาขา  # noqa: E501

        :param contact_branch_code: The contact_branch_code of this Contact.  # noqa: E501
        :type: str
        """

        self._contact_branch_code = contact_branch_code

    @property
    def contact_branch(self):
        """Gets the contact_branch of this Contact.  # noqa: E501

        ชื่อสาขา  # noqa: E501

        :return: The contact_branch of this Contact.  # noqa: E501
        :rtype: str
        """
        return self._contact_branch

    @contact_branch.setter
    def contact_branch(self, contact_branch):
        """Sets the contact_branch of this Contact.

        ชื่อสาขา  # noqa: E501

        :param contact_branch: The contact_branch of this Contact.  # noqa: E501
        :type: str
        """

        self._contact_branch = contact_branch

    @property
    def contact_person(self):
        """Gets the contact_person of this Contact.  # noqa: E501

        ชื่อผู้ติดต่อ  # noqa: E501

        :return: The contact_person of this Contact.  # noqa: E501
        :rtype: str
        """
        return self._contact_person

    @contact_person.setter
    def contact_person(self, contact_person):
        """Sets the contact_person of this Contact.

        ชื่อผู้ติดต่อ  # noqa: E501

        :param contact_person: The contact_person of this Contact.  # noqa: E501
        :type: str
        """

        self._contact_person = contact_person

    @property
    def contact_email(self):
        """Gets the contact_email of this Contact.  # noqa: E501

        อีเมลผู้ติดต่อ <br> <ex>Example: contact@email.com</ex>  # noqa: E501

        :return: The contact_email of this Contact.  # noqa: E501
        :rtype: str
        """
        return self._contact_email

    @contact_email.setter
    def contact_email(self, contact_email):
        """Sets the contact_email of this Contact.

        อีเมลผู้ติดต่อ <br> <ex>Example: contact@email.com</ex>  # noqa: E501

        :param contact_email: The contact_email of this Contact.  # noqa: E501
        :type: str
        """

        self._contact_email = contact_email

    @property
    def contact_mobile(self):
        """Gets the contact_mobile of this Contact.  # noqa: E501

        เบอร์มือถือผู้ติดต่อ <br> <ex>Example: 099-999-9999</ex>  # noqa: E501

        :return: The contact_mobile of this Contact.  # noqa: E501
        :rtype: str
        """
        return self._contact_mobile

    @contact_mobile.setter
    def contact_mobile(self, contact_mobile):
        """Sets the contact_mobile of this Contact.

        เบอร์มือถือผู้ติดต่อ <br> <ex>Example: 099-999-9999</ex>  # noqa: E501

        :param contact_mobile: The contact_mobile of this Contact.  # noqa: E501
        :type: str
        """

        self._contact_mobile = contact_mobile

    @property
    def contact_bank_id(self):
        """Gets the contact_bank_id of this Contact.  # noqa: E501

        รหัสธนาคาร <br> 1 = ธนาคารกรุงเทพ <br> 2 = ธนาคารกสิกรไทย <br> 3 = ธนาคารกรุงไทย <br> 4 = ธนาคารทหารไทย <br> 5 = ธนาคารไทยพาณิชย์ <br> 6 = ธนาคารสแตนดาร์ดชาร์เตอร์ด <br> 7 = ธนาคารซีไอเอ็มบี ไทย <br> 8 = ธนาคารยูโอบี <br> 10 = ธนาคารกรุงศรีอยุธยา <br> 11 = ธนาคารออมสิน <br> 12 = ธนาคารธนชาต <br> 13 = ธนาคารแลนด์ แอนด์ เฮ้าส์ <br> 14 = ธนาคารเกียรตินาคิน <br> 15 = ธนาคารซิตี้แบงก์ <br> 16 = ธนาคารทิสโก้ <br> 53 = ธนาคารเพื่อการเกษตรและสหกรณ์การเกษตร <br> 54 = ธนาคารเพื่อการส่งออกและนำเข้าแห่งประเทศไทย <br> 55 = ธนาคารอาคารสงเคราะห์ <br> 56 = ธนาคารพัฒนาวิสาหกิจขนาดกลางและขนาดย่อมแห่งประเทศไทย <br> 57 = ธนาคารอิสลามแห่งประเทศไทย <br> 58 = ธนาคารแห่งประเทศจีน (ไทย) <br> 59 = ธนาคารไอซีบีซี (ไทย) <br> 60 = ธนาคารเมกะ สากลพาณิชย์ <br> 61 = ธนาคารซูมิโตโม มิตซุย แบงกิ้ง คอร์ปอเรชั่น <br> 62 = ธนาคารมิซูโฮ จำกัด (กรุงเทพฯ) <br> 63 = ธนาคารฮ่องกงและเซี่ยงไฮ้แบงกิ้งคอร์ปอเรชั่น <br> 64 = ธนาคารไทยเครดิต เพื่อรายย่อย   # noqa: E501

        :return: The contact_bank_id of this Contact.  # noqa: E501
        :rtype: int
        """
        return self._contact_bank_id

    @contact_bank_id.setter
    def contact_bank_id(self, contact_bank_id):
        """Sets the contact_bank_id of this Contact.

        รหัสธนาคาร <br> 1 = ธนาคารกรุงเทพ <br> 2 = ธนาคารกสิกรไทย <br> 3 = ธนาคารกรุงไทย <br> 4 = ธนาคารทหารไทย <br> 5 = ธนาคารไทยพาณิชย์ <br> 6 = ธนาคารสแตนดาร์ดชาร์เตอร์ด <br> 7 = ธนาคารซีไอเอ็มบี ไทย <br> 8 = ธนาคารยูโอบี <br> 10 = ธนาคารกรุงศรีอยุธยา <br> 11 = ธนาคารออมสิน <br> 12 = ธนาคารธนชาต <br> 13 = ธนาคารแลนด์ แอนด์ เฮ้าส์ <br> 14 = ธนาคารเกียรตินาคิน <br> 15 = ธนาคารซิตี้แบงก์ <br> 16 = ธนาคารทิสโก้ <br> 53 = ธนาคารเพื่อการเกษตรและสหกรณ์การเกษตร <br> 54 = ธนาคารเพื่อการส่งออกและนำเข้าแห่งประเทศไทย <br> 55 = ธนาคารอาคารสงเคราะห์ <br> 56 = ธนาคารพัฒนาวิสาหกิจขนาดกลางและขนาดย่อมแห่งประเทศไทย <br> 57 = ธนาคารอิสลามแห่งประเทศไทย <br> 58 = ธนาคารแห่งประเทศจีน (ไทย) <br> 59 = ธนาคารไอซีบีซี (ไทย) <br> 60 = ธนาคารเมกะ สากลพาณิชย์ <br> 61 = ธนาคารซูมิโตโม มิตซุย แบงกิ้ง คอร์ปอเรชั่น <br> 62 = ธนาคารมิซูโฮ จำกัด (กรุงเทพฯ) <br> 63 = ธนาคารฮ่องกงและเซี่ยงไฮ้แบงกิ้งคอร์ปอเรชั่น <br> 64 = ธนาคารไทยเครดิต เพื่อรายย่อย   # noqa: E501

        :param contact_bank_id: The contact_bank_id of this Contact.  # noqa: E501
        :type: int
        """

        self._contact_bank_id = contact_bank_id

    @property
    def contact_bank_account_number(self):
        """Gets the contact_bank_account_number of this Contact.  # noqa: E501

        เลขที่บัญชีธนาคาร <br> <ex>Example: 1111111111</ex>  # noqa: E501

        :return: The contact_bank_account_number of this Contact.  # noqa: E501
        :rtype: int
        """
        return self._contact_bank_account_number

    @contact_bank_account_number.setter
    def contact_bank_account_number(self, contact_bank_account_number):
        """Sets the contact_bank_account_number of this Contact.

        เลขที่บัญชีธนาคาร <br> <ex>Example: 1111111111</ex>  # noqa: E501

        :param contact_bank_account_number: The contact_bank_account_number of this Contact.  # noqa: E501
        :type: int
        """

        self._contact_bank_account_number = contact_bank_account_number

    @property
    def contact_bank_branch(self):
        """Gets the contact_bank_branch of this Contact.  # noqa: E501

        สาขาธนาคาร <br> <ex>Example: บางรัก</ex>  # noqa: E501

        :return: The contact_bank_branch of this Contact.  # noqa: E501
        :rtype: str
        """
        return self._contact_bank_branch

    @contact_bank_branch.setter
    def contact_bank_branch(self, contact_bank_branch):
        """Sets the contact_bank_branch of this Contact.

        สาขาธนาคาร <br> <ex>Example: บางรัก</ex>  # noqa: E501

        :param contact_bank_branch: The contact_bank_branch of this Contact.  # noqa: E501
        :type: str
        """

        self._contact_bank_branch = contact_bank_branch

    @property
    def contact_bank_account_type(self):
        """Gets the contact_bank_account_type of this Contact.  # noqa: E501

        ประเภทบัญชีธนาคาร: <br> 1 = บัญชีออมทรัพย์ <br> 3 = บัญชีกระแสรายวัน  # noqa: E501

        :return: The contact_bank_account_type of this Contact.  # noqa: E501
        :rtype: int
        """
        return self._contact_bank_account_type

    @contact_bank_account_type.setter
    def contact_bank_account_type(self, contact_bank_account_type):
        """Sets the contact_bank_account_type of this Contact.

        ประเภทบัญชีธนาคาร: <br> 1 = บัญชีออมทรัพย์ <br> 3 = บัญชีกระแสรายวัน  # noqa: E501

        :param contact_bank_account_type: The contact_bank_account_type of this Contact.  # noqa: E501
        :type: int
        """

        self._contact_bank_account_type = contact_bank_account_type

    @property
    def contact_credit_days(self):
        """Gets the contact_credit_days of this Contact.  # noqa: E501

        เครดิต (วัน) <br> <ex>Example: 30</ex>  # noqa: E501

        :return: The contact_credit_days of this Contact.  # noqa: E501
        :rtype: int
        """
        return self._contact_credit_days

    @contact_credit_days.setter
    def contact_credit_days(self, contact_credit_days):
        """Sets the contact_credit_days of this Contact.

        เครดิต (วัน) <br> <ex>Example: 30</ex>  # noqa: E501

        :param contact_credit_days: The contact_credit_days of this Contact.  # noqa: E501
        :type: int
        """

        self._contact_credit_days = contact_credit_days

    @property
    def contact_office(self):
        """Gets the contact_office of this Contact.  # noqa: E501

        เบอร์โทรศัพท์สำนักงาน <br> <ex>Example: 02-999-9999</ex>  # noqa: E501

        :return: The contact_office of this Contact.  # noqa: E501
        :rtype: str
        """
        return self._contact_office

    @contact_office.setter
    def contact_office(self, contact_office):
        """Sets the contact_office of this Contact.

        เบอร์โทรศัพท์สำนักงาน <br> <ex>Example: 02-999-9999</ex>  # noqa: E501

        :param contact_office: The contact_office of this Contact.  # noqa: E501
        :type: str
        """

        self._contact_office = contact_office

    @property
    def contact_fax(self):
        """Gets the contact_fax of this Contact.  # noqa: E501

        เบอร์โทรสาร <br> <ex>Example: 02-888-8888</ex>  # noqa: E501

        :return: The contact_fax of this Contact.  # noqa: E501
        :rtype: str
        """
        return self._contact_fax

    @contact_fax.setter
    def contact_fax(self, contact_fax):
        """Sets the contact_fax of this Contact.

        เบอร์โทรสาร <br> <ex>Example: 02-888-8888</ex>  # noqa: E501

        :param contact_fax: The contact_fax of this Contact.  # noqa: E501
        :type: str
        """

        self._contact_fax = contact_fax

    @property
    def contact_website(self):
        """Gets the contact_website of this Contact.  # noqa: E501

        เว็บไซต์ ผู้ติดต่อ <br> <ex>Eample: www.flowaccount.com</ex>  # noqa: E501

        :return: The contact_website of this Contact.  # noqa: E501
        :rtype: str
        """
        return self._contact_website

    @contact_website.setter
    def contact_website(self, contact_website):
        """Sets the contact_website of this Contact.

        เว็บไซต์ ผู้ติดต่อ <br> <ex>Eample: www.flowaccount.com</ex>  # noqa: E501

        :param contact_website: The contact_website of this Contact.  # noqa: E501
        :type: str
        """

        self._contact_website = contact_website

    @property
    def conatact_shipping_address(self):
        """Gets the conatact_shipping_address of this Contact.  # noqa: E501

        ที่อยู่สำหรับจัดส่ง  # noqa: E501

        :return: The conatact_shipping_address of this Contact.  # noqa: E501
        :rtype: str
        """
        return self._conatact_shipping_address

    @conatact_shipping_address.setter
    def conatact_shipping_address(self, conatact_shipping_address):
        """Sets the conatact_shipping_address of this Contact.

        ที่อยู่สำหรับจัดส่ง  # noqa: E501

        :param conatact_shipping_address: The conatact_shipping_address of this Contact.  # noqa: E501
        :type: str
        """

        self._conatact_shipping_address = conatact_shipping_address

    @property
    def contact_note(self):
        """Gets the contact_note of this Contact.  # noqa: E501

        โน๊ต  # noqa: E501

        :return: The contact_note of this Contact.  # noqa: E501
        :rtype: str
        """
        return self._contact_note

    @contact_note.setter
    def contact_note(self, contact_note):
        """Sets the contact_note of this Contact.

        โน๊ต  # noqa: E501

        :param contact_note: The contact_note of this Contact.  # noqa: E501
        :type: str
        """

        self._contact_note = contact_note

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.openapi_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, Contact):
            return False

        return self.to_dict() == other.to_dict()

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        if not isinstance(other, Contact):
            return True

        return self.to_dict() != other.to_dict()
