# coding: utf-8

"""
    FlowAccount Open API

    FlowAccount.com โปรแกรมบัญชีออนไลน์ใช้งานง่าย สำหรับธุรกิจที่พึ่งเริ่มต้น   # Introduction **Servers Production**    site: https://www.flowaccount.com    api url: https://openapi.flowaccount.com/v1    **Beta test**   site: http://sandbox-new.flowaccount.com/    api url: https://openapi.flowaccount.com/test    **PostMan Collection**   site: https://www.getpostman.com/collections/01e7c68d7093e2092a64  # noqa: E501

    The version of the OpenAPI document: 2-oas3
    Contact: developer@flowaccount.com
    Generated by: https://openapi-generator.tech
"""


import pprint
import re  # noqa: F401

import six

from openapi_client.configuration import Configuration


class AttachmentResponseData(object):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    """
    Attributes:
      openapi_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    openapi_types = {
        'attachment_id': 'int',
        'created_on': 'object',
        'attachment_name': 'str',
        'order_number': 'int',
        'is_display': 'bool',
        'attachment_path': 'str'
    }

    attribute_map = {
        'attachment_id': 'attachmentId',
        'created_on': 'createdOn',
        'attachment_name': 'attachmentName',
        'order_number': 'orderNumber',
        'is_display': 'isDisplay',
        'attachment_path': 'attachmentPath'
    }

    def __init__(self, attachment_id=None, created_on=None, attachment_name=None, order_number=None, is_display=True, attachment_path=None, local_vars_configuration=None):  # noqa: E501
        """AttachmentResponseData - a model defined in OpenAPI"""  # noqa: E501
        if local_vars_configuration is None:
            local_vars_configuration = Configuration()
        self.local_vars_configuration = local_vars_configuration

        self._attachment_id = None
        self._created_on = None
        self._attachment_name = None
        self._order_number = None
        self._is_display = None
        self._attachment_path = None
        self.discriminator = None

        if attachment_id is not None:
            self.attachment_id = attachment_id
        if created_on is not None:
            self.created_on = created_on
        if attachment_name is not None:
            self.attachment_name = attachment_name
        if order_number is not None:
            self.order_number = order_number
        if is_display is not None:
            self.is_display = is_display
        if attachment_path is not None:
            self.attachment_path = attachment_path

    @property
    def attachment_id(self):
        """Gets the attachment_id of this AttachmentResponseData.  # noqa: E501

        เลข Id ไฟล์แนบเอกสาร  # noqa: E501

        :return: The attachment_id of this AttachmentResponseData.  # noqa: E501
        :rtype: int
        """
        return self._attachment_id

    @attachment_id.setter
    def attachment_id(self, attachment_id):
        """Sets the attachment_id of this AttachmentResponseData.

        เลข Id ไฟล์แนบเอกสาร  # noqa: E501

        :param attachment_id: The attachment_id of this AttachmentResponseData.  # noqa: E501
        :type: int
        """

        self._attachment_id = attachment_id

    @property
    def created_on(self):
        """Gets the created_on of this AttachmentResponseData.  # noqa: E501

        วันที่แนบไฟล์เอกสาร รูปแบบ yyyy-MM-dd <br> <ex>Example: 2020-01-01</ex>  # noqa: E501

        :return: The created_on of this AttachmentResponseData.  # noqa: E501
        :rtype: object
        """
        return self._created_on

    @created_on.setter
    def created_on(self, created_on):
        """Sets the created_on of this AttachmentResponseData.

        วันที่แนบไฟล์เอกสาร รูปแบบ yyyy-MM-dd <br> <ex>Example: 2020-01-01</ex>  # noqa: E501

        :param created_on: The created_on of this AttachmentResponseData.  # noqa: E501
        :type: object
        """

        self._created_on = created_on

    @property
    def attachment_name(self):
        """Gets the attachment_name of this AttachmentResponseData.  # noqa: E501

        ชื่อไฟล์แนบเอกสาร  # noqa: E501

        :return: The attachment_name of this AttachmentResponseData.  # noqa: E501
        :rtype: str
        """
        return self._attachment_name

    @attachment_name.setter
    def attachment_name(self, attachment_name):
        """Sets the attachment_name of this AttachmentResponseData.

        ชื่อไฟล์แนบเอกสาร  # noqa: E501

        :param attachment_name: The attachment_name of this AttachmentResponseData.  # noqa: E501
        :type: str
        """

        self._attachment_name = attachment_name

    @property
    def order_number(self):
        """Gets the order_number of this AttachmentResponseData.  # noqa: E501

        ลำดับไฟล์แนบเอกสาร  # noqa: E501

        :return: The order_number of this AttachmentResponseData.  # noqa: E501
        :rtype: int
        """
        return self._order_number

    @order_number.setter
    def order_number(self, order_number):
        """Sets the order_number of this AttachmentResponseData.

        ลำดับไฟล์แนบเอกสาร  # noqa: E501

        :param order_number: The order_number of this AttachmentResponseData.  # noqa: E501
        :type: int
        """

        self._order_number = order_number

    @property
    def is_display(self):
        """Gets the is_display of this AttachmentResponseData.  # noqa: E501

        สถานะการแสดงไฟล์แนบเอกสาร  # noqa: E501

        :return: The is_display of this AttachmentResponseData.  # noqa: E501
        :rtype: bool
        """
        return self._is_display

    @is_display.setter
    def is_display(self, is_display):
        """Sets the is_display of this AttachmentResponseData.

        สถานะการแสดงไฟล์แนบเอกสาร  # noqa: E501

        :param is_display: The is_display of this AttachmentResponseData.  # noqa: E501
        :type: bool
        """

        self._is_display = is_display

    @property
    def attachment_path(self):
        """Gets the attachment_path of this AttachmentResponseData.  # noqa: E501

        path ที่อยู่ไฟล์แนบเอกสาร  # noqa: E501

        :return: The attachment_path of this AttachmentResponseData.  # noqa: E501
        :rtype: str
        """
        return self._attachment_path

    @attachment_path.setter
    def attachment_path(self, attachment_path):
        """Sets the attachment_path of this AttachmentResponseData.

        path ที่อยู่ไฟล์แนบเอกสาร  # noqa: E501

        :param attachment_path: The attachment_path of this AttachmentResponseData.  # noqa: E501
        :type: str
        """

        self._attachment_path = attachment_path

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.openapi_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, AttachmentResponseData):
            return False

        return self.to_dict() == other.to_dict()

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        if not isinstance(other, AttachmentResponseData):
            return True

        return self.to_dict() != other.to_dict()
