# coding: utf-8

"""
    FlowAccount Open API

    # Introduction  **Servers Production**    <site>Site:</site> https://www.flowaccount.com    <site>Api url:</site> https://openapi.flowaccount.com/v1    **Beta test**   <site>Site:</site> http://sandbox-new.flowaccount.com/    <site>Api url:</site> https://openapi.flowaccount.com/test    **PostMan Collection**   <site>Link:</site> https://www.getpostman.com/collections/01e7c68d7093e2092a64  # noqa: E501

    The version of the OpenAPI document: 2-oas3
    Contact: developer_support@flowaccount.com
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import openapi_client
from openapi_client.models.all_withholiding_tax_document_response import AllWithholidingTaxDocumentResponse  # noqa: E501
from openapi_client.rest import ApiException

class TestAllWithholidingTaxDocumentResponse(unittest.TestCase):
    """AllWithholidingTaxDocumentResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test AllWithholidingTaxDocumentResponse
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = openapi_client.models.all_withholiding_tax_document_response.AllWithholidingTaxDocumentResponse()  # noqa: E501
        if include_optional :
            return AllWithholidingTaxDocumentResponse(
                status = True, 
                message = '0', 
                code = 56, 
                data = openapi_client.models.all_withholiding_tax_document_response_data.AllWithholidingTaxDocumentResponse_data(
                    list = [
                        openapi_client.models.withholiding_tax_document_response_data.WithholidingTaxDocumentResponse_data(
                            document_id = '0', 
                            document_serial = '0', 
                            contact_code = '0', 
                            contact_name = '0', 
                            contact_address = '0', 
                            contact_tax_id = '1234567890123', 
                            contact_branch = '0', 
                            contact_person = '0', 
                            contact_email = 'contact@email.com', 
                            contact_number = '099-999-9999', 
                            contact_zip_code = '0', 
                            contact_group = 56, 
                            published_on = 'Wed Jan 01 07:00:00 ICT 2020', 
                            entity = 56, 
                            text_other = '2020', 
                            withholding_tax_items = [
                                openapi_client.models.withholiding_tax_item.WithholidingTaxItem(
                                    income_type = 56, 
                                    description = '0', 
                                    tax_rate = 1.337, 
                                    tax_amount = 1.337, 
                                    tax_amount_no_vat = 1.337, 
                                    withheld = 1.337, 
                                    total = 1.337, 
                                    vat_type = 56, )
                                ], 
                            total = 1.337, 
                            total_tax_withheld = 1.337, 
                            tax_payment = 56, 
                            tax_payment_others = '0', 
                            provident_fund_number = '0', 
                            provident_fund_amount = '0', 
                            social_security_amount = '0', 
                            remarks = '0', 
                            internal_notes = '0', 
                            show_signature_or_stamp = True, 
                            company = openapi_client.models.simple_document_response_all_of_data_company.SimpleDocumentResponse_allOf_data_company(
                                company_name = '0', 
                                company_name_en = '0', 
                                company_address = '0', 
                                company_address_en = '0', 
                                company_tax_id = '0', 
                                company_branch = '0', 
                                company_branch_en = '0', 
                                company_phone = '0', 
                                company_mobile = '0', 
                                company_fax = '0', 
                                company_website = '0', ), 
                            status = 56, 
                            status_string = 56, 
                            document_type = 56, 
                            allow_delete = True, )
                        ], )
            )
        else :
            return AllWithholidingTaxDocumentResponse(
        )

    def testAllWithholidingTaxDocumentResponse(self):
        """Test AllWithholidingTaxDocumentResponse"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()
