# coding: utf-8

"""
    FlowAccount Open API

    # Introduction  **Servers Production**    <site>Site:</site> https://www.flowaccount.com    <site>Api url:</site> https://openapi.flowaccount.com/v1    **Beta test**   <site>Site:</site> http://sandbox-new.flowaccount.com/    <site>Api url:</site> https://openapi.flowaccount.com/test    **PostMan Collection**   <site>Link:</site> https://www.getpostman.com/collections/01e7c68d7093e2092a64  # noqa: E501

    The version of the OpenAPI document: 2-oas3
    Contact: developer_support@flowaccount.com
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import openapi_client
from openapi_client.models.expense_inline_document import ExpenseInlineDocument  # noqa: E501
from openapi_client.rest import ApiException

class TestExpenseInlineDocument(unittest.TestCase):
    """ExpenseInlineDocument unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test ExpenseInlineDocument
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = openapi_client.models.expense_inline_document.ExpenseInlineDocument()  # noqa: E501
        if include_optional :
            return ExpenseInlineDocument(
                items = [
                    openapi_client.models.expense_inline_product_item.ExpenseInlineProductItem(
                        system_code = 1001, 
                        category_id = 40238, 
                        description = '0', 
                        name_local = 'การตลาดและโฆษณา', 
                        name_foreign = 'Marketing & Advertising', 
                        credit_category = 2, 
                        credit_id = 1081994, 
                        credit_code = '21399', 
                        credit_name_local = '21399 / เจ้าหนี้อื่นๆ', 
                        credit_name_foreign = '21399 / Other Payables', 
                        debit_category = 5, 
                        debit_id = 1082099, 
                        debit_code = '53029', 
                        debit_name_local = '53029 / ค่าใช้จ่ายด้านโฆษณาและการตลาดอื่นๆ', 
                        debit_name_foreign = '53029 / Other advertising and marketing expenses', 
                        quantity = 1.337, 
                        unit_name = '0', 
                        price_per_unit = 1.337, 
                        discount_amount = 56, 
                        vat_rate = 56, 
                        total = 1.337, )
                    ], 
                discount_type = 56, 
                use_inline_discount = True, 
                use_inline_vat = True, 
                exempt_amount = 1.337, 
                vatable_amount = 1.337
            )
        else :
            return ExpenseInlineDocument(
        )

    def testExpenseInlineDocument(self):
        """Test ExpenseInlineDocument"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()
