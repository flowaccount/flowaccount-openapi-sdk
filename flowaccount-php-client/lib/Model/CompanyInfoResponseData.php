<?php
/**
 * CompanyInfoResponseData
 *
 * PHP version 5
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * FlowAccount Open API
 *
 * # Introduction  **Servers Production**    <site>Site:</site> https://www.flowaccount.com    <site>Api url:</site> https://openapi.flowaccount.com/v1    **Beta test**   <site>Site:</site> http://sandbox-new.flowaccount.com/    <site>Api url:</site> https://openapi.flowaccount.com/test    **PostMan Collection**   <site>Link:</site> https://www.getpostman.com/collections/01e7c68d7093e2092a64
 *
 * The version of the OpenAPI document: 2-oas3
 * Contact: developer_support@flowaccount.com
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 4.3.1
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace OpenAPI\Client\Model;

use \ArrayAccess;
use \OpenAPI\Client\ObjectSerializer;

/**
 * CompanyInfoResponseData Class Doc Comment
 *
 * @category Class
 * @description ข้อมูลบริษัทเรา
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class CompanyInfoResponseData implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $openAPIModelName = 'CompanyInfoResponse_data';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPITypes = [
        'company_id' => 'int',
        'company_type' => 'string',
        'compnay_name' => 'string',
        'company_name_en' => 'string',
        'company_address' => 'string',
        'company_address_en' => 'string',
        'company_zip_code' => 'string',
        'company_tax_id' => 'string',
        'company_branch' => 'string',
        'company_branch_en' => 'string',
        'company_branch_code' => 'string',
        'company_phone' => 'string',
        'company_mobile' => 'string',
        'company_fax' => 'string',
        'company_website' => 'string'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPIFormats = [
        'company_id' => 'int64',
        'company_type' => null,
        'compnay_name' => null,
        'company_name_en' => null,
        'company_address' => null,
        'company_address_en' => null,
        'company_zip_code' => null,
        'company_tax_id' => null,
        'company_branch' => null,
        'company_branch_en' => null,
        'company_branch_code' => null,
        'company_phone' => null,
        'company_mobile' => null,
        'company_fax' => null,
        'company_website' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPITypes()
    {
        return self::$openAPITypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPIFormats()
    {
        return self::$openAPIFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'company_id' => 'companyId',
        'company_type' => 'companyType',
        'compnay_name' => 'compnayName',
        'company_name_en' => 'companyNameEn',
        'company_address' => 'companyAddress',
        'company_address_en' => 'companyAddressEn',
        'company_zip_code' => 'companyZipCode',
        'company_tax_id' => 'companyTaxId',
        'company_branch' => 'companyBranch',
        'company_branch_en' => 'companyBranchEn',
        'company_branch_code' => 'companyBranchCode',
        'company_phone' => 'companyPhone',
        'company_mobile' => 'companyMobile',
        'company_fax' => 'companyFax',
        'company_website' => 'companyWebsite'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'company_id' => 'setCompanyId',
        'company_type' => 'setCompanyType',
        'compnay_name' => 'setCompnayName',
        'company_name_en' => 'setCompanyNameEn',
        'company_address' => 'setCompanyAddress',
        'company_address_en' => 'setCompanyAddressEn',
        'company_zip_code' => 'setCompanyZipCode',
        'company_tax_id' => 'setCompanyTaxId',
        'company_branch' => 'setCompanyBranch',
        'company_branch_en' => 'setCompanyBranchEn',
        'company_branch_code' => 'setCompanyBranchCode',
        'company_phone' => 'setCompanyPhone',
        'company_mobile' => 'setCompanyMobile',
        'company_fax' => 'setCompanyFax',
        'company_website' => 'setCompanyWebsite'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'company_id' => 'getCompanyId',
        'company_type' => 'getCompanyType',
        'compnay_name' => 'getCompnayName',
        'company_name_en' => 'getCompanyNameEn',
        'company_address' => 'getCompanyAddress',
        'company_address_en' => 'getCompanyAddressEn',
        'company_zip_code' => 'getCompanyZipCode',
        'company_tax_id' => 'getCompanyTaxId',
        'company_branch' => 'getCompanyBranch',
        'company_branch_en' => 'getCompanyBranchEn',
        'company_branch_code' => 'getCompanyBranchCode',
        'company_phone' => 'getCompanyPhone',
        'company_mobile' => 'getCompanyMobile',
        'company_fax' => 'getCompanyFax',
        'company_website' => 'getCompanyWebsite'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$openAPIModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['company_id'] = isset($data['company_id']) ? $data['company_id'] : 0;
        $this->container['company_type'] = isset($data['company_type']) ? $data['company_type'] : '10';
        $this->container['compnay_name'] = isset($data['compnay_name']) ? $data['compnay_name'] : null;
        $this->container['company_name_en'] = isset($data['company_name_en']) ? $data['company_name_en'] : null;
        $this->container['company_address'] = isset($data['company_address']) ? $data['company_address'] : null;
        $this->container['company_address_en'] = isset($data['company_address_en']) ? $data['company_address_en'] : null;
        $this->container['company_zip_code'] = isset($data['company_zip_code']) ? $data['company_zip_code'] : null;
        $this->container['company_tax_id'] = isset($data['company_tax_id']) ? $data['company_tax_id'] : null;
        $this->container['company_branch'] = isset($data['company_branch']) ? $data['company_branch'] : 'สำนักงานใหญ่';
        $this->container['company_branch_en'] = isset($data['company_branch_en']) ? $data['company_branch_en'] : null;
        $this->container['company_branch_code'] = isset($data['company_branch_code']) ? $data['company_branch_code'] : null;
        $this->container['company_phone'] = isset($data['company_phone']) ? $data['company_phone'] : null;
        $this->container['company_mobile'] = isset($data['company_mobile']) ? $data['company_mobile'] : null;
        $this->container['company_fax'] = isset($data['company_fax']) ? $data['company_fax'] : null;
        $this->container['company_website'] = isset($data['company_website']) ? $data['company_website'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets company_id
     *
     * @return int|null
     */
    public function getCompanyId()
    {
        return $this->container['company_id'];
    }

    /**
     * Sets company_id
     *
     * @param int|null $company_id รหัสบริษัท
     *
     * @return $this
     */
    public function setCompanyId($company_id)
    {
        $this->container['company_id'] = $company_id;

        return $this;
    }

    /**
     * Gets company_type
     *
     * @return string|null
     */
    public function getCompanyType()
    {
        return $this->container['company_type'];
    }

    /**
     * Sets company_type
     *
     * @param string|null $company_type ประเภทธุรกิจ <br> 10 = บริษัท - จดภาษีมูลค่าเพิ่มแล้ว <br> 20 = บริษัท - ยังไม่เข้าระบบภาษีมูลค่าเพิ่ม <br> 30 = บุคคลธรรมดา/ฟรีแลนซ์ - ยังไม่เข้าระบบภาษีมูลค่าเพิ่ม <br> 40 = บุคคลธรรมดา/ฟรีแลนซ์ - ยังไม่เข้าระบบภาษีมูลค่าเพิ่ม <br> 50 = ห้างหุ้นส่วนจำกัด - จดภาษีมูลค่าเพิ่มแล้ว <br> 60 = ห้างหุ้นส่วนจำกัด - ยังไม่เข้าระบบภาษีมูลค่าเพิ่ม
     *
     * @return $this
     */
    public function setCompanyType($company_type)
    {
        $this->container['company_type'] = $company_type;

        return $this;
    }

    /**
     * Gets compnay_name
     *
     * @return string|null
     */
    public function getCompnayName()
    {
        return $this->container['compnay_name'];
    }

    /**
     * Sets compnay_name
     *
     * @param string|null $compnay_name ชื่อบริษัท
     *
     * @return $this
     */
    public function setCompnayName($compnay_name)
    {
        $this->container['compnay_name'] = $compnay_name;

        return $this;
    }

    /**
     * Gets company_name_en
     *
     * @return string|null
     */
    public function getCompanyNameEn()
    {
        return $this->container['company_name_en'];
    }

    /**
     * Sets company_name_en
     *
     * @param string|null $company_name_en ชื่อบริษัท ภาษาอังกฤษ
     *
     * @return $this
     */
    public function setCompanyNameEn($company_name_en)
    {
        $this->container['company_name_en'] = $company_name_en;

        return $this;
    }

    /**
     * Gets company_address
     *
     * @return string|null
     */
    public function getCompanyAddress()
    {
        return $this->container['company_address'];
    }

    /**
     * Sets company_address
     *
     * @param string|null $company_address ที่อยู่บริษัท
     *
     * @return $this
     */
    public function setCompanyAddress($company_address)
    {
        $this->container['company_address'] = $company_address;

        return $this;
    }

    /**
     * Gets company_address_en
     *
     * @return string|null
     */
    public function getCompanyAddressEn()
    {
        return $this->container['company_address_en'];
    }

    /**
     * Sets company_address_en
     *
     * @param string|null $company_address_en ที่อยู่บริษัท ภาษาอังกฤษ
     *
     * @return $this
     */
    public function setCompanyAddressEn($company_address_en)
    {
        $this->container['company_address_en'] = $company_address_en;

        return $this;
    }

    /**
     * Gets company_zip_code
     *
     * @return string|null
     */
    public function getCompanyZipCode()
    {
        return $this->container['company_zip_code'];
    }

    /**
     * Sets company_zip_code
     *
     * @param string|null $company_zip_code รหัสไปรษณีย์ บริษัท <br><ex>Example: 10150</ex>
     *
     * @return $this
     */
    public function setCompanyZipCode($company_zip_code)
    {
        $this->container['company_zip_code'] = $company_zip_code;

        return $this;
    }

    /**
     * Gets company_tax_id
     *
     * @return string|null
     */
    public function getCompanyTaxId()
    {
        return $this->container['company_tax_id'];
    }

    /**
     * Sets company_tax_id
     *
     * @param string|null $company_tax_id เลขประจำตัวผู้เสียภาษี บริษัท <br><ex>Example: 0105558096348</ex>
     *
     * @return $this
     */
    public function setCompanyTaxId($company_tax_id)
    {
        $this->container['company_tax_id'] = $company_tax_id;

        return $this;
    }

    /**
     * Gets company_branch
     *
     * @return string|null
     */
    public function getCompanyBranch()
    {
        return $this->container['company_branch'];
    }

    /**
     * Sets company_branch
     *
     * @param string|null $company_branch ชื่อ และ รหัสสาขา <br><ex>Example: สำนักงานใหญ่</ex>
     *
     * @return $this
     */
    public function setCompanyBranch($company_branch)
    {
        $this->container['company_branch'] = $company_branch;

        return $this;
    }

    /**
     * Gets company_branch_en
     *
     * @return string|null
     */
    public function getCompanyBranchEn()
    {
        return $this->container['company_branch_en'];
    }

    /**
     * Sets company_branch_en
     *
     * @param string|null $company_branch_en ชื่อ และ รหัสสาขา ภาษาอังกฤษ <br><ex>Example: Head Office</ex>
     *
     * @return $this
     */
    public function setCompanyBranchEn($company_branch_en)
    {
        $this->container['company_branch_en'] = $company_branch_en;

        return $this;
    }

    /**
     * Gets company_branch_code
     *
     * @return string|null
     */
    public function getCompanyBranchCode()
    {
        return $this->container['company_branch_code'];
    }

    /**
     * Sets company_branch_code
     *
     * @param string|null $company_branch_code รหัสสาขา <br><ex>Example: 00000</ex>
     *
     * @return $this
     */
    public function setCompanyBranchCode($company_branch_code)
    {
        $this->container['company_branch_code'] = $company_branch_code;

        return $this;
    }

    /**
     * Gets company_phone
     *
     * @return string|null
     */
    public function getCompanyPhone()
    {
        return $this->container['company_phone'];
    }

    /**
     * Sets company_phone
     *
     * @param string|null $company_phone เบอร์โทรสำนักงาน <br><ex>Example: 02-999-9999</ex>
     *
     * @return $this
     */
    public function setCompanyPhone($company_phone)
    {
        $this->container['company_phone'] = $company_phone;

        return $this;
    }

    /**
     * Gets company_mobile
     *
     * @return string|null
     */
    public function getCompanyMobile()
    {
        return $this->container['company_mobile'];
    }

    /**
     * Sets company_mobile
     *
     * @param string|null $company_mobile เบอร์โทรศัพท์มือถือ <br><ex>Example: 099-999-9999</ex>
     *
     * @return $this
     */
    public function setCompanyMobile($company_mobile)
    {
        $this->container['company_mobile'] = $company_mobile;

        return $this;
    }

    /**
     * Gets company_fax
     *
     * @return string|null
     */
    public function getCompanyFax()
    {
        return $this->container['company_fax'];
    }

    /**
     * Sets company_fax
     *
     * @param string|null $company_fax เบอร์โทรสาร <br><ex>Example: 02-999-9999 ต่อ 1</ex>
     *
     * @return $this
     */
    public function setCompanyFax($company_fax)
    {
        $this->container['company_fax'] = $company_fax;

        return $this;
    }

    /**
     * Gets company_website
     *
     * @return string|null
     */
    public function getCompanyWebsite()
    {
        return $this->container['company_website'];
    }

    /**
     * Sets company_website
     *
     * @param string|null $company_website เว็บไซต์ <br><ex>Example: www.flowaccount.com</ex>
     *
     * @return $this
     */
    public function setCompanyWebsite($company_website)
    {
        $this->container['company_website'] = $company_website;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        return json_encode(
            ObjectSerializer::sanitizeForSerialization($this),
            JSON_PRETTY_PRINT
        );
    }

    /**
     * Gets a header-safe presentation of the object
     *
     * @return string
     */
    public function toHeaderValue()
    {
        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


