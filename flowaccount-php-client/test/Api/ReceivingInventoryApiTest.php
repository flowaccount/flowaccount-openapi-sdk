<?php
/**
 * ReceivingInventoryApiTest
 * PHP version 5
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * FlowAccount Open API
 *
 * # Introduction  **Servers Production**    <site>Site:</site> https://www.flowaccount.com    <site>Api url:</site> https://openapi.flowaccount.com/v1    **Beta test**   <site>Site:</site> http://sandbox-new.flowaccount.com/    <site>Api url:</site> https://openapi.flowaccount.com/test    **PostMan Collection**   <site>Link:</site> https://www.getpostman.com/collections/01e7c68d7093e2092a64
 *
 * The version of the OpenAPI document: 2-oas3
 * Contact: developer_support@flowaccount.com
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 4.3.1
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the endpoint.
 */

namespace OpenAPI\Client;

use \OpenAPI\Client\Configuration;
use \OpenAPI\Client\ApiException;
use \OpenAPI\Client\ObjectSerializer;
use PHPUnit\Framework\TestCase;

/**
 * ReceivingInventoryApiTest Class Doc Comment
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class ReceivingInventoryApiTest extends TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass()
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp()
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown()
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass()
    {
    }

    /**
     * Test case for purchasesEmailDocumentPost
     *
     * Send email receiving inventory document..
     *
     */
    public function testPurchasesEmailDocumentPost()
    {
    }

    /**
     * Test case for purchasesGet
     *
     * Get all receiving inventory documents..
     *
     */
    public function testPurchasesGet()
    {
    }

    /**
     * Test case for purchasesIdAttachmentPost
     *
     * Attachment receiving inventory document..
     *
     */
    public function testPurchasesIdAttachmentPost()
    {
    }

    /**
     * Test case for purchasesIdDelete
     *
     * Delete receiving inventory document..
     *
     */
    public function testPurchasesIdDelete()
    {
    }

    /**
     * Test case for purchasesIdGet
     *
     * Get receiving inventory document..
     *
     */
    public function testPurchasesIdGet()
    {
    }

    /**
     * Test case for purchasesIdPaymentPost
     *
     * Change status is paid receiving inventory document..
     *
     */
    public function testPurchasesIdPaymentPost()
    {
    }

    /**
     * Test case for purchasesIdPut
     *
     * Edit receiving inventory document..
     *
     */
    public function testPurchasesIdPut()
    {
    }

    /**
     * Test case for purchasesIdStatusStatusIdPost
     *
     * Change status receiving inventory document..
     *
     */
    public function testPurchasesIdStatusStatusIdPost()
    {
    }

    /**
     * Test case for purchasesInlinePost
     *
     * Create receiving inventory document inline discount or inline vat..
     *
     */
    public function testPurchasesInlinePost()
    {
    }

    /**
     * Test case for purchasesInlineWithPaymentPost
     *
     * Create receiving inventory document inline discount or inline vat with payment..
     *
     */
    public function testPurchasesInlineWithPaymentPost()
    {
    }

    /**
     * Test case for purchasesPost
     *
     * Create receiving inventory document..
     *
     */
    public function testPurchasesPost()
    {
    }

    /**
     * Test case for purchasesSharedocumentPost
     *
     * Share link receiving inventory document..
     *
     */
    public function testPurchasesSharedocumentPost()
    {
    }

    /**
     * Test case for purchasesWithPaymentPost
     *
     * Create receiving inventory document with payment..
     *
     */
    public function testPurchasesWithPaymentPost()
    {
    }
}
