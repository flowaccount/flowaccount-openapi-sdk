/* 
 * FlowAccount Open API
 *
 * FlowAccount.com โปรแกรมบัญชีออนไลน์ใช้งานง่าย สำหรับธุรกิจที่พึ่งเริ่มต้น   # Introduction **Servers Production**    site: https://www.flowaccount.com    api url: https://openapi.flowaccount.com/v1    **Beta test**   site: http://sandbox-new.flowaccount.com/    api url: https://openapi.flowaccount.com/test    **PostMan Collection**   site: https://www.getpostman.com/collections/01e7c68d7093e2092a64
 *
 * The version of the OpenAPI document: 2-oas3
 * Contact: developer@flowaccount.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using Flowaccount.OpenAPITools.Client;
using Flowaccount.OpenAPITools.Api;
using Flowaccount.OpenAPITools.Model;

namespace Flowaccount.OpenAPITools.Test
{
    /// <summary>
    ///  Class for testing BusinessInfomationApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class BusinessInfomationApiTests
    {
        private BusinessInfomationApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new BusinessInfomationApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of BusinessInfomationApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOf' BusinessInfomationApi
            //Assert.IsInstanceOf(typeof(BusinessInfomationApi), instance);
        }

        
        /// <summary>
        /// Test CompanyInfoGet
        /// </summary>
        [Test]
        public void CompanyInfoGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string authorization = null;
            //var response = instance.CompanyInfoGet(authorization);
            //Assert.IsInstanceOf(typeof(CompanyInfoResponse), response, "response is CompanyInfoResponse");
        }
        
        /// <summary>
        /// Test CompanyInfoPut
        /// </summary>
        [Test]
        public void CompanyInfoPutTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string authorization = null;
            //CompanyInfo companyInfo = null;
            //var response = instance.CompanyInfoPut(authorization, companyInfo);
            //Assert.IsInstanceOf(typeof(CompanyInfoResponse), response, "response is CompanyInfoResponse");
        }
        
    }

}
