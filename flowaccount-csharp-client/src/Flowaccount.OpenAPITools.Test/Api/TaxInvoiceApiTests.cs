/* 
 * FlowAccount Open API
 *
 * FlowAccount.com โปรแกรมบัญชีออนไลน์ใช้งานง่าย สำหรับธุรกิจที่พึ่งเริ่มต้น   # Introduction **Servers Production**    site: https://www.flowaccount.com    api url: https://openapi.flowaccount.com/v1    **Beta test**   site: http://sandbox-new.flowaccount.com/    api url: https://openapi.flowaccount.com/test
 *
 * The version of the OpenAPI document: 2-oas3
 * Contact: developer@flowaccount.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using Flowaccount.OpenAPITools.Client;
using Flowaccount.OpenAPITools.Api;
using Flowaccount.OpenAPITools.Model;

namespace Flowaccount.OpenAPITools.Test
{
    /// <summary>
    ///  Class for testing TaxInvoiceApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class TaxInvoiceApiTests
    {
        private TaxInvoiceApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new TaxInvoiceApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of TaxInvoiceApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOf' TaxInvoiceApi
            //Assert.IsInstanceOf(typeof(TaxInvoiceApi), instance);
        }

        
        /// <summary>
        /// Test TaxInvoicesEmailDocumentPost
        /// </summary>
        [Test]
        public void TaxInvoicesEmailDocumentPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string authorization = null;
            //SendEmailCoppies sendEmailCoppies = null;
            //var response = instance.TaxInvoicesEmailDocumentPost(authorization, sendEmailCoppies);
            //Assert.IsInstanceOf(typeof(SendEmailResponse), response, "response is SendEmailResponse");
        }
        
        /// <summary>
        /// Test TaxInvoicesGet
        /// </summary>
        [Test]
        public void TaxInvoicesGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string currentPage = null;
            //string pageSize = null;
            //string authorization = null;
            //string sortBy = null;
            //string filter = null;
            //var response = instance.TaxInvoicesGet(currentPage, pageSize, authorization, sortBy, filter);
            //Assert.IsInstanceOf(typeof(InlineDocumentResponse), response, "response is InlineDocumentResponse");
        }
        
        /// <summary>
        /// Test TaxInvoicesIdAttachmentPost
        /// </summary>
        [Test]
        public void TaxInvoicesIdAttachmentPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string authorization = null;
            //string id = null;
            //System.IO.Stream file = null;
            //var response = instance.TaxInvoicesIdAttachmentPost(authorization, id, file);
            //Assert.IsInstanceOf(typeof(AttachmentResponse), response, "response is AttachmentResponse");
        }
        
        /// <summary>
        /// Test TaxInvoicesIdDelete
        /// </summary>
        [Test]
        public void TaxInvoicesIdDeleteTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string authorization = null;
            //string id = null;
            //var response = instance.TaxInvoicesIdDelete(authorization, id);
            //Assert.IsInstanceOf(typeof(DeleteResponse), response, "response is DeleteResponse");
        }
        
        /// <summary>
        /// Test TaxInvoicesIdGet
        /// </summary>
        [Test]
        public void TaxInvoicesIdGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string authorization = null;
            //string id = null;
            //var response = instance.TaxInvoicesIdGet(authorization, id);
            //Assert.IsInstanceOf(typeof(SimpleDocumentResponse), response, "response is SimpleDocumentResponse");
        }
        
        /// <summary>
        /// Test TaxInvoicesIdPaymentPost
        /// </summary>
        [Test]
        public void TaxInvoicesIdPaymentPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string authorization = null;
            //string id = null;
            //PaymentDocument paymentDocument = null;
            //var response = instance.TaxInvoicesIdPaymentPost(authorization, id, paymentDocument);
            //Assert.IsInstanceOf(typeof(InlineDocumentResponse), response, "response is InlineDocumentResponse");
        }
        
        /// <summary>
        /// Test TaxInvoicesIdStatusKeyStatusIdPost
        /// </summary>
        [Test]
        public void TaxInvoicesIdStatusKeyStatusIdPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string authorization = null;
            //string id = null;
            //string statusId = null;
            //var response = instance.TaxInvoicesIdStatusKeyStatusIdPost(authorization, id, statusId);
            //Assert.IsInstanceOf(typeof(InlineDocumentResponse), response, "response is InlineDocumentResponse");
        }
        
        /// <summary>
        /// Test TaxInvoicesInlinePost
        /// </summary>
        [Test]
        public void TaxInvoicesInlinePostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string authorization = null;
            //InlineDocument inlineDocument = null;
            //var response = instance.TaxInvoicesInlinePost(authorization, inlineDocument);
            //Assert.IsInstanceOf(typeof(InlineDocumentResponse), response, "response is InlineDocumentResponse");
        }
        
        /// <summary>
        /// Test TaxInvoicesPost
        /// </summary>
        [Test]
        public void TaxInvoicesPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string authorization = null;
            //SimpleDocument simpleDocument = null;
            //var response = instance.TaxInvoicesPost(authorization, simpleDocument);
            //Assert.IsInstanceOf(typeof(SimpleDocumentResponse), response, "response is SimpleDocumentResponse");
        }
        
        /// <summary>
        /// Test TaxInvoicesSharedocumentPost
        /// </summary>
        [Test]
        public void TaxInvoicesSharedocumentPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string authorization = null;
            //ShareDocument shareDocument = null;
            //var response = instance.TaxInvoicesSharedocumentPost(authorization, shareDocument);
            //Assert.IsInstanceOf(typeof(ShareDocumentResponse), response, "response is ShareDocumentResponse");
        }
        
    }

}
