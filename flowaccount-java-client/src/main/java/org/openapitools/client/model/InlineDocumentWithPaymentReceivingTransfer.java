/*
 * FlowAccount Open API
 * # Introduction  **Servers Production**    <site>Site:</site> https://www.flowaccount.com    <site>Api url:</site> https://openapi.flowaccount.com/v1    **Beta test**   <site>Site:</site> http://sandbox-new.flowaccount.com/    <site>Api url:</site> https://openapi.flowaccount.com/test    **PostMan Collection**   <site>Link:</site> https://www.getpostman.com/collections/01e7c68d7093e2092a64
 *
 * The version of the OpenAPI document: 2-oas3
 * Contact: developer_support@flowaccount.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.client.model.SimpleProductItem;
import org.openapitools.client.model.UpgradeDocument;
import org.threeten.bp.LocalDate;

/**
 * InlineDocumentWithPaymentReceivingTransfer
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2020-06-17T00:38:54.499089+07:00[Asia/Bangkok]")

public class InlineDocumentWithPaymentReceivingTransfer {
  public static final String SERIALIZED_NAME_CONTACT_CODE = "contactCode";
  @SerializedName(SERIALIZED_NAME_CONTACT_CODE)
  private String contactCode;

  public static final String SERIALIZED_NAME_CONTACT_NAME = "contactName";
  @SerializedName(SERIALIZED_NAME_CONTACT_NAME)
  private String contactName;

  public static final String SERIALIZED_NAME_CONTACT_ADDRESS = "contactAddress";
  @SerializedName(SERIALIZED_NAME_CONTACT_ADDRESS)
  private String contactAddress;

  public static final String SERIALIZED_NAME_CONTACT_TAX_ID = "contactTaxId";
  @SerializedName(SERIALIZED_NAME_CONTACT_TAX_ID)
  private String contactTaxId;

  public static final String SERIALIZED_NAME_CONTACT_BRANCH = "contactBranch";
  @SerializedName(SERIALIZED_NAME_CONTACT_BRANCH)
  private String contactBranch;

  public static final String SERIALIZED_NAME_CONTACT_PERSON = "contactPerson";
  @SerializedName(SERIALIZED_NAME_CONTACT_PERSON)
  private String contactPerson;

  public static final String SERIALIZED_NAME_CONTACT_EMAIL = "contactEmail";
  @SerializedName(SERIALIZED_NAME_CONTACT_EMAIL)
  private String contactEmail;

  public static final String SERIALIZED_NAME_CONTACT_NUMBER = "contactNumber";
  @SerializedName(SERIALIZED_NAME_CONTACT_NUMBER)
  private String contactNumber;

  public static final String SERIALIZED_NAME_CONTACT_ZIP_CODE = "contactZipCode";
  @SerializedName(SERIALIZED_NAME_CONTACT_ZIP_CODE)
  private String contactZipCode;

  public static final String SERIALIZED_NAME_CONTACT_GROUP = "contactGroup";
  @SerializedName(SERIALIZED_NAME_CONTACT_GROUP)
  private Integer contactGroup = 1;

  public static final String SERIALIZED_NAME_PUBLISHED_ON = "publishedOn";
  @SerializedName(SERIALIZED_NAME_PUBLISHED_ON)
  private LocalDate publishedOn;

  public static final String SERIALIZED_NAME_CREDIT_TYPE = "creditType";
  @SerializedName(SERIALIZED_NAME_CREDIT_TYPE)
  private Integer creditType = 1;

  public static final String SERIALIZED_NAME_CREDIT_DAYS = "creditDays";
  @SerializedName(SERIALIZED_NAME_CREDIT_DAYS)
  private Integer creditDays = 0;

  public static final String SERIALIZED_NAME_DUE_DATE = "dueDate";
  @SerializedName(SERIALIZED_NAME_DUE_DATE)
  private LocalDate dueDate;

  public static final String SERIALIZED_NAME_SALES_NAME = "salesName";
  @SerializedName(SERIALIZED_NAME_SALES_NAME)
  private String salesName = "อีเมล หรือ ชื่อผู้สร้างเอกสาร";

  public static final String SERIALIZED_NAME_PROJECT_NAME = "projectName";
  @SerializedName(SERIALIZED_NAME_PROJECT_NAME)
  private String projectName;

  public static final String SERIALIZED_NAME_REFERENCE = "reference";
  @SerializedName(SERIALIZED_NAME_REFERENCE)
  private String reference;

  public static final String SERIALIZED_NAME_IS_VAT_INCLUSIVE = "isVatInclusive";
  @SerializedName(SERIALIZED_NAME_IS_VAT_INCLUSIVE)
  private Boolean isVatInclusive = false;

  public static final String SERIALIZED_NAME_USE_RECEIPT_DEDUCTION = "useReceiptDeduction";
  @SerializedName(SERIALIZED_NAME_USE_RECEIPT_DEDUCTION)
  private Boolean useReceiptDeduction = false;

  public static final String SERIALIZED_NAME_ITEMS = "items";
  @SerializedName(SERIALIZED_NAME_ITEMS)
  private List<SimpleProductItem> items = null;

  public static final String SERIALIZED_NAME_SUB_TOTAL = "subTotal";
  @SerializedName(SERIALIZED_NAME_SUB_TOTAL)
  private BigDecimal subTotal = 0d;

  public static final String SERIALIZED_NAME_DISCOUNT_PERCENTAGE = "discountPercentage";
  @SerializedName(SERIALIZED_NAME_DISCOUNT_PERCENTAGE)
  private Integer discountPercentage = 0;

  public static final String SERIALIZED_NAME_DISCOUNT_AMOUNT = "discountAmount";
  @SerializedName(SERIALIZED_NAME_DISCOUNT_AMOUNT)
  private BigDecimal discountAmount = 0d;

  public static final String SERIALIZED_NAME_TOTAL_AFTER_DISCOUNT = "totalAfterDiscount";
  @SerializedName(SERIALIZED_NAME_TOTAL_AFTER_DISCOUNT)
  private BigDecimal totalAfterDiscount;

  public static final String SERIALIZED_NAME_IS_VAT = "isVat";
  @SerializedName(SERIALIZED_NAME_IS_VAT)
  private Boolean isVat = false;

  public static final String SERIALIZED_NAME_VAT_AMOUNT = "vatAmount";
  @SerializedName(SERIALIZED_NAME_VAT_AMOUNT)
  private BigDecimal vatAmount;

  public static final String SERIALIZED_NAME_GRAND_TOTAL = "grandTotal";
  @SerializedName(SERIALIZED_NAME_GRAND_TOTAL)
  private BigDecimal grandTotal;

  public static final String SERIALIZED_NAME_DISCOUNT_TYPE = "discountType";
  @SerializedName(SERIALIZED_NAME_DISCOUNT_TYPE)
  private Integer discountType = 1;

  public static final String SERIALIZED_NAME_USE_INLINE_DISCOUNT = "useInlineDiscount";
  @SerializedName(SERIALIZED_NAME_USE_INLINE_DISCOUNT)
  private Boolean useInlineDiscount = true;

  public static final String SERIALIZED_NAME_USE_INLINE_VAT = "useInlineVat";
  @SerializedName(SERIALIZED_NAME_USE_INLINE_VAT)
  private Boolean useInlineVat;

  public static final String SERIALIZED_NAME_EXEMPT_AMOUNT = "exemptAmount";
  @SerializedName(SERIALIZED_NAME_EXEMPT_AMOUNT)
  private BigDecimal exemptAmount = 0d;

  public static final String SERIALIZED_NAME_VATABLE_AMOUNT = "vatableAmount";
  @SerializedName(SERIALIZED_NAME_VATABLE_AMOUNT)
  private BigDecimal vatableAmount = 0d;

  public static final String SERIALIZED_NAME_DOCUMENT_SHOW_WITHHOLDING_TAX = "documentShowWithholdingTax";
  @SerializedName(SERIALIZED_NAME_DOCUMENT_SHOW_WITHHOLDING_TAX)
  private Boolean documentShowWithholdingTax = false;

  public static final String SERIALIZED_NAME_DOCUMENT_WITHHOLDING_TAX_PERCENTAGE = "documentWithholdingTaxPercentage";
  @SerializedName(SERIALIZED_NAME_DOCUMENT_WITHHOLDING_TAX_PERCENTAGE)
  private Integer documentWithholdingTaxPercentage = 0;

  public static final String SERIALIZED_NAME_DOCUMENT_WITHHOLDING_TAX_AMOUNT = "documentWithholdingTaxAmount";
  @SerializedName(SERIALIZED_NAME_DOCUMENT_WITHHOLDING_TAX_AMOUNT)
  private BigDecimal documentWithholdingTaxAmount = 0d;

  public static final String SERIALIZED_NAME_DOCUMENT_DEDUCTION_TYPE = "documentDeductionType";
  @SerializedName(SERIALIZED_NAME_DOCUMENT_DEDUCTION_TYPE)
  private Integer documentDeductionType = 0;

  public static final String SERIALIZED_NAME_DOCUMENT_DEDUCTION_AMOUNT = "documentDeductionAmount";
  @SerializedName(SERIALIZED_NAME_DOCUMENT_DEDUCTION_AMOUNT)
  private BigDecimal documentDeductionAmount = 0d;

  public static final String SERIALIZED_NAME_REMARKS = "remarks";
  @SerializedName(SERIALIZED_NAME_REMARKS)
  private String remarks;

  public static final String SERIALIZED_NAME_INTERNAL_NOTES = "internalNotes";
  @SerializedName(SERIALIZED_NAME_INTERNAL_NOTES)
  private String internalNotes;

  public static final String SERIALIZED_NAME_SHOW_SIGNATURE_OR_STAMP = "showSignatureOrStamp";
  @SerializedName(SERIALIZED_NAME_SHOW_SIGNATURE_OR_STAMP)
  private Boolean showSignatureOrStamp = true;

  public static final String SERIALIZED_NAME_DOCUMENT_REFERENCE = "documentReference";
  @SerializedName(SERIALIZED_NAME_DOCUMENT_REFERENCE)
  private List<UpgradeDocument> documentReference = null;

  public static final String SERIALIZED_NAME_DOCUMENT_PAYMENT_STRUCTURE_TYPE = "documentPaymentStructureType";
  @SerializedName(SERIALIZED_NAME_DOCUMENT_PAYMENT_STRUCTURE_TYPE)
  protected String documentPaymentStructureType;

  public static final String SERIALIZED_NAME_PAYMENT_METHOD = "paymentMethod";
  @SerializedName(SERIALIZED_NAME_PAYMENT_METHOD)
  private Long paymentMethod = 1l;

  public static final String SERIALIZED_NAME_PAYMENT_DATE = "paymentDate";
  @SerializedName(SERIALIZED_NAME_PAYMENT_DATE)
  private LocalDate paymentDate;

  public static final String SERIALIZED_NAME_COLLECTED = "collected";
  @SerializedName(SERIALIZED_NAME_COLLECTED)
  private BigDecimal collected = 0d;

  public static final String SERIALIZED_NAME_PAYMENT_DEDUCTION_TYPE = "paymentDeductionType";
  @SerializedName(SERIALIZED_NAME_PAYMENT_DEDUCTION_TYPE)
  private Long paymentDeductionType = 0l;

  public static final String SERIALIZED_NAME_PAYMENT_DEDUCTION_AMOUNT = "paymentDeductionAmount";
  @SerializedName(SERIALIZED_NAME_PAYMENT_DEDUCTION_AMOUNT)
  private BigDecimal paymentDeductionAmount = 0d;

  public static final String SERIALIZED_NAME_WITHHELD_PERCENTAGE = "withheldPercentage";
  @SerializedName(SERIALIZED_NAME_WITHHELD_PERCENTAGE)
  private Long withheldPercentage = 0l;

  public static final String SERIALIZED_NAME_WITHHELD_AMOUNT = "withheldAmount";
  @SerializedName(SERIALIZED_NAME_WITHHELD_AMOUNT)
  private BigDecimal withheldAmount = 0d;

  public static final String SERIALIZED_NAME_TRANSFER_BANK_ACCOUNT_ID = "transferBankAccountId";
  @SerializedName(SERIALIZED_NAME_TRANSFER_BANK_ACCOUNT_ID)
  private Long transferBankAccountId = 0l;

  public static final String SERIALIZED_NAME_BANK_ACCOUNT_ID = "bankAccountId";
  @SerializedName(SERIALIZED_NAME_BANK_ACCOUNT_ID)
  private Long bankAccountId = 0l;

  public static final String SERIALIZED_NAME_PAYMENT_REMARKS = "paymentRemarks";
  @SerializedName(SERIALIZED_NAME_PAYMENT_REMARKS)
  private String paymentRemarks;

  public static final String SERIALIZED_NAME_REMAINING_COLLECTED_TYPE = "remainingCollectedType";
  @SerializedName(SERIALIZED_NAME_REMAINING_COLLECTED_TYPE)
  private Long remainingCollectedType = 0l;

  public static final String SERIALIZED_NAME_REMAINING_COLLECTED = "remainingCollected";
  @SerializedName(SERIALIZED_NAME_REMAINING_COLLECTED)
  private BigDecimal remainingCollected = 0d;

  public InlineDocumentWithPaymentReceivingTransfer() {
    this.documentPaymentStructureType = this.getClass().getSimpleName();
  }

  public InlineDocumentWithPaymentReceivingTransfer contactCode(String contactCode) {
    
    this.contactCode = contactCode;
    return this;
  }

   /**
   * รหัส ลูกค้า/ผู้จำหน่าย
   * @return contactCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "รหัส ลูกค้า/ผู้จำหน่าย")

  public String getContactCode() {
    return contactCode;
  }


  public void setContactCode(String contactCode) {
    this.contactCode = contactCode;
  }


  public InlineDocumentWithPaymentReceivingTransfer contactName(String contactName) {
    
    this.contactName = contactName;
    return this;
  }

   /**
   * ชื่อ ลูกค้า/ผู้จำหน่าย &lt;br&gt; &lt;ex&gt;Example: บริษัท ลูกค้า จำกัด, คุณลูกค้า ซื้อประจำ&lt;/ex&gt;
   * @return contactName
  **/
  @ApiModelProperty(example = "บริษัท ลูกค้า จำกัด, คุณลูกค้า ซื้อประจำ", required = true, value = "ชื่อ ลูกค้า/ผู้จำหน่าย <br> <ex>Example: บริษัท ลูกค้า จำกัด, คุณลูกค้า ซื้อประจำ</ex>")

  public String getContactName() {
    return contactName;
  }


  public void setContactName(String contactName) {
    this.contactName = contactName;
  }


  public InlineDocumentWithPaymentReceivingTransfer contactAddress(String contactAddress) {
    
    this.contactAddress = contactAddress;
    return this;
  }

   /**
   * ที่อยู่ ลูกค้า/ผู้จำหน่าย
   * @return contactAddress
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "ที่อยู่ ลูกค้า/ผู้จำหน่าย")

  public String getContactAddress() {
    return contactAddress;
  }


  public void setContactAddress(String contactAddress) {
    this.contactAddress = contactAddress;
  }


  public InlineDocumentWithPaymentReceivingTransfer contactTaxId(String contactTaxId) {
    
    this.contactTaxId = contactTaxId;
    return this;
  }

   /**
   * เลขประจำตัวผู้เสียภาษี ลูกค้า หรือ ผู้จำหน่าย/ลูกค้า &lt;br&gt; (ถ้ามีจำเป็นต้องครบ 13 หลัก) &lt;br&gt; &lt;ex&gt;Example: 1234567890123 &lt;/ex&gt;
   * @return contactTaxId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "1234567890123", value = "เลขประจำตัวผู้เสียภาษี ลูกค้า หรือ ผู้จำหน่าย/ลูกค้า <br> (ถ้ามีจำเป็นต้องครบ 13 หลัก) <br> <ex>Example: 1234567890123 </ex>")

  public String getContactTaxId() {
    return contactTaxId;
  }


  public void setContactTaxId(String contactTaxId) {
    this.contactTaxId = contactTaxId;
  }


  public InlineDocumentWithPaymentReceivingTransfer contactBranch(String contactBranch) {
    
    this.contactBranch = contactBranch;
    return this;
  }

   /**
   * สำนักงาน/สาขา
   * @return contactBranch
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "สำนักงาน/สาขา")

  public String getContactBranch() {
    return contactBranch;
  }


  public void setContactBranch(String contactBranch) {
    this.contactBranch = contactBranch;
  }


  public InlineDocumentWithPaymentReceivingTransfer contactPerson(String contactPerson) {
    
    this.contactPerson = contactPerson;
    return this;
  }

   /**
   * ชื่อผู้ติดต่อ
   * @return contactPerson
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "ชื่อผู้ติดต่อ")

  public String getContactPerson() {
    return contactPerson;
  }


  public void setContactPerson(String contactPerson) {
    this.contactPerson = contactPerson;
  }


  public InlineDocumentWithPaymentReceivingTransfer contactEmail(String contactEmail) {
    
    this.contactEmail = contactEmail;
    return this;
  }

   /**
   * อีเมลผู้ติดต่อ &lt;br&gt; &lt;ex&gt;Example: contact@email.com&lt;/ex&gt;
   * @return contactEmail
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "contact@email.com", value = "อีเมลผู้ติดต่อ <br> <ex>Example: contact@email.com</ex>")

  public String getContactEmail() {
    return contactEmail;
  }


  public void setContactEmail(String contactEmail) {
    this.contactEmail = contactEmail;
  }


  public InlineDocumentWithPaymentReceivingTransfer contactNumber(String contactNumber) {
    
    this.contactNumber = contactNumber;
    return this;
  }

   /**
   * เบอร์มือถือผู้ติดต่อ &lt;br&gt; &lt;ex&gt;Example: 099-999-9999&lt;/ex&gt;
   * @return contactNumber
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "099-999-9999", value = "เบอร์มือถือผู้ติดต่อ <br> <ex>Example: 099-999-9999</ex>")

  public String getContactNumber() {
    return contactNumber;
  }


  public void setContactNumber(String contactNumber) {
    this.contactNumber = contactNumber;
  }


  public InlineDocumentWithPaymentReceivingTransfer contactZipCode(String contactZipCode) {
    
    this.contactZipCode = contactZipCode;
    return this;
  }

   /**
   * รหัสไปรษณีย์ติดต่อ
   * @return contactZipCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "รหัสไปรษณีย์ติดต่อ")

  public String getContactZipCode() {
    return contactZipCode;
  }


  public void setContactZipCode(String contactZipCode) {
    this.contactZipCode = contactZipCode;
  }


  public InlineDocumentWithPaymentReceivingTransfer contactGroup(Integer contactGroup) {
    
    this.contactGroup = contactGroup;
    return this;
  }

   /**
   * ประผู้ติดต่อ &lt;br&gt; 1 &#x3D; บุคคลธรรมดา &lt;br&gt; 3 &#x3D; นิติบุคคล
   * @return contactGroup
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "ประผู้ติดต่อ <br> 1 = บุคคลธรรมดา <br> 3 = นิติบุคคล")

  public Integer getContactGroup() {
    return contactGroup;
  }


  public void setContactGroup(Integer contactGroup) {
    this.contactGroup = contactGroup;
  }


  public InlineDocumentWithPaymentReceivingTransfer publishedOn(LocalDate publishedOn) {
    
    this.publishedOn = publishedOn;
    return this;
  }

   /**
   * วันที่เอกสาร รูปแบบ yyyy-MM-dd &lt;br&gt; &lt;ex&gt;Example: 2020-01-01&lt;/ex&gt;
   * @return publishedOn
  **/
  @ApiModelProperty(example = "Wed Jan 01 07:00:00 ICT 2020", required = true, value = "วันที่เอกสาร รูปแบบ yyyy-MM-dd <br> <ex>Example: 2020-01-01</ex>")

  public LocalDate getPublishedOn() {
    return publishedOn;
  }


  public void setPublishedOn(LocalDate publishedOn) {
    this.publishedOn = publishedOn;
  }


  public InlineDocumentWithPaymentReceivingTransfer creditType(Integer creditType) {
    
    this.creditType = creditType;
    return this;
  }

   /**
   * รูปแบบเครดิต &lt;br&gt; 1 &#x3D; เครดิต (วัน) &lt;br&gt; 3 &#x3D; เงินสด  &lt;br&gt; 5 &#x3D; เครดิต (ไม่แสดงวันที่ครบกำหนด)
   * @return creditType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "รูปแบบเครดิต <br> 1 = เครดิต (วัน) <br> 3 = เงินสด  <br> 5 = เครดิต (ไม่แสดงวันที่ครบกำหนด)")

  public Integer getCreditType() {
    return creditType;
  }


  public void setCreditType(Integer creditType) {
    this.creditType = creditType;
  }


  public InlineDocumentWithPaymentReceivingTransfer creditDays(Integer creditDays) {
    
    this.creditDays = creditDays;
    return this;
  }

   /**
   * จำนวนวันที่ให้เครดิต &lt;br&gt; &lt;ex&gt;Example: 30&lt;/ex&gt;
   * @return creditDays
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "30", value = "จำนวนวันที่ให้เครดิต <br> <ex>Example: 30</ex>")

  public Integer getCreditDays() {
    return creditDays;
  }


  public void setCreditDays(Integer creditDays) {
    this.creditDays = creditDays;
  }


  public InlineDocumentWithPaymentReceivingTransfer dueDate(LocalDate dueDate) {
    
    this.dueDate = dueDate;
    return this;
  }

   /**
   * วันครบกำหนดเอกสาร รูปแบบ yyyy-MM-dd &lt;br&gt; &lt;ex&gt;Example: 2020-01-01&lt;/ex&gt;
   * @return dueDate
  **/
  @ApiModelProperty(example = "Wed Jan 01 07:00:00 ICT 2020", required = true, value = "วันครบกำหนดเอกสาร รูปแบบ yyyy-MM-dd <br> <ex>Example: 2020-01-01</ex>")

  public LocalDate getDueDate() {
    return dueDate;
  }


  public void setDueDate(LocalDate dueDate) {
    this.dueDate = dueDate;
  }


  public InlineDocumentWithPaymentReceivingTransfer salesName(String salesName) {
    
    this.salesName = salesName;
    return this;
  }

   /**
   * ชื่อผู้สร้างเอกสาร หรือ ชื่อพนักงานขาย &lt;br&gt; &lt;ex&gt;Example: sale@email.com or Mr.Sale Shop&lt;/ex&gt;
   * @return salesName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "พนักงาน ขายหน้าร้าน", value = "ชื่อผู้สร้างเอกสาร หรือ ชื่อพนักงานขาย <br> <ex>Example: sale@email.com or Mr.Sale Shop</ex>")

  public String getSalesName() {
    return salesName;
  }


  public void setSalesName(String salesName) {
    this.salesName = salesName;
  }


  public InlineDocumentWithPaymentReceivingTransfer projectName(String projectName) {
    
    this.projectName = projectName;
    return this;
  }

   /**
   * ชื่อโปรเจค
   * @return projectName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "ชื่อโปรเจค")

  public String getProjectName() {
    return projectName;
  }


  public void setProjectName(String projectName) {
    this.projectName = projectName;
  }


  public InlineDocumentWithPaymentReceivingTransfer reference(String reference) {
    
    this.reference = reference;
    return this;
  }

   /**
   * เลขที่อ้างอิง หรือ เลขที่เอกสารที่เกี่ยวข้อง &lt;br&gt; &lt;ex&gt;Example: INV2020010001&lt;/ex&gt;
   * @return reference
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "INV2020010001", value = "เลขที่อ้างอิง หรือ เลขที่เอกสารที่เกี่ยวข้อง <br> <ex>Example: INV2020010001</ex>")

  public String getReference() {
    return reference;
  }


  public void setReference(String reference) {
    this.reference = reference;
  }


  public InlineDocumentWithPaymentReceivingTransfer isVatInclusive(Boolean isVatInclusive) {
    
    this.isVatInclusive = isVatInclusive;
    return this;
  }

   /**
   * มูลค่าเอกสารรวมภาษีแล้วหรือไม่
   * @return isVatInclusive
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "มูลค่าเอกสารรวมภาษีแล้วหรือไม่")

  public Boolean getIsVatInclusive() {
    return isVatInclusive;
  }


  public void setIsVatInclusive(Boolean isVatInclusive) {
    this.isVatInclusive = isVatInclusive;
  }


  public InlineDocumentWithPaymentReceivingTransfer useReceiptDeduction(Boolean useReceiptDeduction) {
    
    this.useReceiptDeduction = useReceiptDeduction;
    return this;
  }

   /**
   * เปิดใช้งานฟังก์ชั่น ปรับลดท้ายเอกสาร &lt;br&gt; (เฉพาะเอกสารใบกำกับภาษี / ใบเสร็จรับเงิน และ ใบเสร็จรับเงิน)
   * @return useReceiptDeduction
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "เปิดใช้งานฟังก์ชั่น ปรับลดท้ายเอกสาร <br> (เฉพาะเอกสารใบกำกับภาษี / ใบเสร็จรับเงิน และ ใบเสร็จรับเงิน)")

  public Boolean getUseReceiptDeduction() {
    return useReceiptDeduction;
  }


  public void setUseReceiptDeduction(Boolean useReceiptDeduction) {
    this.useReceiptDeduction = useReceiptDeduction;
  }


  public InlineDocumentWithPaymentReceivingTransfer items(List<SimpleProductItem> items) {
    
    this.items = items;
    return this;
  }

  public InlineDocumentWithPaymentReceivingTransfer addItemsItem(SimpleProductItem itemsItem) {
    if (this.items == null) {
      this.items = new ArrayList<SimpleProductItem>();
    }
    this.items.add(itemsItem);
    return this;
  }

   /**
   * รายการสินค้าใช้งานสำหรับเอกสาร Simple
   * @return items
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "รายการสินค้าใช้งานสำหรับเอกสาร Simple")

  public List<SimpleProductItem> getItems() {
    return items;
  }


  public void setItems(List<SimpleProductItem> items) {
    this.items = items;
  }


  public InlineDocumentWithPaymentReceivingTransfer subTotal(BigDecimal subTotal) {
    
    this.subTotal = subTotal;
    return this;
  }

   /**
   * มูลค่ารวมเป็นเงิน
   * @return subTotal
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "มูลค่ารวมเป็นเงิน")

  public BigDecimal getSubTotal() {
    return subTotal;
  }


  public void setSubTotal(BigDecimal subTotal) {
    this.subTotal = subTotal;
  }


  public InlineDocumentWithPaymentReceivingTransfer discountPercentage(Integer discountPercentage) {
    
    this.discountPercentage = discountPercentage;
    return this;
  }

   /**
   * มูลค่าส่วนลดเป็นเปอร์เซ็นต์
   * @return discountPercentage
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "มูลค่าส่วนลดเป็นเปอร์เซ็นต์")

  public Integer getDiscountPercentage() {
    return discountPercentage;
  }


  public void setDiscountPercentage(Integer discountPercentage) {
    this.discountPercentage = discountPercentage;
  }


  public InlineDocumentWithPaymentReceivingTransfer discountAmount(BigDecimal discountAmount) {
    
    this.discountAmount = discountAmount;
    return this;
  }

   /**
   * มูลค่าส่วนลดเป็นจำนวน (บาท)
   * @return discountAmount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "มูลค่าส่วนลดเป็นจำนวน (บาท)")

  public BigDecimal getDiscountAmount() {
    return discountAmount;
  }


  public void setDiscountAmount(BigDecimal discountAmount) {
    this.discountAmount = discountAmount;
  }


  public InlineDocumentWithPaymentReceivingTransfer totalAfterDiscount(BigDecimal totalAfterDiscount) {
    
    this.totalAfterDiscount = totalAfterDiscount;
    return this;
  }

   /**
   * มูลค่าหลังหักส่วนลด
   * @return totalAfterDiscount
  **/
  @ApiModelProperty(required = true, value = "มูลค่าหลังหักส่วนลด")

  public BigDecimal getTotalAfterDiscount() {
    return totalAfterDiscount;
  }


  public void setTotalAfterDiscount(BigDecimal totalAfterDiscount) {
    this.totalAfterDiscount = totalAfterDiscount;
  }


  public InlineDocumentWithPaymentReceivingTransfer isVat(Boolean isVat) {
    
    this.isVat = isVat;
    return this;
  }

   /**
   * มูลค่าหลังหักส่วนลด มีภาษีมูลค่าเพิ่ม 7%
   * @return isVat
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "มูลค่าหลังหักส่วนลด มีภาษีมูลค่าเพิ่ม 7%")

  public Boolean getIsVat() {
    return isVat;
  }


  public void setIsVat(Boolean isVat) {
    this.isVat = isVat;
  }


  public InlineDocumentWithPaymentReceivingTransfer vatAmount(BigDecimal vatAmount) {
    
    this.vatAmount = vatAmount;
    return this;
  }

   /**
   * ภาษีมูลค่าเพิ่ม
   * @return vatAmount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "ภาษีมูลค่าเพิ่ม")

  public BigDecimal getVatAmount() {
    return vatAmount;
  }


  public void setVatAmount(BigDecimal vatAmount) {
    this.vatAmount = vatAmount;
  }


  public InlineDocumentWithPaymentReceivingTransfer grandTotal(BigDecimal grandTotal) {
    
    this.grandTotal = grandTotal;
    return this;
  }

   /**
   * จำนวนเงินรวมทั้งสิ้น (รวมภาษีมูลค่าเพิ่ม 7% แล้ว)
   * @return grandTotal
  **/
  @ApiModelProperty(required = true, value = "จำนวนเงินรวมทั้งสิ้น (รวมภาษีมูลค่าเพิ่ม 7% แล้ว)")

  public BigDecimal getGrandTotal() {
    return grandTotal;
  }


  public void setGrandTotal(BigDecimal grandTotal) {
    this.grandTotal = grandTotal;
  }


  public InlineDocumentWithPaymentReceivingTransfer discountType(Integer discountType) {
    
    this.discountType = discountType;
    return this;
  }

   /**
   * รูปแบบส่วนลดในเอกสาร กรณีใช้รูปแบบ Inline ส่วนลด หรือ ภาษี แยกตามรายการสินค้า &lt;br&gt; สามารถเลือกรูปแบบส่วนลดได้ &lt;br&gt; 1 &#x3D;  เปอร์เซ็นต์ &lt;br&gt; 3 &#x3D; จำนวน (บาท)
   * @return discountType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "รูปแบบส่วนลดในเอกสาร กรณีใช้รูปแบบ Inline ส่วนลด หรือ ภาษี แยกตามรายการสินค้า <br> สามารถเลือกรูปแบบส่วนลดได้ <br> 1 =  เปอร์เซ็นต์ <br> 3 = จำนวน (บาท)")

  public Integer getDiscountType() {
    return discountType;
  }


  public void setDiscountType(Integer discountType) {
    this.discountType = discountType;
  }


  public InlineDocumentWithPaymentReceivingTransfer useInlineDiscount(Boolean useInlineDiscount) {
    
    this.useInlineDiscount = useInlineDiscount;
    return this;
  }

   /**
   * inline discount ใช้งานส่วนลด แยกตามรายการสินค้า
   * @return useInlineDiscount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "inline discount ใช้งานส่วนลด แยกตามรายการสินค้า")

  public Boolean getUseInlineDiscount() {
    return useInlineDiscount;
  }


  public void setUseInlineDiscount(Boolean useInlineDiscount) {
    this.useInlineDiscount = useInlineDiscount;
  }


  public InlineDocumentWithPaymentReceivingTransfer useInlineVat(Boolean useInlineVat) {
    
    this.useInlineVat = useInlineVat;
    return this;
  }

   /**
   * inline vat ใช้งานส่วนลดและภาษี แยกตามรายการสินค้า
   * @return useInlineVat
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "inline vat ใช้งานส่วนลดและภาษี แยกตามรายการสินค้า")

  public Boolean getUseInlineVat() {
    return useInlineVat;
  }


  public void setUseInlineVat(Boolean useInlineVat) {
    this.useInlineVat = useInlineVat;
  }


  public InlineDocumentWithPaymentReceivingTransfer exemptAmount(BigDecimal exemptAmount) {
    
    this.exemptAmount = exemptAmount;
    return this;
  }

   /**
   * ยอดขายที่ยกเว้นภาษีมูลค่าเพิ่ม
   * @return exemptAmount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "ยอดขายที่ยกเว้นภาษีมูลค่าเพิ่ม")

  public BigDecimal getExemptAmount() {
    return exemptAmount;
  }


  public void setExemptAmount(BigDecimal exemptAmount) {
    this.exemptAmount = exemptAmount;
  }


  public InlineDocumentWithPaymentReceivingTransfer vatableAmount(BigDecimal vatableAmount) {
    
    this.vatableAmount = vatableAmount;
    return this;
  }

   /**
   * ยอดขายที่คิดภาษีมูลค่าเพิ่ม
   * @return vatableAmount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "ยอดขายที่คิดภาษีมูลค่าเพิ่ม")

  public BigDecimal getVatableAmount() {
    return vatableAmount;
  }


  public void setVatableAmount(BigDecimal vatableAmount) {
    this.vatableAmount = vatableAmount;
  }


  public InlineDocumentWithPaymentReceivingTransfer documentShowWithholdingTax(Boolean documentShowWithholdingTax) {
    
    this.documentShowWithholdingTax = documentShowWithholdingTax;
    return this;
  }

   /**
   * แสดงหรือไม่แสดง หัก ณ ที่จ่ายท้ายเอกสาร
   * @return documentShowWithholdingTax
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "แสดงหรือไม่แสดง หัก ณ ที่จ่ายท้ายเอกสาร")

  public Boolean getDocumentShowWithholdingTax() {
    return documentShowWithholdingTax;
  }


  public void setDocumentShowWithholdingTax(Boolean documentShowWithholdingTax) {
    this.documentShowWithholdingTax = documentShowWithholdingTax;
  }


  public InlineDocumentWithPaymentReceivingTransfer documentWithholdingTaxPercentage(Integer documentWithholdingTaxPercentage) {
    
    this.documentWithholdingTaxPercentage = documentWithholdingTaxPercentage;
    return this;
  }

   /**
   * ภาษี ณ ที่จ่าย (%)
   * @return documentWithholdingTaxPercentage
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "ภาษี ณ ที่จ่าย (%)")

  public Integer getDocumentWithholdingTaxPercentage() {
    return documentWithholdingTaxPercentage;
  }


  public void setDocumentWithholdingTaxPercentage(Integer documentWithholdingTaxPercentage) {
    this.documentWithholdingTaxPercentage = documentWithholdingTaxPercentage;
  }


  public InlineDocumentWithPaymentReceivingTransfer documentWithholdingTaxAmount(BigDecimal documentWithholdingTaxAmount) {
    
    this.documentWithholdingTaxAmount = documentWithholdingTaxAmount;
    return this;
  }

   /**
   * มูลค่าภาษีหัก ณ ที่จ่าย
   * @return documentWithholdingTaxAmount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "มูลค่าภาษีหัก ณ ที่จ่าย")

  public BigDecimal getDocumentWithholdingTaxAmount() {
    return documentWithholdingTaxAmount;
  }


  public void setDocumentWithholdingTaxAmount(BigDecimal documentWithholdingTaxAmount) {
    this.documentWithholdingTaxAmount = documentWithholdingTaxAmount;
  }


  public InlineDocumentWithPaymentReceivingTransfer documentDeductionType(Integer documentDeductionType) {
    
    this.documentDeductionType = documentDeductionType;
    return this;
  }

   /**
   * ประเภทรายการปรับลด &lt;br&gt; 1 &#x3D; ส่วนลดพิเศษ &lt;br&gt; 3 &#x3D; ค่านายหน้าและส่วนแบ่งการขาย &lt;br&gt; 5 &#x3D; ค่าดำเนินการ &lt;br&gt; 7 &#x3D; ปัดเศษ &lt;br&gt; (เฉพาะเอกสารใบกำกับภาษี/ใบเสร็จรับเงิน)
   * @return documentDeductionType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "ประเภทรายการปรับลด <br> 1 = ส่วนลดพิเศษ <br> 3 = ค่านายหน้าและส่วนแบ่งการขาย <br> 5 = ค่าดำเนินการ <br> 7 = ปัดเศษ <br> (เฉพาะเอกสารใบกำกับภาษี/ใบเสร็จรับเงิน)")

  public Integer getDocumentDeductionType() {
    return documentDeductionType;
  }


  public void setDocumentDeductionType(Integer documentDeductionType) {
    this.documentDeductionType = documentDeductionType;
  }


  public InlineDocumentWithPaymentReceivingTransfer documentDeductionAmount(BigDecimal documentDeductionAmount) {
    
    this.documentDeductionAmount = documentDeductionAmount;
    return this;
  }

   /**
   * จำนวนเงินยอดรายการปรับลด &lt;br&gt; (เฉพาะเอกสารใบกำกับภาษี/ใบเสร็จรับเงิน)
   * @return documentDeductionAmount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "จำนวนเงินยอดรายการปรับลด <br> (เฉพาะเอกสารใบกำกับภาษี/ใบเสร็จรับเงิน)")

  public BigDecimal getDocumentDeductionAmount() {
    return documentDeductionAmount;
  }


  public void setDocumentDeductionAmount(BigDecimal documentDeductionAmount) {
    this.documentDeductionAmount = documentDeductionAmount;
  }


  public InlineDocumentWithPaymentReceivingTransfer remarks(String remarks) {
    
    this.remarks = remarks;
    return this;
  }

   /**
   * หมายเหตุเอกสาร
   * @return remarks
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "หมายเหตุเอกสาร")

  public String getRemarks() {
    return remarks;
  }


  public void setRemarks(String remarks) {
    this.remarks = remarks;
  }


  public InlineDocumentWithPaymentReceivingTransfer internalNotes(String internalNotes) {
    
    this.internalNotes = internalNotes;
    return this;
  }

   /**
   * โน๊ตภายในบริษัท
   * @return internalNotes
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "โน๊ตภายในบริษัท")

  public String getInternalNotes() {
    return internalNotes;
  }


  public void setInternalNotes(String internalNotes) {
    this.internalNotes = internalNotes;
  }


  public InlineDocumentWithPaymentReceivingTransfer showSignatureOrStamp(Boolean showSignatureOrStamp) {
    
    this.showSignatureOrStamp = showSignatureOrStamp;
    return this;
  }

   /**
   * ลายเซ็นอิเล็กทรอนิกส์และตรายาง
   * @return showSignatureOrStamp
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "ลายเซ็นอิเล็กทรอนิกส์และตรายาง")

  public Boolean getShowSignatureOrStamp() {
    return showSignatureOrStamp;
  }


  public void setShowSignatureOrStamp(Boolean showSignatureOrStamp) {
    this.showSignatureOrStamp = showSignatureOrStamp;
  }


  public InlineDocumentWithPaymentReceivingTransfer documentReference(List<UpgradeDocument> documentReference) {
    
    this.documentReference = documentReference;
    return this;
  }

  public InlineDocumentWithPaymentReceivingTransfer addDocumentReferenceItem(UpgradeDocument documentReferenceItem) {
    if (this.documentReference == null) {
      this.documentReference = new ArrayList<UpgradeDocument>();
    }
    this.documentReference.add(documentReferenceItem);
    return this;
  }

   /**
   * สำหรับอัพเกรดเอกสาร โดยอ้างอิงเอกสารต้นทาง (ยกเว้นเอกสารใบเสนอราคา)
   * @return documentReference
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "สำหรับอัพเกรดเอกสาร โดยอ้างอิงเอกสารต้นทาง (ยกเว้นเอกสารใบเสนอราคา)")

  public List<UpgradeDocument> getDocumentReference() {
    return documentReference;
  }


  public void setDocumentReference(List<UpgradeDocument> documentReference) {
    this.documentReference = documentReference;
  }


  public InlineDocumentWithPaymentReceivingTransfer documentPaymentStructureType(String documentPaymentStructureType) {
    
    this.documentPaymentStructureType = documentPaymentStructureType;
    return this;
  }

   /**
   * สร้างเอกสารแบบ Inline พร้อมรับชำระเงิน ด้วยการโอนเงิน
   * @return documentPaymentStructureType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(required = true, value = "สร้างเอกสารแบบ Inline พร้อมรับชำระเงิน ด้วยการโอนเงิน")

  public String getDocumentPaymentStructureType() {
    return documentPaymentStructureType;
  }


  public void setDocumentPaymentStructureType(String documentPaymentStructureType) {
    this.documentPaymentStructureType = documentPaymentStructureType;
  }


  public InlineDocumentWithPaymentReceivingTransfer paymentMethod(Long paymentMethod) {
    
    this.paymentMethod = paymentMethod;
    return this;
  }

   /**
   * ประเภทการเก็บเงิน &lt;br&gt; 5 &#x3D; โอนเงิน 
   * @return paymentMethod
  **/
  @ApiModelProperty(required = true, value = "ประเภทการเก็บเงิน <br> 5 = โอนเงิน ")

  public Long getPaymentMethod() {
    return paymentMethod;
  }


  public void setPaymentMethod(Long paymentMethod) {
    this.paymentMethod = paymentMethod;
  }


  public InlineDocumentWithPaymentReceivingTransfer paymentDate(LocalDate paymentDate) {
    
    this.paymentDate = paymentDate;
    return this;
  }

   /**
   * วันที่รับชำระเงิน / วันที่ชำระเงิน รูปแบบ yyyy-MM-dd &lt;br&gt; &lt;ex&gt;Example: 2020-01-01&lt;/ex&gt;
   * @return paymentDate
  **/
  @ApiModelProperty(example = "Wed Jan 01 07:00:00 ICT 2020", required = true, value = "วันที่รับชำระเงิน / วันที่ชำระเงิน รูปแบบ yyyy-MM-dd <br> <ex>Example: 2020-01-01</ex>")

  public LocalDate getPaymentDate() {
    return paymentDate;
  }


  public void setPaymentDate(LocalDate paymentDate) {
    this.paymentDate = paymentDate;
  }


  public InlineDocumentWithPaymentReceivingTransfer collected(BigDecimal collected) {
    
    this.collected = collected;
    return this;
  }

   /**
   * จำนวนเงินยอดรับสุทธิ &lt;br&gt; &lt;ex&gt; Example : 100.00 &lt;/ex&gt;
   * @return collected
  **/
  @ApiModelProperty(required = true, value = "จำนวนเงินยอดรับสุทธิ <br> <ex> Example : 100.00 </ex>")

  public BigDecimal getCollected() {
    return collected;
  }


  public void setCollected(BigDecimal collected) {
    this.collected = collected;
  }


  public InlineDocumentWithPaymentReceivingTransfer paymentDeductionType(Long paymentDeductionType) {
    
    this.paymentDeductionType = paymentDeductionType;
    return this;
  }

   /**
   * ประเภทรายการปรับลด &lt;br&gt; 1 &#x3D; ส่วนลดพิเศษ &lt;br&gt; 3 &#x3D; ค่านายหน้าและส่วนแบ่งการขาย &lt;br&gt; 5 &#x3D; ค่าดำเนินการ &lt;br&gt; 7 &#x3D; ปัดเศษ 
   * @return paymentDeductionType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "ประเภทรายการปรับลด <br> 1 = ส่วนลดพิเศษ <br> 3 = ค่านายหน้าและส่วนแบ่งการขาย <br> 5 = ค่าดำเนินการ <br> 7 = ปัดเศษ ")

  public Long getPaymentDeductionType() {
    return paymentDeductionType;
  }


  public void setPaymentDeductionType(Long paymentDeductionType) {
    this.paymentDeductionType = paymentDeductionType;
  }


  public InlineDocumentWithPaymentReceivingTransfer paymentDeductionAmount(BigDecimal paymentDeductionAmount) {
    
    this.paymentDeductionAmount = paymentDeductionAmount;
    return this;
  }

   /**
   * จำนวนเงินยอดรายการปรับลด &lt;br&gt; &lt;ex&gt; Example : 100.00 &lt;/ex&gt;
   * @return paymentDeductionAmount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "จำนวนเงินยอดรายการปรับลด <br> <ex> Example : 100.00 </ex>")

  public BigDecimal getPaymentDeductionAmount() {
    return paymentDeductionAmount;
  }


  public void setPaymentDeductionAmount(BigDecimal paymentDeductionAmount) {
    this.paymentDeductionAmount = paymentDeductionAmount;
  }


  public InlineDocumentWithPaymentReceivingTransfer withheldPercentage(Long withheldPercentage) {
    
    this.withheldPercentage = withheldPercentage;
    return this;
  }

   /**
   * เปอร์เซ็น หัก ณ ที่จ่าย &lt;br&gt; 0.5 &#x3D; 0.5% &lt;br&gt; 0.75 &#x3D; 0.75% &lt;br&gt; 1 &#x3D; 1% &lt;br&gt; 1.5 &#x3D; 1.5% &lt;br&gt; 2 &#x3D; 2% &lt;br&gt; 3 &#x3D; 3% &lt;br&gt; 5 &#x3D; 5% &lt;br&gt; 10 &#x3D; 10% &lt;br&gt; 15 &#x3D; 15% &lt;br&gt; -1 &#x3D; จำนวนเงิน &lt;red&gt;(สำหรับเอกสารที่ใช้ภาษีแยกตามรายการสินค้า ต้องใช้เป็นจำนวนเงิน)&lt;/red&gt;
   * @return withheldPercentage
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "เปอร์เซ็น หัก ณ ที่จ่าย <br> 0.5 = 0.5% <br> 0.75 = 0.75% <br> 1 = 1% <br> 1.5 = 1.5% <br> 2 = 2% <br> 3 = 3% <br> 5 = 5% <br> 10 = 10% <br> 15 = 15% <br> -1 = จำนวนเงิน <red>(สำหรับเอกสารที่ใช้ภาษีแยกตามรายการสินค้า ต้องใช้เป็นจำนวนเงิน)</red>")

  public Long getWithheldPercentage() {
    return withheldPercentage;
  }


  public void setWithheldPercentage(Long withheldPercentage) {
    this.withheldPercentage = withheldPercentage;
  }


  public InlineDocumentWithPaymentReceivingTransfer withheldAmount(BigDecimal withheldAmount) {
    
    this.withheldAmount = withheldAmount;
    return this;
  }

   /**
   * จำนวน ยอดหัก ณ ที่จ่าย &lt;br&gt; &lt;ex&gt; Example : 100.00 &lt;/ex&gt;
   * @return withheldAmount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "จำนวน ยอดหัก ณ ที่จ่าย <br> <ex> Example : 100.00 </ex>")

  public BigDecimal getWithheldAmount() {
    return withheldAmount;
  }


  public void setWithheldAmount(BigDecimal withheldAmount) {
    this.withheldAmount = withheldAmount;
  }


  public InlineDocumentWithPaymentReceivingTransfer transferBankAccountId(Long transferBankAccountId) {
    
    this.transferBankAccountId = transferBankAccountId;
    return this;
  }

   /**
   * ธนาคารที่ใช้รับชำระเงิน ธนาคารที่ชำระเงิน &lt;br&gt; 1 &#x3D; ธนาคารกรุงเทพ &lt;br&gt; 2 &#x3D; ธนาคารกสิกรไทย &lt;br&gt; 3 &#x3D; ธนาคารกรุงไทย &lt;br&gt; 4 &#x3D; ธนาคารทหารไทย &lt;br&gt; 5 &#x3D; ธนาคารไทยพาณิชย์ &lt;br&gt; 6 &#x3D; ธนาคารสแตนดาร์ดชาร์เตอร์ด &lt;br&gt; 7 &#x3D; ธนาคารซีไอเอ็มบี ไทย &lt;br&gt; 8 &#x3D; ธนาคารยูโอบี &lt;br&gt; 10 &#x3D; ธนาคารกรุงศรีอยุธยา &lt;br&gt; 11 &#x3D; ธนาคารออมสิน &lt;br&gt; 12 &#x3D; ธนาคารธนชาต &lt;br&gt; 13 &#x3D; ธนาคารแลนด์ แอนด์ เฮ้าส์ &lt;br&gt; 14 &#x3D; ธนาคารเกียรตินาคิน &lt;br&gt; 15 &#x3D; ธนาคารซิตี้แบงก์ &lt;br&gt; 16 &#x3D; ธนาคารทิสโก้ &lt;br&gt; 53 &#x3D; ธนาคารเพื่อการเกษตรและสหกรณ์การเกษตร &lt;br&gt; 54 &#x3D; ธนาคารเพื่อการส่งออกและนำเข้าแห่งประเทศไทย &lt;br&gt; 55 &#x3D; ธนาคารอาคารสงเคราะห์ &lt;br&gt; 56 &#x3D; ธนาคารพัฒนาวิสาหกิจขนาดกลางและขนาดย่อมแห่งประเทศไทย &lt;br&gt; 57 &#x3D; ธนาคารอิสลามแห่งประเทศไทย &lt;br&gt; 58 &#x3D; ธนาคารแห่งประเทศจีน (ไทย) &lt;br&gt; 59 &#x3D; ธนาคารไอซีบีซี (ไทย) &lt;br&gt; 60 &#x3D; ธนาคารเมกะ สากลพาณิชย์ &lt;br&gt; 61 &#x3D; ธนาคารซูมิโตโม มิตซุย แบงกิ้ง คอร์ปอเรชั่น &lt;br&gt; 62 &#x3D; ธนาคารมิซูโฮ จำกัด (กรุงเทพฯ) &lt;br&gt; 63 &#x3D; ธนาคารฮ่องกงและเซี่ยงไฮ้แบงกิ้งคอร์ปอเรชั่น &lt;br&gt; 64 &#x3D; ธนาคารไทยเครดิต เพื่อรายย่อย 
   * @return transferBankAccountId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "ธนาคารที่ใช้รับชำระเงิน ธนาคารที่ชำระเงิน <br> 1 = ธนาคารกรุงเทพ <br> 2 = ธนาคารกสิกรไทย <br> 3 = ธนาคารกรุงไทย <br> 4 = ธนาคารทหารไทย <br> 5 = ธนาคารไทยพาณิชย์ <br> 6 = ธนาคารสแตนดาร์ดชาร์เตอร์ด <br> 7 = ธนาคารซีไอเอ็มบี ไทย <br> 8 = ธนาคารยูโอบี <br> 10 = ธนาคารกรุงศรีอยุธยา <br> 11 = ธนาคารออมสิน <br> 12 = ธนาคารธนชาต <br> 13 = ธนาคารแลนด์ แอนด์ เฮ้าส์ <br> 14 = ธนาคารเกียรตินาคิน <br> 15 = ธนาคารซิตี้แบงก์ <br> 16 = ธนาคารทิสโก้ <br> 53 = ธนาคารเพื่อการเกษตรและสหกรณ์การเกษตร <br> 54 = ธนาคารเพื่อการส่งออกและนำเข้าแห่งประเทศไทย <br> 55 = ธนาคารอาคารสงเคราะห์ <br> 56 = ธนาคารพัฒนาวิสาหกิจขนาดกลางและขนาดย่อมแห่งประเทศไทย <br> 57 = ธนาคารอิสลามแห่งประเทศไทย <br> 58 = ธนาคารแห่งประเทศจีน (ไทย) <br> 59 = ธนาคารไอซีบีซี (ไทย) <br> 60 = ธนาคารเมกะ สากลพาณิชย์ <br> 61 = ธนาคารซูมิโตโม มิตซุย แบงกิ้ง คอร์ปอเรชั่น <br> 62 = ธนาคารมิซูโฮ จำกัด (กรุงเทพฯ) <br> 63 = ธนาคารฮ่องกงและเซี่ยงไฮ้แบงกิ้งคอร์ปอเรชั่น <br> 64 = ธนาคารไทยเครดิต เพื่อรายย่อย ")

  public Long getTransferBankAccountId() {
    return transferBankAccountId;
  }


  public void setTransferBankAccountId(Long transferBankAccountId) {
    this.transferBankAccountId = transferBankAccountId;
  }


  public InlineDocumentWithPaymentReceivingTransfer bankAccountId(Long bankAccountId) {
    
    this.bankAccountId = bankAccountId;
    return this;
  }

   /**
   * เลข id บัญชีธนาคารที่ใช้รับชำระเงิน &lt;br&gt;&lt;red&gt;สามารถ GET มาได้จาก My Company &gt; Bank Account &lt;/red&gt;&lt;br&gt; &lt;ex&gt;Example: 12345&lt;/ex&gt;
   * @return bankAccountId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "12345", value = "เลข id บัญชีธนาคารที่ใช้รับชำระเงิน <br><red>สามารถ GET มาได้จาก My Company > Bank Account </red><br> <ex>Example: 12345</ex>")

  public Long getBankAccountId() {
    return bankAccountId;
  }


  public void setBankAccountId(Long bankAccountId) {
    this.bankAccountId = bankAccountId;
  }


  public InlineDocumentWithPaymentReceivingTransfer paymentRemarks(String paymentRemarks) {
    
    this.paymentRemarks = paymentRemarks;
    return this;
  }

   /**
   * หมายเหตุ การรับชำระเงิน หรือ ชำระเงิน
   * @return paymentRemarks
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "หมายเหตุ การรับชำระเงิน หรือ ชำระเงิน")

  public String getPaymentRemarks() {
    return paymentRemarks;
  }


  public void setPaymentRemarks(String paymentRemarks) {
    this.paymentRemarks = paymentRemarks;
  }


  public InlineDocumentWithPaymentReceivingTransfer remainingCollectedType(Long remainingCollectedType) {
    
    this.remainingCollectedType = remainingCollectedType;
    return this;
  }

   /**
   * สาเหตุเงินขาด เงินเกิน &lt;br&gt; 51 &#x3D; เงินขาดหรือเงินกิน &lt;br&gt; 55 &#x3D; ค่าธรรมเนียมธนาคาร 
   * @return remainingCollectedType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "สาเหตุเงินขาด เงินเกิน <br> 51 = เงินขาดหรือเงินกิน <br> 55 = ค่าธรรมเนียมธนาคาร ")

  public Long getRemainingCollectedType() {
    return remainingCollectedType;
  }


  public void setRemainingCollectedType(Long remainingCollectedType) {
    this.remainingCollectedType = remainingCollectedType;
  }


  public InlineDocumentWithPaymentReceivingTransfer remainingCollected(BigDecimal remainingCollected) {
    
    this.remainingCollected = remainingCollected;
    return this;
  }

   /**
   * จำนวน ยอดเงินขาด หรือ เงินเกิน &lt;br&gt; &lt;ex&gt; Example : 100.00 &lt;/ex&gt;
   * @return remainingCollected
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "จำนวน ยอดเงินขาด หรือ เงินเกิน <br> <ex> Example : 100.00 </ex>")

  public BigDecimal getRemainingCollected() {
    return remainingCollected;
  }


  public void setRemainingCollected(BigDecimal remainingCollected) {
    this.remainingCollected = remainingCollected;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InlineDocumentWithPaymentReceivingTransfer inlineDocumentWithPaymentReceivingTransfer = (InlineDocumentWithPaymentReceivingTransfer) o;
    return Objects.equals(this.contactCode, inlineDocumentWithPaymentReceivingTransfer.contactCode) &&
        Objects.equals(this.contactName, inlineDocumentWithPaymentReceivingTransfer.contactName) &&
        Objects.equals(this.contactAddress, inlineDocumentWithPaymentReceivingTransfer.contactAddress) &&
        Objects.equals(this.contactTaxId, inlineDocumentWithPaymentReceivingTransfer.contactTaxId) &&
        Objects.equals(this.contactBranch, inlineDocumentWithPaymentReceivingTransfer.contactBranch) &&
        Objects.equals(this.contactPerson, inlineDocumentWithPaymentReceivingTransfer.contactPerson) &&
        Objects.equals(this.contactEmail, inlineDocumentWithPaymentReceivingTransfer.contactEmail) &&
        Objects.equals(this.contactNumber, inlineDocumentWithPaymentReceivingTransfer.contactNumber) &&
        Objects.equals(this.contactZipCode, inlineDocumentWithPaymentReceivingTransfer.contactZipCode) &&
        Objects.equals(this.contactGroup, inlineDocumentWithPaymentReceivingTransfer.contactGroup) &&
        Objects.equals(this.publishedOn, inlineDocumentWithPaymentReceivingTransfer.publishedOn) &&
        Objects.equals(this.creditType, inlineDocumentWithPaymentReceivingTransfer.creditType) &&
        Objects.equals(this.creditDays, inlineDocumentWithPaymentReceivingTransfer.creditDays) &&
        Objects.equals(this.dueDate, inlineDocumentWithPaymentReceivingTransfer.dueDate) &&
        Objects.equals(this.salesName, inlineDocumentWithPaymentReceivingTransfer.salesName) &&
        Objects.equals(this.projectName, inlineDocumentWithPaymentReceivingTransfer.projectName) &&
        Objects.equals(this.reference, inlineDocumentWithPaymentReceivingTransfer.reference) &&
        Objects.equals(this.isVatInclusive, inlineDocumentWithPaymentReceivingTransfer.isVatInclusive) &&
        Objects.equals(this.useReceiptDeduction, inlineDocumentWithPaymentReceivingTransfer.useReceiptDeduction) &&
        Objects.equals(this.items, inlineDocumentWithPaymentReceivingTransfer.items) &&
        Objects.equals(this.subTotal, inlineDocumentWithPaymentReceivingTransfer.subTotal) &&
        Objects.equals(this.discountPercentage, inlineDocumentWithPaymentReceivingTransfer.discountPercentage) &&
        Objects.equals(this.discountAmount, inlineDocumentWithPaymentReceivingTransfer.discountAmount) &&
        Objects.equals(this.totalAfterDiscount, inlineDocumentWithPaymentReceivingTransfer.totalAfterDiscount) &&
        Objects.equals(this.isVat, inlineDocumentWithPaymentReceivingTransfer.isVat) &&
        Objects.equals(this.vatAmount, inlineDocumentWithPaymentReceivingTransfer.vatAmount) &&
        Objects.equals(this.grandTotal, inlineDocumentWithPaymentReceivingTransfer.grandTotal) &&
        Objects.equals(this.discountType, inlineDocumentWithPaymentReceivingTransfer.discountType) &&
        Objects.equals(this.useInlineDiscount, inlineDocumentWithPaymentReceivingTransfer.useInlineDiscount) &&
        Objects.equals(this.useInlineVat, inlineDocumentWithPaymentReceivingTransfer.useInlineVat) &&
        Objects.equals(this.exemptAmount, inlineDocumentWithPaymentReceivingTransfer.exemptAmount) &&
        Objects.equals(this.vatableAmount, inlineDocumentWithPaymentReceivingTransfer.vatableAmount) &&
        Objects.equals(this.documentShowWithholdingTax, inlineDocumentWithPaymentReceivingTransfer.documentShowWithholdingTax) &&
        Objects.equals(this.documentWithholdingTaxPercentage, inlineDocumentWithPaymentReceivingTransfer.documentWithholdingTaxPercentage) &&
        Objects.equals(this.documentWithholdingTaxAmount, inlineDocumentWithPaymentReceivingTransfer.documentWithholdingTaxAmount) &&
        Objects.equals(this.documentDeductionType, inlineDocumentWithPaymentReceivingTransfer.documentDeductionType) &&
        Objects.equals(this.documentDeductionAmount, inlineDocumentWithPaymentReceivingTransfer.documentDeductionAmount) &&
        Objects.equals(this.remarks, inlineDocumentWithPaymentReceivingTransfer.remarks) &&
        Objects.equals(this.internalNotes, inlineDocumentWithPaymentReceivingTransfer.internalNotes) &&
        Objects.equals(this.showSignatureOrStamp, inlineDocumentWithPaymentReceivingTransfer.showSignatureOrStamp) &&
        Objects.equals(this.documentReference, inlineDocumentWithPaymentReceivingTransfer.documentReference) &&
        Objects.equals(this.documentPaymentStructureType, inlineDocumentWithPaymentReceivingTransfer.documentPaymentStructureType) &&
        Objects.equals(this.paymentMethod, inlineDocumentWithPaymentReceivingTransfer.paymentMethod) &&
        Objects.equals(this.paymentDate, inlineDocumentWithPaymentReceivingTransfer.paymentDate) &&
        Objects.equals(this.collected, inlineDocumentWithPaymentReceivingTransfer.collected) &&
        Objects.equals(this.paymentDeductionType, inlineDocumentWithPaymentReceivingTransfer.paymentDeductionType) &&
        Objects.equals(this.paymentDeductionAmount, inlineDocumentWithPaymentReceivingTransfer.paymentDeductionAmount) &&
        Objects.equals(this.withheldPercentage, inlineDocumentWithPaymentReceivingTransfer.withheldPercentage) &&
        Objects.equals(this.withheldAmount, inlineDocumentWithPaymentReceivingTransfer.withheldAmount) &&
        Objects.equals(this.transferBankAccountId, inlineDocumentWithPaymentReceivingTransfer.transferBankAccountId) &&
        Objects.equals(this.bankAccountId, inlineDocumentWithPaymentReceivingTransfer.bankAccountId) &&
        Objects.equals(this.paymentRemarks, inlineDocumentWithPaymentReceivingTransfer.paymentRemarks) &&
        Objects.equals(this.remainingCollectedType, inlineDocumentWithPaymentReceivingTransfer.remainingCollectedType) &&
        Objects.equals(this.remainingCollected, inlineDocumentWithPaymentReceivingTransfer.remainingCollected);
  }

  @Override
  public int hashCode() {
    return Objects.hash(contactCode, contactName, contactAddress, contactTaxId, contactBranch, contactPerson, contactEmail, contactNumber, contactZipCode, contactGroup, publishedOn, creditType, creditDays, dueDate, salesName, projectName, reference, isVatInclusive, useReceiptDeduction, items, subTotal, discountPercentage, discountAmount, totalAfterDiscount, isVat, vatAmount, grandTotal, discountType, useInlineDiscount, useInlineVat, exemptAmount, vatableAmount, documentShowWithholdingTax, documentWithholdingTaxPercentage, documentWithholdingTaxAmount, documentDeductionType, documentDeductionAmount, remarks, internalNotes, showSignatureOrStamp, documentReference, documentPaymentStructureType, paymentMethod, paymentDate, collected, paymentDeductionType, paymentDeductionAmount, withheldPercentage, withheldAmount, transferBankAccountId, bankAccountId, paymentRemarks, remainingCollectedType, remainingCollected);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class InlineDocumentWithPaymentReceivingTransfer {\n");
    sb.append("    contactCode: ").append(toIndentedString(contactCode)).append("\n");
    sb.append("    contactName: ").append(toIndentedString(contactName)).append("\n");
    sb.append("    contactAddress: ").append(toIndentedString(contactAddress)).append("\n");
    sb.append("    contactTaxId: ").append(toIndentedString(contactTaxId)).append("\n");
    sb.append("    contactBranch: ").append(toIndentedString(contactBranch)).append("\n");
    sb.append("    contactPerson: ").append(toIndentedString(contactPerson)).append("\n");
    sb.append("    contactEmail: ").append(toIndentedString(contactEmail)).append("\n");
    sb.append("    contactNumber: ").append(toIndentedString(contactNumber)).append("\n");
    sb.append("    contactZipCode: ").append(toIndentedString(contactZipCode)).append("\n");
    sb.append("    contactGroup: ").append(toIndentedString(contactGroup)).append("\n");
    sb.append("    publishedOn: ").append(toIndentedString(publishedOn)).append("\n");
    sb.append("    creditType: ").append(toIndentedString(creditType)).append("\n");
    sb.append("    creditDays: ").append(toIndentedString(creditDays)).append("\n");
    sb.append("    dueDate: ").append(toIndentedString(dueDate)).append("\n");
    sb.append("    salesName: ").append(toIndentedString(salesName)).append("\n");
    sb.append("    projectName: ").append(toIndentedString(projectName)).append("\n");
    sb.append("    reference: ").append(toIndentedString(reference)).append("\n");
    sb.append("    isVatInclusive: ").append(toIndentedString(isVatInclusive)).append("\n");
    sb.append("    useReceiptDeduction: ").append(toIndentedString(useReceiptDeduction)).append("\n");
    sb.append("    items: ").append(toIndentedString(items)).append("\n");
    sb.append("    subTotal: ").append(toIndentedString(subTotal)).append("\n");
    sb.append("    discountPercentage: ").append(toIndentedString(discountPercentage)).append("\n");
    sb.append("    discountAmount: ").append(toIndentedString(discountAmount)).append("\n");
    sb.append("    totalAfterDiscount: ").append(toIndentedString(totalAfterDiscount)).append("\n");
    sb.append("    isVat: ").append(toIndentedString(isVat)).append("\n");
    sb.append("    vatAmount: ").append(toIndentedString(vatAmount)).append("\n");
    sb.append("    grandTotal: ").append(toIndentedString(grandTotal)).append("\n");
    sb.append("    discountType: ").append(toIndentedString(discountType)).append("\n");
    sb.append("    useInlineDiscount: ").append(toIndentedString(useInlineDiscount)).append("\n");
    sb.append("    useInlineVat: ").append(toIndentedString(useInlineVat)).append("\n");
    sb.append("    exemptAmount: ").append(toIndentedString(exemptAmount)).append("\n");
    sb.append("    vatableAmount: ").append(toIndentedString(vatableAmount)).append("\n");
    sb.append("    documentShowWithholdingTax: ").append(toIndentedString(documentShowWithholdingTax)).append("\n");
    sb.append("    documentWithholdingTaxPercentage: ").append(toIndentedString(documentWithholdingTaxPercentage)).append("\n");
    sb.append("    documentWithholdingTaxAmount: ").append(toIndentedString(documentWithholdingTaxAmount)).append("\n");
    sb.append("    documentDeductionType: ").append(toIndentedString(documentDeductionType)).append("\n");
    sb.append("    documentDeductionAmount: ").append(toIndentedString(documentDeductionAmount)).append("\n");
    sb.append("    remarks: ").append(toIndentedString(remarks)).append("\n");
    sb.append("    internalNotes: ").append(toIndentedString(internalNotes)).append("\n");
    sb.append("    showSignatureOrStamp: ").append(toIndentedString(showSignatureOrStamp)).append("\n");
    sb.append("    documentReference: ").append(toIndentedString(documentReference)).append("\n");
    sb.append("    documentPaymentStructureType: ").append(toIndentedString(documentPaymentStructureType)).append("\n");
    sb.append("    paymentMethod: ").append(toIndentedString(paymentMethod)).append("\n");
    sb.append("    paymentDate: ").append(toIndentedString(paymentDate)).append("\n");
    sb.append("    collected: ").append(toIndentedString(collected)).append("\n");
    sb.append("    paymentDeductionType: ").append(toIndentedString(paymentDeductionType)).append("\n");
    sb.append("    paymentDeductionAmount: ").append(toIndentedString(paymentDeductionAmount)).append("\n");
    sb.append("    withheldPercentage: ").append(toIndentedString(withheldPercentage)).append("\n");
    sb.append("    withheldAmount: ").append(toIndentedString(withheldAmount)).append("\n");
    sb.append("    transferBankAccountId: ").append(toIndentedString(transferBankAccountId)).append("\n");
    sb.append("    bankAccountId: ").append(toIndentedString(bankAccountId)).append("\n");
    sb.append("    paymentRemarks: ").append(toIndentedString(paymentRemarks)).append("\n");
    sb.append("    remainingCollectedType: ").append(toIndentedString(remainingCollectedType)).append("\n");
    sb.append("    remainingCollected: ").append(toIndentedString(remainingCollected)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

