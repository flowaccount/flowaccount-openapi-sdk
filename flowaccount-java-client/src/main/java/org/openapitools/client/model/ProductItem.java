/*
 * FlowAccount Open API
 * # Introduction  **Servers Production**    <site>Site:</site> https://www.flowaccount.com    <site>Api url:</site> https://openapi.flowaccount.com/v1    **Beta test**   <site>Site:</site> http://sandbox-new.flowaccount.com/    <site>Api url:</site> https://openapi.flowaccount.com/test    **PostMan Collection**   <site>Link:</site> https://www.getpostman.com/collections/01e7c68d7093e2092a64
 *
 * The version of the OpenAPI document: 2-oas3
 * Contact: developer_support@flowaccount.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.math.BigDecimal;

/**
 * ProductItem
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2020-06-17T00:38:54.499089+07:00[Asia/Bangkok]")
public class ProductItem {
  public static final String SERIALIZED_NAME_TYPE = "type";
  @SerializedName(SERIALIZED_NAME_TYPE)
  private Integer type = 1;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_QUANTITY = "quantity";
  @SerializedName(SERIALIZED_NAME_QUANTITY)
  private BigDecimal quantity;

  public static final String SERIALIZED_NAME_UNIT_NAME = "unitName";
  @SerializedName(SERIALIZED_NAME_UNIT_NAME)
  private String unitName;

  public static final String SERIALIZED_NAME_PRICE_PER_UNIT = "pricePerUnit";
  @SerializedName(SERIALIZED_NAME_PRICE_PER_UNIT)
  private BigDecimal pricePerUnit;

  public static final String SERIALIZED_NAME_TOTAL = "total";
  @SerializedName(SERIALIZED_NAME_TOTAL)
  private BigDecimal total;

  public static final String SERIALIZED_NAME_SELL_CHART_OF_ACCOUNT_CODE = "sellChartOfAccountCode";
  @SerializedName(SERIALIZED_NAME_SELL_CHART_OF_ACCOUNT_CODE)
  private String sellChartOfAccountCode;

  public static final String SERIALIZED_NAME_BUY_CHART_OF_ACCOUNT_CODE = "buyChartOfAccountCode";
  @SerializedName(SERIALIZED_NAME_BUY_CHART_OF_ACCOUNT_CODE)
  private String buyChartOfAccountCode;


  public ProductItem type(Integer type) {
    
    this.type = type;
    return this;
  }

   /**
   * ประเภทสินค้า &lt;br&gt; 1 &#x3D; บริการ (service) &lt;br&gt; 3 &#x3D; สินค้าไม่นับสต๊อก (non inventory) &lt;br&gt; 5 &#x3D; สินค้านับสต๊อก (inventory)
   * @return type
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "ประเภทสินค้า <br> 1 = บริการ (service) <br> 3 = สินค้าไม่นับสต๊อก (non inventory) <br> 5 = สินค้านับสต๊อก (inventory)")

  public Integer getType() {
    return type;
  }


  public void setType(Integer type) {
    this.type = type;
  }


  public ProductItem name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * ชื่อสินค้า
   * @return name
  **/
  @ApiModelProperty(required = true, value = "ชื่อสินค้า")

  public String getName() {
    return name;
  }


  public void setName(String name) {
    this.name = name;
  }


  public ProductItem description(String description) {
    
    this.description = description;
    return this;
  }

   /**
   * รายละเอียดสินค้า
   * @return description
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "รายละเอียดสินค้า")

  public String getDescription() {
    return description;
  }


  public void setDescription(String description) {
    this.description = description;
  }


  public ProductItem quantity(BigDecimal quantity) {
    
    this.quantity = quantity;
    return this;
  }

   /**
   * จำนวนสินค้า
   * @return quantity
  **/
  @ApiModelProperty(required = true, value = "จำนวนสินค้า")

  public BigDecimal getQuantity() {
    return quantity;
  }


  public void setQuantity(BigDecimal quantity) {
    this.quantity = quantity;
  }


  public ProductItem unitName(String unitName) {
    
    this.unitName = unitName;
    return this;
  }

   /**
   * หน่วยสินค้า
   * @return unitName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "หน่วยสินค้า")

  public String getUnitName() {
    return unitName;
  }


  public void setUnitName(String unitName) {
    this.unitName = unitName;
  }


  public ProductItem pricePerUnit(BigDecimal pricePerUnit) {
    
    this.pricePerUnit = pricePerUnit;
    return this;
  }

   /**
   * ราคาสินค้าต่อหน่วย
   * @return pricePerUnit
  **/
  @ApiModelProperty(required = true, value = "ราคาสินค้าต่อหน่วย")

  public BigDecimal getPricePerUnit() {
    return pricePerUnit;
  }


  public void setPricePerUnit(BigDecimal pricePerUnit) {
    this.pricePerUnit = pricePerUnit;
  }


  public ProductItem total(BigDecimal total) {
    
    this.total = total;
    return this;
  }

   /**
   * ราคารวมสินค้า
   * @return total
  **/
  @ApiModelProperty(required = true, value = "ราคารวมสินค้า")

  public BigDecimal getTotal() {
    return total;
  }


  public void setTotal(BigDecimal total) {
    this.total = total;
  }


  public ProductItem sellChartOfAccountCode(String sellChartOfAccountCode) {
    
    this.sellChartOfAccountCode = sellChartOfAccountCode;
    return this;
  }

   /**
   * เลือกลงบันทึกบัญชีรายได้ สำหรับเอกสารฝั่งขาย &lt;br&gt; &lt;ex&gt;Example: 41111&lt;/ex&gt;
   * @return sellChartOfAccountCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "เลือกลงบันทึกบัญชีรายได้ สำหรับเอกสารฝั่งขาย <br> <ex>Example: 41111</ex>")

  public String getSellChartOfAccountCode() {
    return sellChartOfAccountCode;
  }


  public void setSellChartOfAccountCode(String sellChartOfAccountCode) {
    this.sellChartOfAccountCode = sellChartOfAccountCode;
  }


  public ProductItem buyChartOfAccountCode(String buyChartOfAccountCode) {
    
    this.buyChartOfAccountCode = buyChartOfAccountCode;
    return this;
  }

   /**
   * เลือกลงบันทึกบัญชีค่าใช้จ่าย สำหรับเอกสารฝั่งซื้อ &lt;br&gt; &lt;ex&gt;Example: 51111.02&lt;/ex&gt;
   * @return buyChartOfAccountCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "เลือกลงบันทึกบัญชีค่าใช้จ่าย สำหรับเอกสารฝั่งซื้อ <br> <ex>Example: 51111.02</ex>")

  public String getBuyChartOfAccountCode() {
    return buyChartOfAccountCode;
  }


  public void setBuyChartOfAccountCode(String buyChartOfAccountCode) {
    this.buyChartOfAccountCode = buyChartOfAccountCode;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ProductItem productItem = (ProductItem) o;
    return Objects.equals(this.type, productItem.type) &&
        Objects.equals(this.name, productItem.name) &&
        Objects.equals(this.description, productItem.description) &&
        Objects.equals(this.quantity, productItem.quantity) &&
        Objects.equals(this.unitName, productItem.unitName) &&
        Objects.equals(this.pricePerUnit, productItem.pricePerUnit) &&
        Objects.equals(this.total, productItem.total) &&
        Objects.equals(this.sellChartOfAccountCode, productItem.sellChartOfAccountCode) &&
        Objects.equals(this.buyChartOfAccountCode, productItem.buyChartOfAccountCode);
  }

  @Override
  public int hashCode() {
    return Objects.hash(type, name, description, quantity, unitName, pricePerUnit, total, sellChartOfAccountCode, buyChartOfAccountCode);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ProductItem {\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    quantity: ").append(toIndentedString(quantity)).append("\n");
    sb.append("    unitName: ").append(toIndentedString(unitName)).append("\n");
    sb.append("    pricePerUnit: ").append(toIndentedString(pricePerUnit)).append("\n");
    sb.append("    total: ").append(toIndentedString(total)).append("\n");
    sb.append("    sellChartOfAccountCode: ").append(toIndentedString(sellChartOfAccountCode)).append("\n");
    sb.append("    buyChartOfAccountCode: ").append(toIndentedString(buyChartOfAccountCode)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

