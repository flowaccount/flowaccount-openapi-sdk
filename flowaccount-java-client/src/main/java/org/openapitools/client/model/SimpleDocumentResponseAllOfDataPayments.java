/*
 * FlowAccount Open API
 * # Introduction  **Servers Production**    <site>Site:</site> https://www.flowaccount.com    <site>Api url:</site> https://openapi.flowaccount.com/v1    **Beta test**   <site>Site:</site> http://sandbox-new.flowaccount.com/    <site>Api url:</site> https://openapi.flowaccount.com/test    **PostMan Collection**   <site>Link:</site> https://www.getpostman.com/collections/01e7c68d7093e2092a64
 *
 * The version of the OpenAPI document: 2-oas3
 * Contact: developer_support@flowaccount.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.math.BigDecimal;
import org.threeten.bp.LocalDate;

/**
 * ข้อมูลการเก็บเงินและจ่ายเงินของเอกสาร &lt;br&gt; ข้อมูลการเก็บเงิน: &lt;br&gt;1. ใบกำกับภาษี/ใบเสร็จรับเงิน (Tax Invoice) &lt;br&gt; 2. ใบเสร็จรับเงิน (Receipt) &lt;br&gt; 3. ใบกำกับภาษี/ใบเสร็จรับเงิน (Cash Invoice) &lt;br&gt; ข้อมูลการจ่ายเงิน: &lt;br&gt;1. เอกสารใบรับสินค้า (Receiving Inventory)
 */
@ApiModel(description = "ข้อมูลการเก็บเงินและจ่ายเงินของเอกสาร <br> ข้อมูลการเก็บเงิน: <br>1. ใบกำกับภาษี/ใบเสร็จรับเงิน (Tax Invoice) <br> 2. ใบเสร็จรับเงิน (Receipt) <br> 3. ใบกำกับภาษี/ใบเสร็จรับเงิน (Cash Invoice) <br> ข้อมูลการจ่ายเงิน: <br>1. เอกสารใบรับสินค้า (Receiving Inventory)")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2020-06-17T00:38:54.499089+07:00[Asia/Bangkok]")
public class SimpleDocumentResponseAllOfDataPayments {
  public static final String SERIALIZED_NAME_PAYMENT_DATE = "paymentDate";
  @SerializedName(SERIALIZED_NAME_PAYMENT_DATE)
  private LocalDate paymentDate;

  public static final String SERIALIZED_NAME_COLLECTED = "collected";
  @SerializedName(SERIALIZED_NAME_COLLECTED)
  private BigDecimal collected = 0d;

  public static final String SERIALIZED_NAME_PAYMENT_DEDUCTION_TYPE = "paymentDeductionType";
  @SerializedName(SERIALIZED_NAME_PAYMENT_DEDUCTION_TYPE)
  private Long paymentDeductionType = 0l;

  public static final String SERIALIZED_NAME_PAYMENT_DEDUCTION_AMOUNT = "paymentDeductionAmount";
  @SerializedName(SERIALIZED_NAME_PAYMENT_DEDUCTION_AMOUNT)
  private BigDecimal paymentDeductionAmount = 0d;

  public static final String SERIALIZED_NAME_WITHHELD_PERCENTAGE = "withheldPercentage";
  @SerializedName(SERIALIZED_NAME_WITHHELD_PERCENTAGE)
  private Long withheldPercentage = 0l;

  public static final String SERIALIZED_NAME_WITHHELD_AMOUNT = "withheldAmount";
  @SerializedName(SERIALIZED_NAME_WITHHELD_AMOUNT)
  private BigDecimal withheldAmount = 0d;

  public static final String SERIALIZED_NAME_PAYMENT_CHARGE = "paymentCharge";
  @SerializedName(SERIALIZED_NAME_PAYMENT_CHARGE)
  private BigDecimal paymentCharge = 0d;

  public static final String SERIALIZED_NAME_PAYMENT_METHOD = "paymentMethod";
  @SerializedName(SERIALIZED_NAME_PAYMENT_METHOD)
  private Integer paymentMethod = 0;

  public static final String SERIALIZED_NAME_PAYMENT_CHANNEL = "paymentChannel";
  @SerializedName(SERIALIZED_NAME_PAYMENT_CHANNEL)
  private String paymentChannel;

  public static final String SERIALIZED_NAME_BANK_ACCOUNT_TYPE = "bankAccountType";
  @SerializedName(SERIALIZED_NAME_BANK_ACCOUNT_TYPE)
  private Integer bankAccountType;

  public static final String SERIALIZED_NAME_BANK_ACCOUNT_NAME = "bankAccountName";
  @SerializedName(SERIALIZED_NAME_BANK_ACCOUNT_NAME)
  private String bankAccountName;

  public static final String SERIALIZED_NAME_BANK_ACCOUNT_NUMBER = "bankAccountNumber";
  @SerializedName(SERIALIZED_NAME_BANK_ACCOUNT_NUMBER)
  private String bankAccountNumber;

  public static final String SERIALIZED_NAME_CHEQUE_DATE = "chequeDate";
  @SerializedName(SERIALIZED_NAME_CHEQUE_DATE)
  private LocalDate chequeDate;

  public static final String SERIALIZED_NAME_CHEQUE_NUMBER = "chequeNumber";
  @SerializedName(SERIALIZED_NAME_CHEQUE_NUMBER)
  private String chequeNumber;

  public static final String SERIALIZED_NAME_CREDIT_CARD_BANK_ACCOUNT_ID = "creditCardBankAccountId";
  @SerializedName(SERIALIZED_NAME_CREDIT_CARD_BANK_ACCOUNT_ID)
  private Long creditCardBankAccountId = 0l;

  public static final String SERIALIZED_NAME_PAYMENT_REMARKS = "paymentRemarks";
  @SerializedName(SERIALIZED_NAME_PAYMENT_REMARKS)
  private String paymentRemarks;

  public static final String SERIALIZED_NAME_REMAINING_COLLECTED_TYPE = "remainingCollectedType";
  @SerializedName(SERIALIZED_NAME_REMAINING_COLLECTED_TYPE)
  private Long remainingCollectedType = 0l;

  public static final String SERIALIZED_NAME_REMAINING_COLLECTED = "remainingCollected";
  @SerializedName(SERIALIZED_NAME_REMAINING_COLLECTED)
  private BigDecimal remainingCollected = 0d;


  public SimpleDocumentResponseAllOfDataPayments paymentDate(LocalDate paymentDate) {
    
    this.paymentDate = paymentDate;
    return this;
  }

   /**
   * วันที่รับชำระเงิน รูปแบบ yyyy-MM-dd &lt;br&gt; &lt;ex&gt;Example: 2020-01-01&lt;/ex&gt;
   * @return paymentDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Wed Jan 01 07:00:00 ICT 2020", value = "วันที่รับชำระเงิน รูปแบบ yyyy-MM-dd <br> <ex>Example: 2020-01-01</ex>")

  public LocalDate getPaymentDate() {
    return paymentDate;
  }


  public void setPaymentDate(LocalDate paymentDate) {
    this.paymentDate = paymentDate;
  }


  public SimpleDocumentResponseAllOfDataPayments collected(BigDecimal collected) {
    
    this.collected = collected;
    return this;
  }

   /**
   * จำนวนเงินยอดรับสุทธิ
   * @return collected
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "จำนวนเงินยอดรับสุทธิ")

  public BigDecimal getCollected() {
    return collected;
  }


  public void setCollected(BigDecimal collected) {
    this.collected = collected;
  }


  public SimpleDocumentResponseAllOfDataPayments paymentDeductionType(Long paymentDeductionType) {
    
    this.paymentDeductionType = paymentDeductionType;
    return this;
  }

   /**
   * ประเภทรายการปรับลด: &lt;br&gt; 1 &#x3D; ส่วนลดพิเศษ &lt;br&gt; 3 &#x3D; ค่านายหน้าและส่วนแบ่งการขาย &lt;br&gt; 5 &#x3D; ค่าดำเนินการ &lt;br&gt; 7 &#x3D; ปัดเศษ &lt;br&gt; (เฉพาะเอกสารใบกำกับภาษี/ใบเสร็จรับเงิน)
   * @return paymentDeductionType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "ประเภทรายการปรับลด: <br> 1 = ส่วนลดพิเศษ <br> 3 = ค่านายหน้าและส่วนแบ่งการขาย <br> 5 = ค่าดำเนินการ <br> 7 = ปัดเศษ <br> (เฉพาะเอกสารใบกำกับภาษี/ใบเสร็จรับเงิน)")

  public Long getPaymentDeductionType() {
    return paymentDeductionType;
  }


  public void setPaymentDeductionType(Long paymentDeductionType) {
    this.paymentDeductionType = paymentDeductionType;
  }


  public SimpleDocumentResponseAllOfDataPayments paymentDeductionAmount(BigDecimal paymentDeductionAmount) {
    
    this.paymentDeductionAmount = paymentDeductionAmount;
    return this;
  }

   /**
   * จำนวนเงินยอดรายการปรับลด &lt;br&gt; (เฉพาะเอกสารใบกำกับภาษี/ใบเสร็จรับเงิน)
   * @return paymentDeductionAmount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "จำนวนเงินยอดรายการปรับลด <br> (เฉพาะเอกสารใบกำกับภาษี/ใบเสร็จรับเงิน)")

  public BigDecimal getPaymentDeductionAmount() {
    return paymentDeductionAmount;
  }


  public void setPaymentDeductionAmount(BigDecimal paymentDeductionAmount) {
    this.paymentDeductionAmount = paymentDeductionAmount;
  }


  public SimpleDocumentResponseAllOfDataPayments withheldPercentage(Long withheldPercentage) {
    
    this.withheldPercentage = withheldPercentage;
    return this;
  }

   /**
   * เปอร์เซ็น หัก ณ ที่จ่าย
   * @return withheldPercentage
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "เปอร์เซ็น หัก ณ ที่จ่าย")

  public Long getWithheldPercentage() {
    return withheldPercentage;
  }


  public void setWithheldPercentage(Long withheldPercentage) {
    this.withheldPercentage = withheldPercentage;
  }


  public SimpleDocumentResponseAllOfDataPayments withheldAmount(BigDecimal withheldAmount) {
    
    this.withheldAmount = withheldAmount;
    return this;
  }

   /**
   * จำนวน ยอดหัก ณ ที่จ่าย
   * @return withheldAmount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "จำนวน ยอดหัก ณ ที่จ่าย")

  public BigDecimal getWithheldAmount() {
    return withheldAmount;
  }


  public void setWithheldAmount(BigDecimal withheldAmount) {
    this.withheldAmount = withheldAmount;
  }


  public SimpleDocumentResponseAllOfDataPayments paymentCharge(BigDecimal paymentCharge) {
    
    this.paymentCharge = paymentCharge;
    return this;
  }

   /**
   * ค่าธรรมเนียม ที่ชำระโดยการโอนเงิน หรือ เช็ค &lt;br&gt; (เฉพาะเอกสารค่าใช้จ่าย)
   * @return paymentCharge
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "ค่าธรรมเนียม ที่ชำระโดยการโอนเงิน หรือ เช็ค <br> (เฉพาะเอกสารค่าใช้จ่าย)")

  public BigDecimal getPaymentCharge() {
    return paymentCharge;
  }


  public void setPaymentCharge(BigDecimal paymentCharge) {
    this.paymentCharge = paymentCharge;
  }


  public SimpleDocumentResponseAllOfDataPayments paymentMethod(Integer paymentMethod) {
    
    this.paymentMethod = paymentMethod;
    return this;
  }

   /**
   * วิธีการชำระ: &lt;br&gt; 1 &#x3D; เงินสด &lt;br&gt; 3 &#x3D; เช็ค &lt;br&gt; 5 &#x3D; โอนเงิน &lt;br&gt; 7 &#x3D; เครดิต
   * @return paymentMethod
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "วิธีการชำระ: <br> 1 = เงินสด <br> 3 = เช็ค <br> 5 = โอนเงิน <br> 7 = เครดิต")

  public Integer getPaymentMethod() {
    return paymentMethod;
  }


  public void setPaymentMethod(Integer paymentMethod) {
    this.paymentMethod = paymentMethod;
  }


  public SimpleDocumentResponseAllOfDataPayments paymentChannel(String paymentChannel) {
    
    this.paymentChannel = paymentChannel;
    return this;
  }

   /**
   * ช่องทางการชำระเงิน: &lt;br&gt; - เงินสด (Cash) &lt;br&gt; - โอนเงิน (Transfer) - ชื่อธนาคาร (Bank Name) &lt;br&gt; - เช็ค (Cheque) &lt;br&gt; - บัตรเครดิต (Credit card)
   * @return paymentChannel
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "ช่องทางการชำระเงิน: <br> - เงินสด (Cash) <br> - โอนเงิน (Transfer) - ชื่อธนาคาร (Bank Name) <br> - เช็ค (Cheque) <br> - บัตรเครดิต (Credit card)")

  public String getPaymentChannel() {
    return paymentChannel;
  }


  public void setPaymentChannel(String paymentChannel) {
    this.paymentChannel = paymentChannel;
  }


  public SimpleDocumentResponseAllOfDataPayments bankAccountType(Integer bankAccountType) {
    
    this.bankAccountType = bankAccountType;
    return this;
  }

   /**
   * ประเภทบัญชีธนาคาร: &lt;br&gt; 1 &#x3D; ออมทรัพย์ &lt;br&gt; 3 &#x3D; กระแสรายวัน &lt;br&gt; 7 &#x3D; ฝากประจำ
   * @return bankAccountType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "ประเภทบัญชีธนาคาร: <br> 1 = ออมทรัพย์ <br> 3 = กระแสรายวัน <br> 7 = ฝากประจำ")

  public Integer getBankAccountType() {
    return bankAccountType;
  }


  public void setBankAccountType(Integer bankAccountType) {
    this.bankAccountType = bankAccountType;
  }


  public SimpleDocumentResponseAllOfDataPayments bankAccountName(String bankAccountName) {
    
    this.bankAccountName = bankAccountName;
    return this;
  }

   /**
   * ชื่อธนาคาร
   * @return bankAccountName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "ชื่อธนาคาร")

  public String getBankAccountName() {
    return bankAccountName;
  }


  public void setBankAccountName(String bankAccountName) {
    this.bankAccountName = bankAccountName;
  }


  public SimpleDocumentResponseAllOfDataPayments bankAccountNumber(String bankAccountNumber) {
    
    this.bankAccountNumber = bankAccountNumber;
    return this;
  }

   /**
   * เลขที่ธนาคาร / บัตรเคดิต
   * @return bankAccountNumber
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "เลขที่ธนาคาร / บัตรเคดิต")

  public String getBankAccountNumber() {
    return bankAccountNumber;
  }


  public void setBankAccountNumber(String bankAccountNumber) {
    this.bankAccountNumber = bankAccountNumber;
  }


  public SimpleDocumentResponseAllOfDataPayments chequeDate(LocalDate chequeDate) {
    
    this.chequeDate = chequeDate;
    return this;
  }

   /**
   * วันที่หน้าเช็ค รูปแบบ yyyy-MM-dd &lt;br&gt; &lt;ex&gt;Example: 2020-01-01&lt;/ex&gt;
   * @return chequeDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Wed Jan 01 07:00:00 ICT 2020", value = "วันที่หน้าเช็ค รูปแบบ yyyy-MM-dd <br> <ex>Example: 2020-01-01</ex>")

  public LocalDate getChequeDate() {
    return chequeDate;
  }


  public void setChequeDate(LocalDate chequeDate) {
    this.chequeDate = chequeDate;
  }


  public SimpleDocumentResponseAllOfDataPayments chequeNumber(String chequeNumber) {
    
    this.chequeNumber = chequeNumber;
    return this;
  }

   /**
   * เลขที่เช็คธนาคาร
   * @return chequeNumber
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "เลขที่เช็คธนาคาร")

  public String getChequeNumber() {
    return chequeNumber;
  }


  public void setChequeNumber(String chequeNumber) {
    this.chequeNumber = chequeNumber;
  }


  public SimpleDocumentResponseAllOfDataPayments creditCardBankAccountId(Long creditCardBankAccountId) {
    
    this.creditCardBankAccountId = creditCardBankAccountId;
    return this;
  }

   /**
   * ธนาคารที่ชำระด้วยบัตรเครดิต &lt;br&gt; 1 &#x3D; ธนาคารกรุงเทพ &lt;br&gt; 2 &#x3D; ธนาคารกสิกรไทย &lt;br&gt; 3 &#x3D; ธนาคารกรุงไทย &lt;br&gt; 4 &#x3D; ธนาคารทหารไทย &lt;br&gt; 5 &#x3D; ธนาคารไทยพาณิชย์ &lt;br&gt; 6 &#x3D; ธนาคารสแตนดาร์ดชาร์เตอร์ด &lt;br&gt; 7 &#x3D; ธนาคารซีไอเอ็มบี ไทย &lt;br&gt; 8 &#x3D; ธนาคารยูโอบี &lt;br&gt; 10 &#x3D; ธนาคารกรุงศรีอยุธยา &lt;br&gt; 11 &#x3D; ธนาคารออมสิน &lt;br&gt; 12 &#x3D; ธนาคารธนชาต &lt;br&gt; 13 &#x3D; ธนาคารแลนด์ แอนด์ เฮ้าส์ &lt;br&gt; 14 &#x3D; ธนาคารเกียรตินาคิน &lt;br&gt; 15 &#x3D; ธนาคารซิตี้แบงก์ &lt;br&gt; 16 &#x3D; ธนาคารทิสโก้ &lt;br&gt; 53 &#x3D; ธนาคารเพื่อการเกษตรและสหกรณ์การเกษตร &lt;br&gt; 54 &#x3D; ธนาคารเพื่อการส่งออกและนำเข้าแห่งประเทศไทย &lt;br&gt; 55 &#x3D; ธนาคารอาคารสงเคราะห์ &lt;br&gt; 56 &#x3D; ธนาคารพัฒนาวิสาหกิจขนาดกลางและขนาดย่อมแห่งประเทศไทย &lt;br&gt; 57 &#x3D; ธนาคารอิสลามแห่งประเทศไทย &lt;br&gt; 58 &#x3D; ธนาคารแห่งประเทศจีน (ไทย) &lt;br&gt; 59 &#x3D; ธนาคารไอซีบีซี (ไทย) &lt;br&gt; 60 &#x3D; ธนาคารเมกะ สากลพาณิชย์ &lt;br&gt; 61 &#x3D; ธนาคารซูมิโตโม มิตซุย แบงกิ้ง คอร์ปอเรชั่น &lt;br&gt; 62 &#x3D; ธนาคารมิซูโฮ จำกัด (กรุงเทพฯ) &lt;br&gt; 63 &#x3D; ธนาคารฮ่องกงและเซี่ยงไฮ้แบงกิ้งคอร์ปอเรชั่น &lt;br&gt; 64 &#x3D; ธนาคารไทยเครดิต เพื่อรายย่อย 
   * @return creditCardBankAccountId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "ธนาคารที่ชำระด้วยบัตรเครดิต <br> 1 = ธนาคารกรุงเทพ <br> 2 = ธนาคารกสิกรไทย <br> 3 = ธนาคารกรุงไทย <br> 4 = ธนาคารทหารไทย <br> 5 = ธนาคารไทยพาณิชย์ <br> 6 = ธนาคารสแตนดาร์ดชาร์เตอร์ด <br> 7 = ธนาคารซีไอเอ็มบี ไทย <br> 8 = ธนาคารยูโอบี <br> 10 = ธนาคารกรุงศรีอยุธยา <br> 11 = ธนาคารออมสิน <br> 12 = ธนาคารธนชาต <br> 13 = ธนาคารแลนด์ แอนด์ เฮ้าส์ <br> 14 = ธนาคารเกียรตินาคิน <br> 15 = ธนาคารซิตี้แบงก์ <br> 16 = ธนาคารทิสโก้ <br> 53 = ธนาคารเพื่อการเกษตรและสหกรณ์การเกษตร <br> 54 = ธนาคารเพื่อการส่งออกและนำเข้าแห่งประเทศไทย <br> 55 = ธนาคารอาคารสงเคราะห์ <br> 56 = ธนาคารพัฒนาวิสาหกิจขนาดกลางและขนาดย่อมแห่งประเทศไทย <br> 57 = ธนาคารอิสลามแห่งประเทศไทย <br> 58 = ธนาคารแห่งประเทศจีน (ไทย) <br> 59 = ธนาคารไอซีบีซี (ไทย) <br> 60 = ธนาคารเมกะ สากลพาณิชย์ <br> 61 = ธนาคารซูมิโตโม มิตซุย แบงกิ้ง คอร์ปอเรชั่น <br> 62 = ธนาคารมิซูโฮ จำกัด (กรุงเทพฯ) <br> 63 = ธนาคารฮ่องกงและเซี่ยงไฮ้แบงกิ้งคอร์ปอเรชั่น <br> 64 = ธนาคารไทยเครดิต เพื่อรายย่อย ")

  public Long getCreditCardBankAccountId() {
    return creditCardBankAccountId;
  }


  public void setCreditCardBankAccountId(Long creditCardBankAccountId) {
    this.creditCardBankAccountId = creditCardBankAccountId;
  }


  public SimpleDocumentResponseAllOfDataPayments paymentRemarks(String paymentRemarks) {
    
    this.paymentRemarks = paymentRemarks;
    return this;
  }

   /**
   * หมายเหตุ การรับชำระเงิน หรือ ชำระเงิน
   * @return paymentRemarks
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "หมายเหตุ การรับชำระเงิน หรือ ชำระเงิน")

  public String getPaymentRemarks() {
    return paymentRemarks;
  }


  public void setPaymentRemarks(String paymentRemarks) {
    this.paymentRemarks = paymentRemarks;
  }


  public SimpleDocumentResponseAllOfDataPayments remainingCollectedType(Long remainingCollectedType) {
    
    this.remainingCollectedType = remainingCollectedType;
    return this;
  }

   /**
   * สาเหตุเงินขาดเงินเกิน: &lt;br&gt; 51 &#x3D; เงินขาดหรือเงินกิน &lt;br&gt; 55 &#x3D; ค่าธรรมเนียมธนาคาร 
   * @return remainingCollectedType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "สาเหตุเงินขาดเงินเกิน: <br> 51 = เงินขาดหรือเงินกิน <br> 55 = ค่าธรรมเนียมธนาคาร ")

  public Long getRemainingCollectedType() {
    return remainingCollectedType;
  }


  public void setRemainingCollectedType(Long remainingCollectedType) {
    this.remainingCollectedType = remainingCollectedType;
  }


  public SimpleDocumentResponseAllOfDataPayments remainingCollected(BigDecimal remainingCollected) {
    
    this.remainingCollected = remainingCollected;
    return this;
  }

   /**
   * จำนวน ยอดเงินขาด หรือ เงินเกิน
   * @return remainingCollected
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "จำนวน ยอดเงินขาด หรือ เงินเกิน")

  public BigDecimal getRemainingCollected() {
    return remainingCollected;
  }


  public void setRemainingCollected(BigDecimal remainingCollected) {
    this.remainingCollected = remainingCollected;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SimpleDocumentResponseAllOfDataPayments simpleDocumentResponseAllOfDataPayments = (SimpleDocumentResponseAllOfDataPayments) o;
    return Objects.equals(this.paymentDate, simpleDocumentResponseAllOfDataPayments.paymentDate) &&
        Objects.equals(this.collected, simpleDocumentResponseAllOfDataPayments.collected) &&
        Objects.equals(this.paymentDeductionType, simpleDocumentResponseAllOfDataPayments.paymentDeductionType) &&
        Objects.equals(this.paymentDeductionAmount, simpleDocumentResponseAllOfDataPayments.paymentDeductionAmount) &&
        Objects.equals(this.withheldPercentage, simpleDocumentResponseAllOfDataPayments.withheldPercentage) &&
        Objects.equals(this.withheldAmount, simpleDocumentResponseAllOfDataPayments.withheldAmount) &&
        Objects.equals(this.paymentCharge, simpleDocumentResponseAllOfDataPayments.paymentCharge) &&
        Objects.equals(this.paymentMethod, simpleDocumentResponseAllOfDataPayments.paymentMethod) &&
        Objects.equals(this.paymentChannel, simpleDocumentResponseAllOfDataPayments.paymentChannel) &&
        Objects.equals(this.bankAccountType, simpleDocumentResponseAllOfDataPayments.bankAccountType) &&
        Objects.equals(this.bankAccountName, simpleDocumentResponseAllOfDataPayments.bankAccountName) &&
        Objects.equals(this.bankAccountNumber, simpleDocumentResponseAllOfDataPayments.bankAccountNumber) &&
        Objects.equals(this.chequeDate, simpleDocumentResponseAllOfDataPayments.chequeDate) &&
        Objects.equals(this.chequeNumber, simpleDocumentResponseAllOfDataPayments.chequeNumber) &&
        Objects.equals(this.creditCardBankAccountId, simpleDocumentResponseAllOfDataPayments.creditCardBankAccountId) &&
        Objects.equals(this.paymentRemarks, simpleDocumentResponseAllOfDataPayments.paymentRemarks) &&
        Objects.equals(this.remainingCollectedType, simpleDocumentResponseAllOfDataPayments.remainingCollectedType) &&
        Objects.equals(this.remainingCollected, simpleDocumentResponseAllOfDataPayments.remainingCollected);
  }

  @Override
  public int hashCode() {
    return Objects.hash(paymentDate, collected, paymentDeductionType, paymentDeductionAmount, withheldPercentage, withheldAmount, paymentCharge, paymentMethod, paymentChannel, bankAccountType, bankAccountName, bankAccountNumber, chequeDate, chequeNumber, creditCardBankAccountId, paymentRemarks, remainingCollectedType, remainingCollected);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SimpleDocumentResponseAllOfDataPayments {\n");
    sb.append("    paymentDate: ").append(toIndentedString(paymentDate)).append("\n");
    sb.append("    collected: ").append(toIndentedString(collected)).append("\n");
    sb.append("    paymentDeductionType: ").append(toIndentedString(paymentDeductionType)).append("\n");
    sb.append("    paymentDeductionAmount: ").append(toIndentedString(paymentDeductionAmount)).append("\n");
    sb.append("    withheldPercentage: ").append(toIndentedString(withheldPercentage)).append("\n");
    sb.append("    withheldAmount: ").append(toIndentedString(withheldAmount)).append("\n");
    sb.append("    paymentCharge: ").append(toIndentedString(paymentCharge)).append("\n");
    sb.append("    paymentMethod: ").append(toIndentedString(paymentMethod)).append("\n");
    sb.append("    paymentChannel: ").append(toIndentedString(paymentChannel)).append("\n");
    sb.append("    bankAccountType: ").append(toIndentedString(bankAccountType)).append("\n");
    sb.append("    bankAccountName: ").append(toIndentedString(bankAccountName)).append("\n");
    sb.append("    bankAccountNumber: ").append(toIndentedString(bankAccountNumber)).append("\n");
    sb.append("    chequeDate: ").append(toIndentedString(chequeDate)).append("\n");
    sb.append("    chequeNumber: ").append(toIndentedString(chequeNumber)).append("\n");
    sb.append("    creditCardBankAccountId: ").append(toIndentedString(creditCardBankAccountId)).append("\n");
    sb.append("    paymentRemarks: ").append(toIndentedString(paymentRemarks)).append("\n");
    sb.append("    remainingCollectedType: ").append(toIndentedString(remainingCollectedType)).append("\n");
    sb.append("    remainingCollected: ").append(toIndentedString(remainingCollected)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

