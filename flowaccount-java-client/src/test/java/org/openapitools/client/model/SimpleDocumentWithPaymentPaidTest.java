/*
 * FlowAccount Open API
 * # Introduction  **Servers Production**    <site>Site:</site> https://www.flowaccount.com    <site>Api url:</site> https://openapi.flowaccount.com/v1    **Beta test**   <site>Site:</site> http://sandbox-new.flowaccount.com/    <site>Api url:</site> https://openapi.flowaccount.com/test    **PostMan Collection**   <site>Link:</site> https://www.getpostman.com/collections/01e7c68d7093e2092a64
 *
 * The version of the OpenAPI document: 2-oas3
 * Contact: developer_support@flowaccount.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.client.model.SimpleDocumentWithPaymentPaidCash;
import org.openapitools.client.model.SimpleDocumentWithPaymentPaidCheque;
import org.openapitools.client.model.SimpleDocumentWithPaymentPaidCreditCard;
import org.openapitools.client.model.SimpleDocumentWithPaymentPaidTransfer;
import org.openapitools.client.model.SimpleProductItem;
import org.openapitools.client.model.UpgradeDocument;
import org.threeten.bp.LocalDate;
import org.junit.Assert;
import org.junit.Ignore;
import org.junit.Test;


/**
 * Model tests for SimpleDocumentWithPaymentPaid
 */
public class SimpleDocumentWithPaymentPaidTest {
    private final SimpleDocumentWithPaymentPaid model = new SimpleDocumentWithPaymentPaid();

    /**
     * Model tests for SimpleDocumentWithPaymentPaid
     */
    @Test
    public void testSimpleDocumentWithPaymentPaid() {
        // TODO: test SimpleDocumentWithPaymentPaid
    }

    /**
     * Test the property 'contactCode'
     */
    @Test
    public void contactCodeTest() {
        // TODO: test contactCode
    }

    /**
     * Test the property 'contactName'
     */
    @Test
    public void contactNameTest() {
        // TODO: test contactName
    }

    /**
     * Test the property 'contactAddress'
     */
    @Test
    public void contactAddressTest() {
        // TODO: test contactAddress
    }

    /**
     * Test the property 'contactTaxId'
     */
    @Test
    public void contactTaxIdTest() {
        // TODO: test contactTaxId
    }

    /**
     * Test the property 'contactBranch'
     */
    @Test
    public void contactBranchTest() {
        // TODO: test contactBranch
    }

    /**
     * Test the property 'contactPerson'
     */
    @Test
    public void contactPersonTest() {
        // TODO: test contactPerson
    }

    /**
     * Test the property 'contactEmail'
     */
    @Test
    public void contactEmailTest() {
        // TODO: test contactEmail
    }

    /**
     * Test the property 'contactNumber'
     */
    @Test
    public void contactNumberTest() {
        // TODO: test contactNumber
    }

    /**
     * Test the property 'contactZipCode'
     */
    @Test
    public void contactZipCodeTest() {
        // TODO: test contactZipCode
    }

    /**
     * Test the property 'contactGroup'
     */
    @Test
    public void contactGroupTest() {
        // TODO: test contactGroup
    }

    /**
     * Test the property 'publishedOn'
     */
    @Test
    public void publishedOnTest() {
        // TODO: test publishedOn
    }

    /**
     * Test the property 'creditType'
     */
    @Test
    public void creditTypeTest() {
        // TODO: test creditType
    }

    /**
     * Test the property 'creditDays'
     */
    @Test
    public void creditDaysTest() {
        // TODO: test creditDays
    }

    /**
     * Test the property 'dueDate'
     */
    @Test
    public void dueDateTest() {
        // TODO: test dueDate
    }

    /**
     * Test the property 'salesName'
     */
    @Test
    public void salesNameTest() {
        // TODO: test salesName
    }

    /**
     * Test the property 'projectName'
     */
    @Test
    public void projectNameTest() {
        // TODO: test projectName
    }

    /**
     * Test the property 'reference'
     */
    @Test
    public void referenceTest() {
        // TODO: test reference
    }

    /**
     * Test the property 'isVatInclusive'
     */
    @Test
    public void isVatInclusiveTest() {
        // TODO: test isVatInclusive
    }

    /**
     * Test the property 'useReceiptDeduction'
     */
    @Test
    public void useReceiptDeductionTest() {
        // TODO: test useReceiptDeduction
    }

    /**
     * Test the property 'subTotal'
     */
    @Test
    public void subTotalTest() {
        // TODO: test subTotal
    }

    /**
     * Test the property 'discountPercentage'
     */
    @Test
    public void discountPercentageTest() {
        // TODO: test discountPercentage
    }

    /**
     * Test the property 'discountAmount'
     */
    @Test
    public void discountAmountTest() {
        // TODO: test discountAmount
    }

    /**
     * Test the property 'totalAfterDiscount'
     */
    @Test
    public void totalAfterDiscountTest() {
        // TODO: test totalAfterDiscount
    }

    /**
     * Test the property 'isVat'
     */
    @Test
    public void isVatTest() {
        // TODO: test isVat
    }

    /**
     * Test the property 'vatAmount'
     */
    @Test
    public void vatAmountTest() {
        // TODO: test vatAmount
    }

    /**
     * Test the property 'grandTotal'
     */
    @Test
    public void grandTotalTest() {
        // TODO: test grandTotal
    }

    /**
     * Test the property 'documentShowWithholdingTax'
     */
    @Test
    public void documentShowWithholdingTaxTest() {
        // TODO: test documentShowWithholdingTax
    }

    /**
     * Test the property 'documentWithholdingTaxPercentage'
     */
    @Test
    public void documentWithholdingTaxPercentageTest() {
        // TODO: test documentWithholdingTaxPercentage
    }

    /**
     * Test the property 'documentWithholdingTaxAmount'
     */
    @Test
    public void documentWithholdingTaxAmountTest() {
        // TODO: test documentWithholdingTaxAmount
    }

    /**
     * Test the property 'documentDeductionType'
     */
    @Test
    public void documentDeductionTypeTest() {
        // TODO: test documentDeductionType
    }

    /**
     * Test the property 'documentDeductionAmount'
     */
    @Test
    public void documentDeductionAmountTest() {
        // TODO: test documentDeductionAmount
    }

    /**
     * Test the property 'remarks'
     */
    @Test
    public void remarksTest() {
        // TODO: test remarks
    }

    /**
     * Test the property 'internalNotes'
     */
    @Test
    public void internalNotesTest() {
        // TODO: test internalNotes
    }

    /**
     * Test the property 'showSignatureOrStamp'
     */
    @Test
    public void showSignatureOrStampTest() {
        // TODO: test showSignatureOrStamp
    }

    /**
     * Test the property 'items'
     */
    @Test
    public void itemsTest() {
        // TODO: test items
    }

    /**
     * Test the property 'documentReference'
     */
    @Test
    public void documentReferenceTest() {
        // TODO: test documentReference
    }

    /**
     * Test the property 'documentPaymentStructureType'
     */
    @Test
    public void documentPaymentStructureTypeTest() {
        // TODO: test documentPaymentStructureType
    }

    /**
     * Test the property 'paymentMethod'
     */
    @Test
    public void paymentMethodTest() {
        // TODO: test paymentMethod
    }

    /**
     * Test the property 'paymentDate'
     */
    @Test
    public void paymentDateTest() {
        // TODO: test paymentDate
    }

    /**
     * Test the property 'collected'
     */
    @Test
    public void collectedTest() {
        // TODO: test collected
    }

    /**
     * Test the property 'withheldPercentage'
     */
    @Test
    public void withheldPercentageTest() {
        // TODO: test withheldPercentage
    }

    /**
     * Test the property 'withheldAmount'
     */
    @Test
    public void withheldAmountTest() {
        // TODO: test withheldAmount
    }

    /**
     * Test the property 'paymentRemarks'
     */
    @Test
    public void paymentRemarksTest() {
        // TODO: test paymentRemarks
    }

    /**
     * Test the property 'remainingCollectedType'
     */
    @Test
    public void remainingCollectedTypeTest() {
        // TODO: test remainingCollectedType
    }

    /**
     * Test the property 'remainingCollected'
     */
    @Test
    public void remainingCollectedTest() {
        // TODO: test remainingCollected
    }

    /**
     * Test the property 'transferBankAccountId'
     */
    @Test
    public void transferBankAccountIdTest() {
        // TODO: test transferBankAccountId
    }

    /**
     * Test the property 'bankAccountId'
     */
    @Test
    public void bankAccountIdTest() {
        // TODO: test bankAccountId
    }

    /**
     * Test the property 'paymentCharge'
     */
    @Test
    public void paymentChargeTest() {
        // TODO: test paymentCharge
    }

    /**
     * Test the property 'chequeDate'
     */
    @Test
    public void chequeDateTest() {
        // TODO: test chequeDate
    }

    /**
     * Test the property 'chequeNumber'
     */
    @Test
    public void chequeNumberTest() {
        // TODO: test chequeNumber
    }

    /**
     * Test the property 'chequeBankAccountId'
     */
    @Test
    public void chequeBankAccountIdTest() {
        // TODO: test chequeBankAccountId
    }

    /**
     * Test the property 'creditCardBankAccountId'
     */
    @Test
    public void creditCardBankAccountIdTest() {
        // TODO: test creditCardBankAccountId
    }

}
