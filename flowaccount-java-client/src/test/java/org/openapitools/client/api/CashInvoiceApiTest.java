/*
 * FlowAccount Open API
 * # Introduction  **Servers Production**    <site>Site:</site> https://www.flowaccount.com    <site>Api url:</site> https://openapi.flowaccount.com/v1    **Beta test**   <site>Site:</site> http://sandbox-new.flowaccount.com/    <site>Api url:</site> https://openapi.flowaccount.com/test    **PostMan Collection**   <site>Link:</site> https://www.getpostman.com/collections/01e7c68d7093e2092a64
 *
 * The version of the OpenAPI document: 2-oas3
 * Contact: developer_support@flowaccount.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.AllDocumentResponse;
import org.openapitools.client.model.AttachmentResponse;
import org.openapitools.client.model.DeleteResponse;
import java.io.File;
import org.openapitools.client.model.InlineDocument;
import org.openapitools.client.model.InlineDocumentResponse;
import org.openapitools.client.model.InlineDocumentWithPaymentReceiving;
import org.openapitools.client.model.PaymentReceivingDocument;
import org.openapitools.client.model.SendEmailCoppies;
import org.openapitools.client.model.SendEmailResponse;
import org.openapitools.client.model.ShareDocument;
import org.openapitools.client.model.ShareDocumentResponse;
import org.openapitools.client.model.SimpleDocument;
import org.openapitools.client.model.SimpleDocumentResponse;
import org.openapitools.client.model.SimpleDocumentWithPaymentReceiving;
import org.openapitools.client.model.UpdateInlineDocument;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for CashInvoiceApi
 */
@Ignore
public class CashInvoiceApiTest {

    private final CashInvoiceApi api = new CashInvoiceApi();

    
    /**
     * Send email cash invoices document.
     *
     * ส่งเอกสารใบกำกับภาษี/ใบเสร็จรับเงิน(เงินสด) ผ่านทางอีเมล ตามเลขที่เอกสารที่ต้องการ
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void cashInvoicesEmailDocumentPostTest() throws ApiException {
        String authorization = null;
        SendEmailCoppies sendEmailCoppies = null;
        SendEmailResponse response = api.cashInvoicesEmailDocumentPost(authorization, sendEmailCoppies);

        // TODO: test validations
    }
    
    /**
     * Get list all cash invoices documents
     *
     * เรียกดูข้อมูลเอกสารใบกำกับภาษี/ใบเสร็จรับเงิน (เงินสด) ทั้งหมดในระบบ
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void cashInvoicesGetTest() throws ApiException {
        Integer currentPage = null;
        Integer pageSize = null;
        String authorization = null;
        String sortBy = null;
        String filter = null;
        AllDocumentResponse response = api.cashInvoicesGet(currentPage, pageSize, authorization, sortBy, filter);

        // TODO: test validations
    }
    
    /**
     * Add Attachment to cash invoices document.
     *
     * แนบไฟล์ รูปภาพ หรือ เอกสารที่เกี่ยวข้อง ในเอกสารใบกำกับภาษี/ใบเสร็จรับเงิน (ขายสด) ตามเลขที่เอกสารที่ต้องการ
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void cashInvoicesIdAttachmentPostTest() throws ApiException {
        String authorization = null;
        String id = null;
        File file = null;
        AttachmentResponse response = api.cashInvoicesIdAttachmentPost(authorization, id, file);

        // TODO: test validations
    }
    
    /**
     * Delete cash invoices document.
     *
     * ลบ เอกสารใบกำกับ/ใบเสร็จรับเงิน (เงินสด) ตามเลขที่เอกสารที่ต้องการ &lt;br&gt; ** การลบเอกสาร เอกสารต้องอยู่ในสถานะ รอดำเนินการ 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void cashInvoicesIdDeleteTest() throws ApiException {
        String authorization = null;
        String id = null;
        DeleteResponse response = api.cashInvoicesIdDelete(authorization, id);

        // TODO: test validations
    }
    
    /**
     * Get cash invoices document.
     *
     * เรียกดูข้อมูลเอกสารใบกำกับภาษี/ใบเสร็จรับเงิน (เงินสด) ตามเลขที่เอกสารที่ต้องการ
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void cashInvoicesIdGetTest() throws ApiException {
        String authorization = null;
        String id = null;
        InlineDocumentResponse response = api.cashInvoicesIdGet(authorization, id);

        // TODO: test validations
    }
    
    /**
     * Change paid status of cash invoices document.
     *
     * เก็บเงิน เอกสารใบกำกับภาษี/ใบเสร็จรับเงิน (เงินสด) เปลี่ยนสถานะเป็น เก็บเงินแล้ว
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void cashInvoicesIdPaymentPostTest() throws ApiException {
        String authorization = null;
        String id = null;
        PaymentReceivingDocument paymentReceivingDocument = null;
        InlineDocumentResponse response = api.cashInvoicesIdPaymentPost(authorization, id, paymentReceivingDocument);

        // TODO: test validations
    }
    
    /**
     * Edit cash invoices document.
     *
     * แก้ไขข้อมูลเอกสารใบกำกับภาษี/ใบเสร็จรับเงิน(เงินสด) ตามเลขที่เอกสารที่ต้องการเอกสารต้องเป็นสถานะ รอดำเนินการ (Awaiting)
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void cashInvoicesIdPutTest() throws ApiException {
        String authorization = null;
        String id = null;
        UpdateInlineDocument updateInlineDocument = null;
        InlineDocumentResponse response = api.cashInvoicesIdPut(authorization, id, updateInlineDocument);

        // TODO: test validations
    }
    
    /**
     * Change status of cash invoices document.
     *
     * เปลี่ยนสถานะของเอกสารใบกำกับภาษี/ใบเสร็จรับเงิน(เงินสด) สร้างเอกสารใหม่ครั้งแรกจะได้รับสถานะ รอดำเนินการ (awaiting)
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void cashInvoicesIdStatusStatusIdPostTest() throws ApiException {
        String authorization = null;
        String id = null;
        String statusId = null;
        InlineDocumentResponse response = api.cashInvoicesIdStatusStatusIdPost(authorization, id, statusId);

        // TODO: test validations
    }
    
    /**
     * Create cash invoices document with discount and tax inline.
     *
     * สร้างเอกสารใบกำกับภาษี/ใบเสร็จรับเงิน (เงินสด) แบบส่วนลด หรือ ภาษี แยกตามรายการสินค้า เมื่อสร้างสำเร็จสถานะเอกสารจะอยู่ในสถานะ รอดำเนินการ (awaiting)
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void cashInvoicesInlinePostTest() throws ApiException {
        String authorization = null;
        InlineDocument inlineDocument = null;
        InlineDocumentResponse response = api.cashInvoicesInlinePost(authorization, inlineDocument);

        // TODO: test validations
    }
    
    /**
     * Create cash invoices document with discount and tax inline with payment.
     *
     * สร้างเอกสารใบกำกับภาษี/ใบเสร็จรับเงิน (เงินสด) แบบส่วนลด หรือ ภาษี แยกตามรายการสินค้าพร้อมเก็บเงิน &lt;br&gt;เมื่อสร้างสำเร็จสถานะเอกสารจะอยู่ในสถานะ เก็บเงินแล้ว (paid)
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void cashInvoicesInlineWithPaymentPostTest() throws ApiException {
        String authorization = null;
        InlineDocumentWithPaymentReceiving inlineDocumentWithPaymentReceiving = null;
        InlineDocumentResponse response = api.cashInvoicesInlineWithPaymentPost(authorization, inlineDocumentWithPaymentReceiving);

        // TODO: test validations
    }
    
    /**
     * Create cash invoices document.
     *
     * สร้างเอกสารใบกำกับภาษี/ใบเสร็จรับเงิน (ขายสด) เมื่อสร้างสำเร็จสถานะเอกสารจะอยู่ในสถานะ รอดำเนินการ (awaiting)
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void cashInvoicesPostTest() throws ApiException {
        String authorization = null;
        SimpleDocument simpleDocument = null;
        SimpleDocumentResponse response = api.cashInvoicesPost(authorization, simpleDocument);

        // TODO: test validations
    }
    
    /**
     * Share link cash invoices document.
     *
     * แชร์ลิงค์ เอกสารใบกำกับภาษี/ใบเสร็จรับเงิน(เงินสด) ที่ต้องการ จะได้รับลิงค์สำหรับแชร์และเรียกดูเอกสาร
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void cashInvoicesSharedocumentPostTest() throws ApiException {
        String authorization = null;
        ShareDocument shareDocument = null;
        ShareDocumentResponse response = api.cashInvoicesSharedocumentPost(authorization, shareDocument);

        // TODO: test validations
    }
    
    /**
     * Create cash invoices document with payment.
     *
     * สร้างเอกสารใบกำกับภาษี/ใบเสร็จรับเงิน (ขายสด) พร้อมเก็บเงิน เมื่อสร้างสำเร็จสถานะเอกสารจะอยู่ในสถานะ เก็บเงินแล้ว (paid)
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void cashInvoicesWithPaymentPostTest() throws ApiException {
        String authorization = null;
        SimpleDocumentWithPaymentReceiving simpleDocumentWithPaymentReceiving = null;
        SimpleDocumentResponse response = api.cashInvoicesWithPaymentPost(authorization, simpleDocumentWithPaymentReceiving);

        // TODO: test validations
    }
    
}
