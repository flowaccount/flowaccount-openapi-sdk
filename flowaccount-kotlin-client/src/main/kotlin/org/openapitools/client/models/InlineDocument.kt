/**
* FlowAccount Open API
* # Introduction  **Servers Production**    <site>Site:</site> https://www.flowaccount.com    <site>Api url:</site> https://openapi.flowaccount.com/v1    **Beta test**   <site>Site:</site> http://sandbox-new.flowaccount.com/    <site>Api url:</site> https://openapi.flowaccount.com/test    **PostMan Collection**   <site>Link:</site> https://www.getpostman.com/collections/01e7c68d7093e2092a64
*
* The version of the OpenAPI document: 2-oas3
* Contact: developer_support@flowaccount.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
package org.openapitools.client.models

import org.openapitools.client.models.Document
import org.openapitools.client.models.InlineDocumentAllOf
import org.openapitools.client.models.InlineProductItem
import org.openapitools.client.models.UpgradeDocument

import com.squareup.moshi.Json
/**
 * 
 * @param contactName ชื่อ ลูกค้า/ผู้จำหน่าย <br> <ex>Example: บริษัท ลูกค้า จำกัด, คุณลูกค้า ซื้อประจำ</ex>
 * @param publishedOn วันที่เอกสาร รูปแบบ yyyy-MM-dd <br> <ex>Example: 2020-01-01</ex>
 * @param dueDate วันครบกำหนดเอกสาร รูปแบบ yyyy-MM-dd <br> <ex>Example: 2020-01-01</ex>
 * @param totalAfterDiscount มูลค่าหลังหักส่วนลด
 * @param grandTotal จำนวนเงินรวมทั้งสิ้น (รวมภาษีมูลค่าเพิ่ม 7% แล้ว)
 * @param documentStructureType 
 * @param recordId id ของเอกสาร
 * @param contactCode รหัส ลูกค้า/ผู้จำหน่าย
 * @param contactAddress ที่อยู่ ลูกค้า/ผู้จำหน่าย
 * @param contactTaxId เลขประจำตัวผู้เสียภาษี ลูกค้า หรือ ผู้จำหน่าย/ลูกค้า <br> (ถ้ามีจำเป็นต้องครบ 13 หลัก) <br> <ex>Example: 1234567890123 </ex>
 * @param contactBranch สำนักงาน/สาขา
 * @param contactPerson ชื่อผู้ติดต่อ
 * @param contactEmail อีเมลผู้ติดต่อ <br> <ex>Example: contact@email.com</ex>
 * @param contactNumber เบอร์มือถือผู้ติดต่อ <br> <ex>Example: 099-999-9999</ex>
 * @param contactZipCode รหัสไปรษณีย์ติดต่อ
 * @param contactGroup ประผู้ติดต่อ <br> 1 = บุคคลธรรมดา <br> 3 = นิติบุคคล
 * @param creditType รูปแบบเครดิต <br> 1 = เครดิต (วัน) <br> 3 = เงินสด  <br> 5 = เครดิต (ไม่แสดงวันที่ครบกำหนด)
 * @param creditDays จำนวนวันที่ให้เครดิต <br> <ex>Example: 30</ex>
 * @param salesName ชื่อผู้สร้างเอกสาร หรือ ชื่อพนักงานขาย <br> <ex>Example: sale@email.com or Mr.Sale Shop</ex>
 * @param projectName ชื่อโปรเจค
 * @param reference เลขที่อ้างอิง หรือ เลขที่เอกสารที่เกี่ยวข้อง <br> <ex>Example: INV2020010001</ex>
 * @param isVatInclusive มูลค่าเอกสารรวมภาษีแล้วหรือไม่
 * @param useReceiptDeduction เปิดใช้งานฟังก์ชั่น ปรับลดท้ายเอกสาร <br> (เฉพาะเอกสารใบกำกับภาษี / ใบเสร็จรับเงิน และ ใบเสร็จรับเงิน)
 * @param subTotal มูลค่ารวมเป็นเงิน
 * @param discountPercentage มูลค่าส่วนลดเป็นเปอร์เซ็นต์
 * @param discountAmount มูลค่าส่วนลดเป็นจำนวน (บาท)
 * @param isVat มูลค่าหลังหักส่วนลด มีภาษีมูลค่าเพิ่ม 7%
 * @param vatAmount ภาษีมูลค่าเพิ่ม
 * @param documentShowWithholdingTax แสดงหรือไม่แสดง หัก ณ ที่จ่ายท้ายเอกสาร
 * @param documentWithholdingTaxPercentage ภาษี ณ ที่จ่าย (%)
 * @param documentWithholdingTaxAmount มูลค่าภาษีหัก ณ ที่จ่าย
 * @param documentDeductionType ประเภทรายการปรับลด <br> 1 = ส่วนลดพิเศษ <br> 3 = ค่านายหน้าและส่วนแบ่งการขาย <br> 5 = ค่าดำเนินการ <br> 7 = ปัดเศษ <br> (เฉพาะเอกสารใบกำกับภาษี/ใบเสร็จรับเงิน)
 * @param documentDeductionAmount จำนวนเงินยอดรายการปรับลด <br> (เฉพาะเอกสารใบกำกับภาษี/ใบเสร็จรับเงิน)
 * @param remarks หมายเหตุเอกสาร
 * @param internalNotes โน๊ตภายในบริษัท
 * @param showSignatureOrStamp ลายเซ็นอิเล็กทรอนิกส์และตรายาง
 * @param discountType รูปแบบส่วนลดในเอกสาร กรณีใช้รูปแบบ Inline ส่วนลด หรือ ภาษี แยกตามรายการสินค้า <br> สามารถเลือกรูปแบบส่วนลดได้ <br> 1 =  เปอร์เซ็นต์ <br> 3 = จำนวน (บาท)
 * @param useInlineDiscount inline discount ใช้งานส่วนลด แยกตามรายการสินค้า
 * @param useInlineVat inline vat ใช้งานส่วนลดและภาษี แยกตามรายการสินค้า
 * @param exemptAmount ยอดขายที่ยกเว้นภาษีมูลค่าเพิ่ม
 * @param vatableAmount ยอดขายที่คิดภาษีมูลค่าเพิ่ม
 * @param items รายการสินค้าใช้งานสำหรับเอกสาร Inline
 * @param documentReference สำหรับอัพเกรดเอกสาร โดยอ้างอิงเอกสารต้นทาง (ยกเว้นเอกสารใบเสนอราคา)
 */

data class InlineDocument (
    /* ชื่อ ลูกค้า/ผู้จำหน่าย <br> <ex>Example: บริษัท ลูกค้า จำกัด, คุณลูกค้า ซื้อประจำ</ex> */
    @Json(name = "contactName")
    override val contactName: kotlin.String,
    /* วันที่เอกสาร รูปแบบ yyyy-MM-dd <br> <ex>Example: 2020-01-01</ex> */
    @Json(name = "publishedOn")
    override val publishedOn: java.time.LocalDate,
    /* วันครบกำหนดเอกสาร รูปแบบ yyyy-MM-dd <br> <ex>Example: 2020-01-01</ex> */
    @Json(name = "dueDate")
    override val dueDate: java.time.LocalDate,
    /* มูลค่าหลังหักส่วนลด */
    @Json(name = "totalAfterDiscount")
    override val totalAfterDiscount: java.math.BigDecimal,
    /* จำนวนเงินรวมทั้งสิ้น (รวมภาษีมูลค่าเพิ่ม 7% แล้ว) */
    @Json(name = "grandTotal")
    override val grandTotal: java.math.BigDecimal,
    @Json(name = "documentStructureType")
    override val documentStructureType: kotlin.String?,
    /* id ของเอกสาร */
    @Json(name = "recordId")
    override val recordId: kotlin.Long? = null,
    /* รหัส ลูกค้า/ผู้จำหน่าย */
    @Json(name = "contactCode")
    override val contactCode: kotlin.String? = null,
    /* ที่อยู่ ลูกค้า/ผู้จำหน่าย */
    @Json(name = "contactAddress")
    override val contactAddress: kotlin.String? = null,
    /* เลขประจำตัวผู้เสียภาษี ลูกค้า หรือ ผู้จำหน่าย/ลูกค้า <br> (ถ้ามีจำเป็นต้องครบ 13 หลัก) <br> <ex>Example: 1234567890123 </ex> */
    @Json(name = "contactTaxId")
    override val contactTaxId: kotlin.String? = null,
    /* สำนักงาน/สาขา */
    @Json(name = "contactBranch")
    override val contactBranch: kotlin.String? = null,
    /* ชื่อผู้ติดต่อ */
    @Json(name = "contactPerson")
    override val contactPerson: kotlin.String? = null,
    /* อีเมลผู้ติดต่อ <br> <ex>Example: contact@email.com</ex> */
    @Json(name = "contactEmail")
    override val contactEmail: kotlin.String? = null,
    /* เบอร์มือถือผู้ติดต่อ <br> <ex>Example: 099-999-9999</ex> */
    @Json(name = "contactNumber")
    override val contactNumber: kotlin.String? = null,
    /* รหัสไปรษณีย์ติดต่อ */
    @Json(name = "contactZipCode")
    override val contactZipCode: kotlin.String? = null,
    /* ประผู้ติดต่อ <br> 1 = บุคคลธรรมดา <br> 3 = นิติบุคคล */
    @Json(name = "contactGroup")
    override val contactGroup: kotlin.Int? = null,
    /* รูปแบบเครดิต <br> 1 = เครดิต (วัน) <br> 3 = เงินสด  <br> 5 = เครดิต (ไม่แสดงวันที่ครบกำหนด) */
    @Json(name = "creditType")
    override val creditType: kotlin.Int? = null,
    /* จำนวนวันที่ให้เครดิต <br> <ex>Example: 30</ex> */
    @Json(name = "creditDays")
    override val creditDays: kotlin.Int? = null,
    /* ชื่อผู้สร้างเอกสาร หรือ ชื่อพนักงานขาย <br> <ex>Example: sale@email.com or Mr.Sale Shop</ex> */
    @Json(name = "salesName")
    override val salesName: kotlin.String? = null,
    /* ชื่อโปรเจค */
    @Json(name = "projectName")
    override val projectName: kotlin.String? = null,
    /* เลขที่อ้างอิง หรือ เลขที่เอกสารที่เกี่ยวข้อง <br> <ex>Example: INV2020010001</ex> */
    @Json(name = "reference")
    override val reference: kotlin.String? = null,
    /* มูลค่าเอกสารรวมภาษีแล้วหรือไม่ */
    @Json(name = "isVatInclusive")
    override val isVatInclusive: kotlin.Boolean? = null,
    /* เปิดใช้งานฟังก์ชั่น ปรับลดท้ายเอกสาร <br> (เฉพาะเอกสารใบกำกับภาษี / ใบเสร็จรับเงิน และ ใบเสร็จรับเงิน) */
    @Json(name = "useReceiptDeduction")
    override val useReceiptDeduction: kotlin.Boolean? = null,
    /* มูลค่ารวมเป็นเงิน */
    @Json(name = "subTotal")
    override val subTotal: java.math.BigDecimal? = null,
    /* มูลค่าส่วนลดเป็นเปอร์เซ็นต์ */
    @Json(name = "discountPercentage")
    override val discountPercentage: kotlin.Int? = null,
    /* มูลค่าส่วนลดเป็นจำนวน (บาท) */
    @Json(name = "discountAmount")
    override val discountAmount: java.math.BigDecimal? = null,
    /* มูลค่าหลังหักส่วนลด มีภาษีมูลค่าเพิ่ม 7% */
    @Json(name = "isVat")
    override val isVat: kotlin.Boolean? = null,
    /* ภาษีมูลค่าเพิ่ม */
    @Json(name = "vatAmount")
    override val vatAmount: java.math.BigDecimal? = null,
    /* แสดงหรือไม่แสดง หัก ณ ที่จ่ายท้ายเอกสาร */
    @Json(name = "documentShowWithholdingTax")
    override val documentShowWithholdingTax: kotlin.Boolean? = null,
    /* ภาษี ณ ที่จ่าย (%) */
    @Json(name = "documentWithholdingTaxPercentage")
    override val documentWithholdingTaxPercentage: kotlin.Int? = null,
    /* มูลค่าภาษีหัก ณ ที่จ่าย */
    @Json(name = "documentWithholdingTaxAmount")
    override val documentWithholdingTaxAmount: java.math.BigDecimal? = null,
    /* ประเภทรายการปรับลด <br> 1 = ส่วนลดพิเศษ <br> 3 = ค่านายหน้าและส่วนแบ่งการขาย <br> 5 = ค่าดำเนินการ <br> 7 = ปัดเศษ <br> (เฉพาะเอกสารใบกำกับภาษี/ใบเสร็จรับเงิน) */
    @Json(name = "documentDeductionType")
    override val documentDeductionType: kotlin.Int? = null,
    /* จำนวนเงินยอดรายการปรับลด <br> (เฉพาะเอกสารใบกำกับภาษี/ใบเสร็จรับเงิน) */
    @Json(name = "documentDeductionAmount")
    override val documentDeductionAmount: java.math.BigDecimal? = null,
    /* หมายเหตุเอกสาร */
    @Json(name = "remarks")
    override val remarks: kotlin.String? = null,
    /* โน๊ตภายในบริษัท */
    @Json(name = "internalNotes")
    override val internalNotes: kotlin.String? = null,
    /* ลายเซ็นอิเล็กทรอนิกส์และตรายาง */
    @Json(name = "showSignatureOrStamp")
    override val showSignatureOrStamp: kotlin.Boolean? = null,
    /* รูปแบบส่วนลดในเอกสาร กรณีใช้รูปแบบ Inline ส่วนลด หรือ ภาษี แยกตามรายการสินค้า <br> สามารถเลือกรูปแบบส่วนลดได้ <br> 1 =  เปอร์เซ็นต์ <br> 3 = จำนวน (บาท) */
    @Json(name = "discountType")
    val discountType: kotlin.Int? = null,
    /* inline discount ใช้งานส่วนลด แยกตามรายการสินค้า */
    @Json(name = "useInlineDiscount")
    val useInlineDiscount: kotlin.Boolean? = null,
    /* inline vat ใช้งานส่วนลดและภาษี แยกตามรายการสินค้า */
    @Json(name = "useInlineVat")
    val useInlineVat: kotlin.Boolean? = null,
    /* ยอดขายที่ยกเว้นภาษีมูลค่าเพิ่ม */
    @Json(name = "exemptAmount")
    val exemptAmount: java.math.BigDecimal? = null,
    /* ยอดขายที่คิดภาษีมูลค่าเพิ่ม */
    @Json(name = "vatableAmount")
    val vatableAmount: java.math.BigDecimal? = null,
    /* รายการสินค้าใช้งานสำหรับเอกสาร Inline */
    @Json(name = "items")
    val items: kotlin.Array<InlineProductItem>? = null,
    /* สำหรับอัพเกรดเอกสาร โดยอ้างอิงเอกสารต้นทาง (ยกเว้นเอกสารใบเสนอราคา) */
    @Json(name = "documentReference")
    val documentReference: kotlin.Array<UpgradeDocument>? = null
) : Document

