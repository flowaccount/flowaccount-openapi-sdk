/**
 * FlowAccount Open API
 * # Introduction  **Servers Production**    <site>Site:</site> https://www.flowaccount.com    <site>Api url:</site> https://openapi.flowaccount.com/v1    **Beta test**   <site>Site:</site> http://sandbox-new.flowaccount.com/    <site>Api url:</site> https://openapi.flowaccount.com/test    **PostMan Collection**   <site>Link:</site> https://www.getpostman.com/collections/01e7c68d7093e2092a64
 *
 * The version of the OpenAPI document: 2-oas3
 * Contact: developer_support@flowaccount.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.FlowAccountOpenApi);
  }
}(this, function(expect, FlowAccountOpenApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new FlowAccountOpenApi.PaymentReceivingDocument();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('PaymentReceivingDocument', function() {
    it('should create an instance of PaymentReceivingDocument', function() {
      // uncomment below and update the code to test PaymentReceivingDocument
      //var instane = new FlowAccountOpenApi.PaymentReceivingDocument();
      //expect(instance).to.be.a(FlowAccountOpenApi.PaymentReceivingDocument);
    });

    it('should have the property paymentStructureType (base name: "paymentStructureType")', function() {
      // uncomment below and update the code to test the property paymentStructureType
      //var instane = new FlowAccountOpenApi.PaymentReceivingDocument();
      //expect(instance).to.be();
    });

    it('should have the property documentId (base name: "documentId")', function() {
      // uncomment below and update the code to test the property documentId
      //var instane = new FlowAccountOpenApi.PaymentReceivingDocument();
      //expect(instance).to.be();
    });

    it('should have the property paymentMethod (base name: "paymentMethod")', function() {
      // uncomment below and update the code to test the property paymentMethod
      //var instane = new FlowAccountOpenApi.PaymentReceivingDocument();
      //expect(instance).to.be();
    });

    it('should have the property paymentDate (base name: "paymentDate")', function() {
      // uncomment below and update the code to test the property paymentDate
      //var instane = new FlowAccountOpenApi.PaymentReceivingDocument();
      //expect(instance).to.be();
    });

    it('should have the property collected (base name: "collected")', function() {
      // uncomment below and update the code to test the property collected
      //var instane = new FlowAccountOpenApi.PaymentReceivingDocument();
      //expect(instance).to.be();
    });

    it('should have the property paymentDeductionType (base name: "paymentDeductionType")', function() {
      // uncomment below and update the code to test the property paymentDeductionType
      //var instane = new FlowAccountOpenApi.PaymentReceivingDocument();
      //expect(instance).to.be();
    });

    it('should have the property paymentDeductionAmount (base name: "paymentDeductionAmount")', function() {
      // uncomment below and update the code to test the property paymentDeductionAmount
      //var instane = new FlowAccountOpenApi.PaymentReceivingDocument();
      //expect(instance).to.be();
    });

    it('should have the property withheldPercentage (base name: "withheldPercentage")', function() {
      // uncomment below and update the code to test the property withheldPercentage
      //var instane = new FlowAccountOpenApi.PaymentReceivingDocument();
      //expect(instance).to.be();
    });

    it('should have the property withheldAmount (base name: "withheldAmount")', function() {
      // uncomment below and update the code to test the property withheldAmount
      //var instane = new FlowAccountOpenApi.PaymentReceivingDocument();
      //expect(instance).to.be();
    });

    it('should have the property transferBankAccountId (base name: "transferBankAccountId")', function() {
      // uncomment below and update the code to test the property transferBankAccountId
      //var instane = new FlowAccountOpenApi.PaymentReceivingDocument();
      //expect(instance).to.be();
    });

    it('should have the property bankAccountId (base name: "bankAccountId")', function() {
      // uncomment below and update the code to test the property bankAccountId
      //var instane = new FlowAccountOpenApi.PaymentReceivingDocument();
      //expect(instance).to.be();
    });

    it('should have the property paymentRemarks (base name: "paymentRemarks")', function() {
      // uncomment below and update the code to test the property paymentRemarks
      //var instane = new FlowAccountOpenApi.PaymentReceivingDocument();
      //expect(instance).to.be();
    });

    it('should have the property remainingCollectedType (base name: "remainingCollectedType")', function() {
      // uncomment below and update the code to test the property remainingCollectedType
      //var instane = new FlowAccountOpenApi.PaymentReceivingDocument();
      //expect(instance).to.be();
    });

    it('should have the property remainingCollected (base name: "remainingCollected")', function() {
      // uncomment below and update the code to test the property remainingCollected
      //var instane = new FlowAccountOpenApi.PaymentReceivingDocument();
      //expect(instance).to.be();
    });

    it('should have the property chequeDate (base name: "chequeDate")', function() {
      // uncomment below and update the code to test the property chequeDate
      //var instane = new FlowAccountOpenApi.PaymentReceivingDocument();
      //expect(instance).to.be();
    });

    it('should have the property chequeNumber (base name: "chequeNumber")', function() {
      // uncomment below and update the code to test the property chequeNumber
      //var instane = new FlowAccountOpenApi.PaymentReceivingDocument();
      //expect(instance).to.be();
    });

    it('should have the property chequeBankAccountId (base name: "chequeBankAccountId")', function() {
      // uncomment below and update the code to test the property chequeBankAccountId
      //var instane = new FlowAccountOpenApi.PaymentReceivingDocument();
      //expect(instance).to.be();
    });

    it('should have the property creditCardBankAccountId (base name: "creditCardBankAccountId")', function() {
      // uncomment below and update the code to test the property creditCardBankAccountId
      //var instane = new FlowAccountOpenApi.PaymentReceivingDocument();
      //expect(instance).to.be();
    });

  });

}));
