/**
 * FlowAccount Open API
 * # Introduction  **Servers Production**    <site>Site:</site> https://www.flowaccount.com    <site>Api url:</site> https://openapi.flowaccount.com/v1    **Beta test**   <site>Site:</site> http://sandbox-new.flowaccount.com/    <site>Api url:</site> https://openapi.flowaccount.com/test    **PostMan Collection**   <site>Link:</site> https://www.getpostman.com/collections/01e7c68d7093e2092a64
 *
 * The version of the OpenAPI document: 2-oas3
 * Contact: developer_support@flowaccount.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The PaymentReceivingCash model module.
 * @module model/PaymentReceivingCash
 * @version 2-oas3
 */
class PaymentReceivingCash {
    /**
     * Constructs a new <code>PaymentReceivingCash</code>.
     * @alias module:model/PaymentReceivingCash
     * @param paymentStructureType {String} รับชำระเงิน ด้วยเงินสด
     * @param documentId {Number} id เอกสาร
     * @param paymentMethod {Number} ประเภทการเก็บเงิน <br> 1 = เงินสด
     * @param paymentDate {Date} วันที่รับชำระเงิน / วันที่ชำระเงิน รูปแบบ yyyy-MM-dd <br> <ex>Example: 2020-01-01</ex>
     * @param collected {Number} จำนวนเงินยอดรับสุทธิ <br> <ex> Example : 100.00 </ex>
     */
    constructor(paymentStructureType, documentId, paymentMethod, paymentDate, collected) { 
        
        PaymentReceivingCash.initialize(this, paymentStructureType, documentId, paymentMethod, paymentDate, collected);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, paymentStructureType, documentId, paymentMethod, paymentDate, collected) { 
        obj['paymentStructureType'] = paymentStructureType;
        obj['documentId'] = documentId;
        obj['paymentMethod'] = paymentMethod;
        obj['paymentDate'] = paymentDate;
        obj['collected'] = collected;
    }

    /**
     * Constructs a <code>PaymentReceivingCash</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PaymentReceivingCash} obj Optional instance to populate.
     * @return {module:model/PaymentReceivingCash} The populated <code>PaymentReceivingCash</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PaymentReceivingCash();

            if (data.hasOwnProperty('paymentStructureType')) {
                obj['paymentStructureType'] = ApiClient.convertToType(data['paymentStructureType'], 'String');
            }
            if (data.hasOwnProperty('documentId')) {
                obj['documentId'] = ApiClient.convertToType(data['documentId'], 'Number');
            }
            if (data.hasOwnProperty('paymentMethod')) {
                obj['paymentMethod'] = ApiClient.convertToType(data['paymentMethod'], 'Number');
            }
            if (data.hasOwnProperty('paymentDate')) {
                obj['paymentDate'] = ApiClient.convertToType(data['paymentDate'], 'Date');
            }
            if (data.hasOwnProperty('collected')) {
                obj['collected'] = ApiClient.convertToType(data['collected'], 'Number');
            }
            if (data.hasOwnProperty('paymentDeductionType')) {
                obj['paymentDeductionType'] = ApiClient.convertToType(data['paymentDeductionType'], 'Number');
            }
            if (data.hasOwnProperty('paymentDeductionAmount')) {
                obj['paymentDeductionAmount'] = ApiClient.convertToType(data['paymentDeductionAmount'], 'Number');
            }
            if (data.hasOwnProperty('withheldPercentage')) {
                obj['withheldPercentage'] = ApiClient.convertToType(data['withheldPercentage'], 'Number');
            }
            if (data.hasOwnProperty('withheldAmount')) {
                obj['withheldAmount'] = ApiClient.convertToType(data['withheldAmount'], 'Number');
            }
            if (data.hasOwnProperty('paymentRemarks')) {
                obj['paymentRemarks'] = ApiClient.convertToType(data['paymentRemarks'], 'String');
            }
            if (data.hasOwnProperty('remainingCollectedType')) {
                obj['remainingCollectedType'] = ApiClient.convertToType(data['remainingCollectedType'], 'Number');
            }
            if (data.hasOwnProperty('remainingCollected')) {
                obj['remainingCollected'] = ApiClient.convertToType(data['remainingCollected'], 'Number');
            }
        }
        return obj;
    }


}

/**
 * รับชำระเงิน ด้วยเงินสด
 * @member {String} paymentStructureType
 */
PaymentReceivingCash.prototype['paymentStructureType'] = undefined;

/**
 * id เอกสาร
 * @member {Number} documentId
 */
PaymentReceivingCash.prototype['documentId'] = undefined;

/**
 * ประเภทการเก็บเงิน <br> 1 = เงินสด
 * @member {Number} paymentMethod
 * @default 1
 */
PaymentReceivingCash.prototype['paymentMethod'] = 1;

/**
 * วันที่รับชำระเงิน / วันที่ชำระเงิน รูปแบบ yyyy-MM-dd <br> <ex>Example: 2020-01-01</ex>
 * @member {Date} paymentDate
 */
PaymentReceivingCash.prototype['paymentDate'] = undefined;

/**
 * จำนวนเงินยอดรับสุทธิ <br> <ex> Example : 100.00 </ex>
 * @member {Number} collected
 * @default 0
 */
PaymentReceivingCash.prototype['collected'] = 0;

/**
 * ประเภทรายการปรับลด <br> 1 = ส่วนลดพิเศษ <br> 3 = ค่านายหน้าและส่วนแบ่งการขาย <br> 5 = ค่าดำเนินการ <br> 7 = ปัดเศษ <br>
 * @member {Number} paymentDeductionType
 * @default 0
 */
PaymentReceivingCash.prototype['paymentDeductionType'] = 0;

/**
 * จำนวนเงินยอดรายการปรับลด <br> <ex> Example : 100.00 </ex>
 * @member {Number} paymentDeductionAmount
 * @default 0
 */
PaymentReceivingCash.prototype['paymentDeductionAmount'] = 0;

/**
 * เปอร์เซ็น หัก ณ ที่จ่าย <br> 0.5 = 0.5% <br> 0.75 = 0.75% <br> 1 = 1% <br> 1.5 = 1.5% <br> 2 = 2% <br> 3 = 3% <br> 5 = 5% <br> 10 = 10% <br> 15 = 15% <br> -1 = จำนวนเงิน <red>(สำหรับเอกสารที่ใช้ภาษีแยกตามรายการสินค้า ต้องใช้เป็นจำนวนเงิน)</red>
 * @member {Number} withheldPercentage
 * @default 0
 */
PaymentReceivingCash.prototype['withheldPercentage'] = 0;

/**
 * จำนวน ยอดหัก ณ ที่จ่าย <br> <ex> Example : 100.00 </ex>
 * @member {Number} withheldAmount
 * @default 0
 */
PaymentReceivingCash.prototype['withheldAmount'] = 0;

/**
 * หมายเหตุ การรับชำระเงิน หรือ ชำระเงิน
 * @member {String} paymentRemarks
 */
PaymentReceivingCash.prototype['paymentRemarks'] = undefined;

/**
 * สาเหตุเงินขาด เงินเกิน <br> 51 = เงินขาดหรือเงินกิน <br> 55 = ค่าธรรมเนียมธนาคาร 
 * @member {Number} remainingCollectedType
 * @default 0
 */
PaymentReceivingCash.prototype['remainingCollectedType'] = 0;

/**
 * จำนวน ยอดเงินขาด หรือ เงินเกิน <br> <ex> Example : 100.00 </ex>
 * @member {Number} remainingCollected
 * @default 0
 */
PaymentReceivingCash.prototype['remainingCollected'] = 0;






export default PaymentReceivingCash;

