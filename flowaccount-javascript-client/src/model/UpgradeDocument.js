/**
 * FlowAccount Open API
 * # Introduction  **Servers Production**    <site>Site:</site> https://www.flowaccount.com    <site>Api url:</site> https://openapi.flowaccount.com/v1    **Beta test**   <site>Site:</site> http://sandbox-new.flowaccount.com/    <site>Api url:</site> https://openapi.flowaccount.com/test    **PostMan Collection**   <site>Link:</site> https://www.getpostman.com/collections/01e7c68d7093e2092a64
 *
 * The version of the OpenAPI document: 2-oas3
 * Contact: developer_support@flowaccount.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The UpgradeDocument model module.
 * @module model/UpgradeDocument
 * @version 2-oas3
 */
class UpgradeDocument {
    /**
     * Constructs a new <code>UpgradeDocument</code>.
     * ข้อมูลเอกสารต้นทาง ที่ต้องการอัพเกรดเป็นเอกสารที่ต้องการ
     * @alias module:model/UpgradeDocument
     * @param recordId {Number} id ของเอกสารต้นทาง
     * @param referenceDocumentSerial {String} เลขที่เอกสารต้นทาง <br> <ex>Example: QT20200101</ex>
     * @param referenceDocumentType {Number} เลขประเภทของเอกสารต้นทาง <br> Quotaions = 3 <br> Billing Notes = 5 <br> Tax Invoices = 7 <br> <ex>Example: 3</ex>
     */
    constructor(recordId, referenceDocumentSerial, referenceDocumentType) { 
        
        UpgradeDocument.initialize(this, recordId, referenceDocumentSerial, referenceDocumentType);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, recordId, referenceDocumentSerial, referenceDocumentType) { 
        obj['recordId'] = recordId;
        obj['referenceDocumentSerial'] = referenceDocumentSerial;
        obj['referenceDocumentType'] = referenceDocumentType;
    }

    /**
     * Constructs a <code>UpgradeDocument</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/UpgradeDocument} obj Optional instance to populate.
     * @return {module:model/UpgradeDocument} The populated <code>UpgradeDocument</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new UpgradeDocument();

            if (data.hasOwnProperty('recordId')) {
                obj['recordId'] = ApiClient.convertToType(data['recordId'], 'Number');
            }
            if (data.hasOwnProperty('referenceDocumentSerial')) {
                obj['referenceDocumentSerial'] = ApiClient.convertToType(data['referenceDocumentSerial'], 'String');
            }
            if (data.hasOwnProperty('referenceDocumentType')) {
                obj['referenceDocumentType'] = ApiClient.convertToType(data['referenceDocumentType'], 'Number');
            }
        }
        return obj;
    }


}

/**
 * id ของเอกสารต้นทาง
 * @member {Number} recordId
 */
UpgradeDocument.prototype['recordId'] = undefined;

/**
 * เลขที่เอกสารต้นทาง <br> <ex>Example: QT20200101</ex>
 * @member {String} referenceDocumentSerial
 */
UpgradeDocument.prototype['referenceDocumentSerial'] = undefined;

/**
 * เลขประเภทของเอกสารต้นทาง <br> Quotaions = 3 <br> Billing Notes = 5 <br> Tax Invoices = 7 <br> <ex>Example: 3</ex>
 * @member {Number} referenceDocumentType
 */
UpgradeDocument.prototype['referenceDocumentType'] = undefined;






export default UpgradeDocument;

