/**
 * FlowAccount Open API
 * # Introduction  **Servers Production**    <site>Site:</site> https://www.flowaccount.com    <site>Api url:</site> https://openapi.flowaccount.com/v1    **Beta test**   <site>Site:</site> http://sandbox-new.flowaccount.com/    <site>Api url:</site> https://openapi.flowaccount.com/test    **PostMan Collection**   <site>Link:</site> https://www.getpostman.com/collections/01e7c68d7093e2092a64
 *
 * The version of the OpenAPI document: 2-oas3
 * Contact: developer_support@flowaccount.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import SimpleDocumentAllOf from './SimpleDocumentAllOf';
import SimpleProductItem from './SimpleProductItem';
import UpdateDocument from './UpdateDocument';
import UpgradeDocument from './UpgradeDocument';

/**
 * The UpdateSimpleDocument model module.
 * @module model/UpdateSimpleDocument
 * @version 2-oas3
 */
class UpdateSimpleDocument {
    /**
     * Constructs a new <code>UpdateSimpleDocument</code>.
     * @alias module:model/UpdateSimpleDocument
     * @extends module:model/UpdateDocument
     * @implements module:model/UpdateDocument
     * @implements module:model/SimpleDocumentAllOf
     * @param companyName {String} ชื่อบริษัท
     * @param companyBranch {String} ชื่อ และ รหัสสาขา <br><ex>Example: สำนักงานใหญ่ 00000</ex>
     * @param contactName {String} ชื่อ ลูกค้า/ผู้จำหน่าย <br> <ex>Example: บริษัท ลูกค้า จำกัด, คุณลูกค้า ซื้อประจำ</ex>
     * @param publishedOn {Date} วันที่เอกสาร รูปแบบ yyyy-MM-dd <br> <ex>Example: 2020-01-01</ex>
     * @param dueDate {Date} วันครบกำหนดเอกสาร รูปแบบ yyyy-MM-dd <br> <ex>Example: 2020-01-01</ex>
     * @param totalAfterDiscount {Number} มูลค่าหลังหักส่วนลด
     * @param grandTotal {Number} จำนวนเงินรวมทั้งสิ้น (รวมภาษีมูลค่าเพิ่ม 7% แล้ว)
     * @param documentStructureType {String} 
     */
    constructor(companyName, companyBranch, contactName, publishedOn, dueDate, totalAfterDiscount, grandTotal, documentStructureType) { 
        UpdateDocument.initialize(this, companyName, companyBranch, contactName, publishedOn, dueDate, totalAfterDiscount, grandTotal, documentStructureType);SimpleDocumentAllOf.initialize(this);
        UpdateSimpleDocument.initialize(this, companyName, companyBranch, contactName, publishedOn, dueDate, totalAfterDiscount, grandTotal, documentStructureType);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, companyName, companyBranch, contactName, publishedOn, dueDate, totalAfterDiscount, grandTotal, documentStructureType) { 
    }

    /**
     * Constructs a <code>UpdateSimpleDocument</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/UpdateSimpleDocument} obj Optional instance to populate.
     * @return {module:model/UpdateSimpleDocument} The populated <code>UpdateSimpleDocument</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new UpdateSimpleDocument();
            UpdateDocument.constructFromObject(data, obj);
            UpdateDocument.constructFromObject(data, obj);
            SimpleDocumentAllOf.constructFromObject(data, obj);

            if (data.hasOwnProperty('items')) {
                obj['items'] = ApiClient.convertToType(data['items'], [SimpleProductItem]);
            }
            if (data.hasOwnProperty('documentReference')) {
                obj['documentReference'] = ApiClient.convertToType(data['documentReference'], [UpgradeDocument]);
            }
        }
        return obj;
    }


}

/**
 * รายการสินค้าใช้งานสำหรับเอกสาร Simple
 * @member {Array.<module:model/SimpleProductItem>} items
 */
UpdateSimpleDocument.prototype['items'] = undefined;

/**
 * สำหรับอัพเกรดเอกสาร โดยอ้างอิงเอกสารต้นทาง (ยกเว้นเอกสารใบเสนอราคา)
 * @member {Array.<module:model/UpgradeDocument>} documentReference
 */
UpdateSimpleDocument.prototype['documentReference'] = undefined;


// Implement UpdateDocument interface:
/**
 * id ของเอกสาร
 * @member {Number} recordId
 * @default 0
 */
UpdateDocument.prototype['recordId'] = 0;
/**
 * ชื่อบริษัท
 * @member {String} companyName
 */
UpdateDocument.prototype['companyName'] = undefined;
/**
 * ชื่อบริษัท ภาษาอังกฤษ (แสดงเมื่อเลือกเอกสารเป็นภาษาอังกฤษ)
 * @member {String} companyNameEn
 */
UpdateDocument.prototype['companyNameEn'] = undefined;
/**
 * ที่อยู่บริษัท
 * @member {String} companyAddress
 */
UpdateDocument.prototype['companyAddress'] = undefined;
/**
 * ที่อยู่บริษัท ภาษาอังกฤษ (แสดงเมื่อเลือกเอกสารเป็นภาษาอังกฤษ)
 * @member {String} companyAddressEn
 */
UpdateDocument.prototype['companyAddressEn'] = undefined;
/**
 * เลขประจำตัวผู้เสียภาษี บริษัท <br><ex>Example: 0105558096348</ex>
 * @member {String} companyTaxId
 */
UpdateDocument.prototype['companyTaxId'] = undefined;
/**
 * ชื่อ และ รหัสสาขา <br><ex>Example: สำนักงานใหญ่ 00000</ex>
 * @member {String} companyBranch
 */
UpdateDocument.prototype['companyBranch'] = undefined;
/**
 * ชื่อ และ รหัสสาขา ภาษาอังกฤษ (แสดงเมื่อเลือกเอกสารเป็นภาษาอังกฤษ) <br><ex>Example: Head Office 00000</ex>
 * @member {String} companyBranchEn
 */
UpdateDocument.prototype['companyBranchEn'] = undefined;
/**
 * เบอร์โทรสำนักงาน <br><ex>Example: 02-999-9999</ex>
 * @member {String} companyPhone
 */
UpdateDocument.prototype['companyPhone'] = undefined;
/**
 * เบอร์โทรศัพท์มือถือ <br><ex>Example: 099-999-9999</ex>
 * @member {String} companyMobile
 */
UpdateDocument.prototype['companyMobile'] = undefined;
/**
 * เบอร์โทรสาร <br><ex>Example: 02-999-9999 ต่อ 1</ex>
 * @member {String} companyFax
 */
UpdateDocument.prototype['companyFax'] = undefined;
/**
 * เว็บไซต์ <br><ex>Example: www.flowaccount.com</ex>
 * @member {String} companyWebsite
 */
UpdateDocument.prototype['companyWebsite'] = undefined;
/**
 * รหัส ลูกค้า/ผู้จำหน่าย
 * @member {String} contactCode
 */
UpdateDocument.prototype['contactCode'] = undefined;
/**
 * ชื่อ ลูกค้า/ผู้จำหน่าย <br> <ex>Example: บริษัท ลูกค้า จำกัด, คุณลูกค้า ซื้อประจำ</ex>
 * @member {String} contactName
 */
UpdateDocument.prototype['contactName'] = undefined;
/**
 * ที่อยู่ ลูกค้า/ผู้จำหน่าย
 * @member {String} contactAddress
 */
UpdateDocument.prototype['contactAddress'] = undefined;
/**
 * เลขประจำตัวผู้เสียภาษี ลูกค้า หรือ ผู้จำหน่าย/ลูกค้า <br> (ถ้ามีจำเป็นต้องครบ 13 หลัก) <br> <ex>Example: 1234567890123 </ex>
 * @member {String} contactTaxId
 */
UpdateDocument.prototype['contactTaxId'] = undefined;
/**
 * สำนักงาน/สาขา
 * @member {String} contactBranch
 */
UpdateDocument.prototype['contactBranch'] = undefined;
/**
 * ชื่อผู้ติดต่อ
 * @member {String} contactPerson
 */
UpdateDocument.prototype['contactPerson'] = undefined;
/**
 * อีเมลผู้ติดต่อ <br> <ex>Example: contact@email.com</ex>
 * @member {String} contactEmail
 */
UpdateDocument.prototype['contactEmail'] = undefined;
/**
 * เบอร์มือถือผู้ติดต่อ <br> <ex>Example: 099-999-9999</ex>
 * @member {String} contactNumber
 */
UpdateDocument.prototype['contactNumber'] = undefined;
/**
 * รหัสไปรษณีย์
 * @member {String} contactZipCode
 */
UpdateDocument.prototype['contactZipCode'] = undefined;
/**
 * ประผู้ติดต่อ <br> 1 = บุคคลธรรมดา <br> 3 = นิติบุคคล
 * @member {Number} contactGroup
 * @default 1
 */
UpdateDocument.prototype['contactGroup'] = 1;
/**
 * วันที่เอกสาร รูปแบบ yyyy-MM-dd <br> <ex>Example: 2020-01-01</ex>
 * @member {Date} publishedOn
 */
UpdateDocument.prototype['publishedOn'] = undefined;
/**
 * รูปแบบเครดิต <br> 1 = เครดิต (วัน) <br> 3 = เงินสด  <br> 5 = เครดิต (ไม่แสดงวันที่ครบกำหนด)
 * @member {Number} creditType
 * @default 1
 */
UpdateDocument.prototype['creditType'] = 1;
/**
 * จำนวนวันที่ให้เครดิต <br> <ex>Example: 30</ex>
 * @member {Number} creditDays
 * @default 0
 */
UpdateDocument.prototype['creditDays'] = 0;
/**
 * วันครบกำหนดเอกสาร รูปแบบ yyyy-MM-dd <br> <ex>Example: 2020-01-01</ex>
 * @member {Date} dueDate
 */
UpdateDocument.prototype['dueDate'] = undefined;
/**
 * ชื่อผู้สร้างเอกสาร หรือ ชื่อพนักงานขาย <br> <ex>Example: sale@email.com or Mr.Sale Shop</ex>
 * @member {String} salesName
 * @default 'อีเมล หรือ ชื่อผู้สร้างเอกสาร'
 */
UpdateDocument.prototype['salesName'] = 'อีเมล หรือ ชื่อผู้สร้างเอกสาร';
/**
 * ชื่อโปรเจค
 * @member {String} projectName
 */
UpdateDocument.prototype['projectName'] = undefined;
/**
 * เลขที่อ้างอิง หรือ เลขที่เอกสารที่เกี่ยวข้อง <br> <ex>Example: INV2020010001</ex>
 * @member {String} reference
 */
UpdateDocument.prototype['reference'] = undefined;
/**
 * มูลค่าเอกสารรวมภาษีแล้วหรือไม่
 * @member {Boolean} isVatInclusive
 * @default false
 */
UpdateDocument.prototype['isVatInclusive'] = false;
/**
 * เปิดใช้งานฟังก์ชั่น ปรับลดท้ายเอกสาร <br> (เฉพาะเอกสารใบกำกับภาษี / ใบเสร็จรับเงิน และ ใบเสร็จรับเงิน)
 * @member {Boolean} useReceiptDeduction
 * @default false
 */
UpdateDocument.prototype['useReceiptDeduction'] = false;
/**
 * มูลค่ารวมเป็นเงิน
 * @member {Number} subTotal
 * @default 0
 */
UpdateDocument.prototype['subTotal'] = 0;
/**
 * มูลค่าส่วนลดเป็นเปอร์เซ็นต์
 * @member {Number} discountPercentage
 * @default 0
 */
UpdateDocument.prototype['discountPercentage'] = 0;
/**
 * มูลค่าส่วนลดเป็นจำนวน (บาท)
 * @member {Number} discountAmount
 * @default 0
 */
UpdateDocument.prototype['discountAmount'] = 0;
/**
 * มูลค่าหลังหักส่วนลด
 * @member {Number} totalAfterDiscount
 */
UpdateDocument.prototype['totalAfterDiscount'] = undefined;
/**
 * มูลค่าหลังหักส่วนลด มีภาษีมูลค่าเพิ่ม 7%
 * @member {Boolean} isVat
 * @default false
 */
UpdateDocument.prototype['isVat'] = false;
/**
 * ภาษีมูลค่าเพิ่ม
 * @member {Number} vatAmount
 */
UpdateDocument.prototype['vatAmount'] = undefined;
/**
 * จำนวนเงินรวมทั้งสิ้น (รวมภาษีมูลค่าเพิ่ม 7% แล้ว)
 * @member {Number} grandTotal
 */
UpdateDocument.prototype['grandTotal'] = undefined;
/**
 * แสดงหรือไม่แสดง หัก ณ ที่จ่ายท้ายเอกสาร
 * @member {Boolean} documentShowWithholdingTax
 * @default false
 */
UpdateDocument.prototype['documentShowWithholdingTax'] = false;
/**
 * ภาษี ณ ที่จ่าย (%)
 * @member {Number} documentWithholdingTaxPercentage
 * @default 0
 */
UpdateDocument.prototype['documentWithholdingTaxPercentage'] = 0;
/**
 * มูลค่าภาษีหัก ณ ที่จ่าย
 * @member {Number} documentWithholdingTaxAmount
 * @default 0
 */
UpdateDocument.prototype['documentWithholdingTaxAmount'] = 0;
/**
 * ประเภทรายการปรับลด <br> 1 = ส่วนลดพิเศษ <br> 3 = ค่านายหน้าและส่วนแบ่งการขาย <br> 5 = ค่าดำเนินการ <br> 7 = ปัดเศษ <br> (เฉพาะเอกสารใบกำกับภาษี/ใบเสร็จรับเงิน)
 * @member {Number} documentDeductionType
 * @default 0
 */
UpdateDocument.prototype['documentDeductionType'] = 0;
/**
 * จำนวนเงินยอดรายการปรับลด <br> (เฉพาะเอกสารใบกำกับภาษี/ใบเสร็จรับเงิน)
 * @member {Number} documentDeductionAmount
 * @default 0
 */
UpdateDocument.prototype['documentDeductionAmount'] = 0;
/**
 * หมายเหตุเอกสาร
 * @member {String} remarks
 */
UpdateDocument.prototype['remarks'] = undefined;
/**
 * โน๊ตภายในบริษัท
 * @member {String} internalNotes
 */
UpdateDocument.prototype['internalNotes'] = undefined;
/**
 * ลายเซ็นอิเล็กทรอนิกส์และตรายาง
 * @member {Boolean} showSignatureOrStamp
 * @default true
 */
UpdateDocument.prototype['showSignatureOrStamp'] = true;
/**
 * @member {String} documentStructureType
 */
UpdateDocument.prototype['documentStructureType'] = undefined;
// Implement SimpleDocumentAllOf interface:
/**
 * รายการสินค้าใช้งานสำหรับเอกสาร Simple
 * @member {Array.<module:model/SimpleProductItem>} items
 */
SimpleDocumentAllOf.prototype['items'] = undefined;
/**
 * สำหรับอัพเกรดเอกสาร โดยอ้างอิงเอกสารต้นทาง (ยกเว้นเอกสารใบเสนอราคา)
 * @member {Array.<module:model/UpgradeDocument>} documentReference
 */
SimpleDocumentAllOf.prototype['documentReference'] = undefined;




export default UpdateSimpleDocument;

