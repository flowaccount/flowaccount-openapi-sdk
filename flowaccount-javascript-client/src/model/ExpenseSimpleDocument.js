/**
 * FlowAccount Open API
 * # Introduction  **Servers Production**    <site>Site:</site> https://www.flowaccount.com    <site>Api url:</site> https://openapi.flowaccount.com/v1    **Beta test**   <site>Site:</site> http://sandbox-new.flowaccount.com/    <site>Api url:</site> https://openapi.flowaccount.com/test    **PostMan Collection**   <site>Link:</site> https://www.getpostman.com/collections/01e7c68d7093e2092a64
 *
 * The version of the OpenAPI document: 2-oas3
 * Contact: developer_support@flowaccount.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ExpenseDocument from './ExpenseDocument';
import ExpenseSimpleDocumentAllOf from './ExpenseSimpleDocumentAllOf';
import ExpenseSimpleProductItem from './ExpenseSimpleProductItem';

/**
 * The ExpenseSimpleDocument model module.
 * @module model/ExpenseSimpleDocument
 * @version 2-oas3
 */
class ExpenseSimpleDocument {
    /**
     * Constructs a new <code>ExpenseSimpleDocument</code>.
     * @alias module:model/ExpenseSimpleDocument
     * @extends module:model/ExpenseDocument
     * @implements module:model/ExpenseDocument
     * @implements module:model/ExpenseSimpleDocumentAllOf
     * @param contactName {String} ชื่อ ผู้จำหน่าย หรือ ผู้จำหน่าย/ลูกค้า
     * @param publishedOn {Date} วันที่เอกสาร รูปแบบ yyyy-MM-dd <br> <ex>Example: 2020-01-01</ex>
     * @param subTotal {Number} มูลค่ารวมเป็นเงิน
     * @param totalAfterDiscount {Number} มูลค่าหลังหักส่วนลด
     * @param grandTotal {Number} จำนวนเงินรวมทั้งสิ้น (รวมภาษีมูลค่าเพิ่ม 7% แล้ว)
     */
    constructor(contactName, publishedOn, subTotal, totalAfterDiscount, grandTotal) { 
        ExpenseDocument.initialize(this, contactName, publishedOn, subTotal, totalAfterDiscount, grandTotal);ExpenseSimpleDocumentAllOf.initialize(this);
        ExpenseSimpleDocument.initialize(this, contactName, publishedOn, subTotal, totalAfterDiscount, grandTotal);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, contactName, publishedOn, subTotal, totalAfterDiscount, grandTotal) { 
    }

    /**
     * Constructs a <code>ExpenseSimpleDocument</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ExpenseSimpleDocument} obj Optional instance to populate.
     * @return {module:model/ExpenseSimpleDocument} The populated <code>ExpenseSimpleDocument</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ExpenseSimpleDocument();
            ExpenseDocument.constructFromObject(data, obj);
            ExpenseDocument.constructFromObject(data, obj);
            ExpenseSimpleDocumentAllOf.constructFromObject(data, obj);

            if (data.hasOwnProperty('items')) {
                obj['items'] = ApiClient.convertToType(data['items'], [ExpenseSimpleProductItem]);
            }
        }
        return obj;
    }


}

/**
 * รายการสินค้าใช้งานสำหรับเอกสาร Simple Expense
 * @member {Array.<module:model/ExpenseSimpleProductItem>} items
 */
ExpenseSimpleDocument.prototype['items'] = undefined;


// Implement ExpenseDocument interface:
/**
 * รหัส ผู้จำหน่าย หรือ ผู้จำหน่าย/ลูกค้า
 * @member {String} contactCode
 */
ExpenseDocument.prototype['contactCode'] = undefined;
/**
 * ชื่อ ผู้จำหน่าย หรือ ผู้จำหน่าย/ลูกค้า
 * @member {String} contactName
 */
ExpenseDocument.prototype['contactName'] = undefined;
/**
 * ที่อยู่ ผู้จำหน่าย หรือ ผู้จำหน่าย/ลูกค้า
 * @member {String} contactAddress
 */
ExpenseDocument.prototype['contactAddress'] = undefined;
/**
 * เลขประจำตัวผู้เสียภาษี ผู้จำหน่าย หรือ ผู้จำหน่าย/ลูกค้า <br> (ถ้ามีจำเป็นต้องครบ 13 หลัก) <br> <ex>Example: 1234567890123 </ex>
 * @member {String} contactTaxId
 */
ExpenseDocument.prototype['contactTaxId'] = undefined;
/**
 * สำนักงาน/สาขา
 * @member {String} contactBranch
 */
ExpenseDocument.prototype['contactBranch'] = undefined;
/**
 * ชื่อผู้ติดต่อ
 * @member {String} contactPerson
 */
ExpenseDocument.prototype['contactPerson'] = undefined;
/**
 * อีเมลผู้ติดต่อ <br> <ex>Example: supplier@email.com</ex>
 * @member {String} contactEmail
 */
ExpenseDocument.prototype['contactEmail'] = undefined;
/**
 * เบอร์มือถือผู้ติดต่อ <br> <ex>Example: 099-999-9999</ex>
 * @member {String} contactNumber
 */
ExpenseDocument.prototype['contactNumber'] = undefined;
/**
 * รหัสไปรษณีย์ติดต่อ
 * @member {String} contactZipCode
 */
ExpenseDocument.prototype['contactZipCode'] = undefined;
/**
 * ประผู้ติดต่อ <br> 1 = บุคคลธรรมดา <br> 3 = นิติบุคคล
 * @member {Number} contactGroup
 * @default 1
 */
ExpenseDocument.prototype['contactGroup'] = 1;
/**
 * วันที่เอกสาร รูปแบบ yyyy-MM-dd <br> <ex>Example: 2020-01-01</ex>
 * @member {Date} publishedOn
 */
ExpenseDocument.prototype['publishedOn'] = undefined;
/**
 * รูปแบบเครดิต <br> 1 = เครดิต (วัน) <br> 3 = เงินสด  <br> 5 = เครดิต (ไม่แสดงวันที่ครบกำหนด)
 * @member {Number} creditType
 * @default 1
 */
ExpenseDocument.prototype['creditType'] = 1;
/**
 * จำนวนวันที่ให้เครดิต <br> <ex>Example: 30</ex>
 * @member {Number} creditDays
 * @default 0
 */
ExpenseDocument.prototype['creditDays'] = 0;
/**
 * วันครบกำหนดเอกสาร รูปแบบ yyyy-MM-dd <br> <ex>Example: 2020-01-01</ex>
 * @member {Date} dueDate
 */
ExpenseDocument.prototype['dueDate'] = undefined;
/**
 * ชื่อผู้สร้างเอกสาร หรือ ชื่อพนักงานขาย <br> <ex>Example: sale@email.com or Mr.Sale Shop</ex>
 * @member {String} salesName
 * @default 'อีเมล หรือ ชื่อผู้สร้างเอกสาร'
 */
ExpenseDocument.prototype['salesName'] = 'อีเมล หรือ ชื่อผู้สร้างเอกสาร';
/**
 * ชื่อโปรเจค
 * @member {String} projectName
 */
ExpenseDocument.prototype['projectName'] = undefined;
/**
 * เลขที่อ้างอิง หรือ เลขที่เอกสารที่เกี่ยวข้อง <br> <ex>Example: INV2020010001</ex>
 * @member {String} reference
 */
ExpenseDocument.prototype['reference'] = undefined;
/**
 * มูลค่าเอกสารรวมภาษีแล้วหรือไม่
 * @member {Boolean} isVatInclusive
 * @default false
 */
ExpenseDocument.prototype['isVatInclusive'] = false;
/**
 * มูลค่ารวมเป็นเงิน
 * @member {Number} subTotal
 * @default 0
 */
ExpenseDocument.prototype['subTotal'] = 0;
/**
 * มูลค่าส่วนลดเป็นเปอร์เซ็นต์
 * @member {Number} discountPercentage
 * @default 0
 */
ExpenseDocument.prototype['discountPercentage'] = 0;
/**
 * มูลค่าส่วนลดเป็นจำนวน (บาท)
 * @member {Number} discountAmount
 * @default 0
 */
ExpenseDocument.prototype['discountAmount'] = 0;
/**
 * มูลค่าหลังหักส่วนลด
 * @member {Number} totalAfterDiscount
 */
ExpenseDocument.prototype['totalAfterDiscount'] = undefined;
/**
 * มูลค่าหลังหักส่วนลด มีีภาษีมูลค่าเพิ่ม 7%
 * @member {Boolean} isVat
 * @default false
 */
ExpenseDocument.prototype['isVat'] = false;
/**
 * ภาษีมูลค่าเพิ่ม
 * @member {Number} vatAmount
 */
ExpenseDocument.prototype['vatAmount'] = undefined;
/**
 * จำนวนเงินรวมทั้งสิ้น (รวมภาษีมูลค่าเพิ่ม 7% แล้ว)
 * @member {Number} grandTotal
 */
ExpenseDocument.prototype['grandTotal'] = undefined;
/**
 * หมายเหตุเอกสาร
 * @member {String} remarks
 */
ExpenseDocument.prototype['remarks'] = undefined;
/**
 * โน๊ตภายในบริษัท
 * @member {String} internalNotes
 */
ExpenseDocument.prototype['internalNotes'] = undefined;
/**
 * ลายเซ็นอิเล็กทรอนิกส์และตรายาง
 * @member {Boolean} showSignatureOrStamp
 * @default true
 */
ExpenseDocument.prototype['showSignatureOrStamp'] = true;
/**
 * @member {String} expenseStructureType
 */
ExpenseDocument.prototype['expenseStructureType'] = undefined;
// Implement ExpenseSimpleDocumentAllOf interface:
/**
 * รายการสินค้าใช้งานสำหรับเอกสาร Simple Expense
 * @member {Array.<module:model/ExpenseSimpleProductItem>} items
 */
ExpenseSimpleDocumentAllOf.prototype['items'] = undefined;




export default ExpenseSimpleDocument;

