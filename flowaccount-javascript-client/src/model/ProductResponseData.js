/**
 * FlowAccount Open API
 * # Introduction  **Servers Production**    <site>Site:</site> https://www.flowaccount.com    <site>Api url:</site> https://openapi.flowaccount.com/v1    **Beta test**   <site>Site:</site> http://sandbox-new.flowaccount.com/    <site>Api url:</site> https://openapi.flowaccount.com/test    **PostMan Collection**   <site>Link:</site> https://www.getpostman.com/collections/01e7c68d7093e2092a64
 *
 * The version of the OpenAPI document: 2-oas3
 * Contact: developer_support@flowaccount.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ProductResponseData model module.
 * @module model/ProductResponseData
 * @version 2-oas3
 */
class ProductResponseData {
    /**
     * Constructs a new <code>ProductResponseData</code>.
     * @alias module:model/ProductResponseData
     */
    constructor() { 
        
        ProductResponseData.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ProductResponseData</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ProductResponseData} obj Optional instance to populate.
     * @return {module:model/ProductResponseData} The populated <code>ProductResponseData</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ProductResponseData();

            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], 'Number');
            }
            if (data.hasOwnProperty('code')) {
                obj['code'] = ApiClient.convertToType(data['code'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('sellDescription')) {
                obj['sellDescription'] = ApiClient.convertToType(data['sellDescription'], 'String');
            }
            if (data.hasOwnProperty('sellPrice')) {
                obj['sellPrice'] = ApiClient.convertToType(data['sellPrice'], 'Number');
            }
            if (data.hasOwnProperty('sellVatType')) {
                obj['sellVatType'] = ApiClient.convertToType(data['sellVatType'], 'Number');
            }
            if (data.hasOwnProperty('unitName')) {
                obj['unitName'] = ApiClient.convertToType(data['unitName'], 'String');
            }
            if (data.hasOwnProperty('categoryId')) {
                obj['categoryId'] = ApiClient.convertToType(data['categoryId'], 'Number');
            }
            if (data.hasOwnProperty('categoryName')) {
                obj['categoryName'] = ApiClient.convertToType(data['categoryName'], 'String');
            }
            if (data.hasOwnProperty('barcode')) {
                obj['barcode'] = ApiClient.convertToType(data['barcode'], 'String');
            }
            if (data.hasOwnProperty('buyDescription')) {
                obj['buyDescription'] = ApiClient.convertToType(data['buyDescription'], 'String');
            }
            if (data.hasOwnProperty('buyPrice')) {
                obj['buyPrice'] = ApiClient.convertToType(data['buyPrice'], 'Number');
            }
            if (data.hasOwnProperty('buyVatType')) {
                obj['buyVatType'] = ApiClient.convertToType(data['buyVatType'], 'Number');
            }
            if (data.hasOwnProperty('inventoryPublishedOn')) {
                obj['inventoryPublishedOn'] = ApiClient.convertToType(data['inventoryPublishedOn'], 'Date');
            }
            if (data.hasOwnProperty('inventoryQuantity')) {
                obj['inventoryQuantity'] = ApiClient.convertToType(data['inventoryQuantity'], 'Number');
            }
            if (data.hasOwnProperty('averageBuyPrice')) {
                obj['averageBuyPrice'] = ApiClient.convertToType(data['averageBuyPrice'], 'Number');
            }
            if (data.hasOwnProperty('averageSellPrice')) {
                obj['averageSellPrice'] = ApiClient.convertToType(data['averageSellPrice'], 'Number');
            }
            if (data.hasOwnProperty('remainingStock')) {
                obj['remainingStock'] = ApiClient.convertToType(data['remainingStock'], 'Number');
            }
            if (data.hasOwnProperty('totalValueInHand')) {
                obj['totalValueInHand'] = ApiClient.convertToType(data['totalValueInHand'], 'Number');
            }
        }
        return obj;
    }


}

/**
 * เลข id Product
 * @member {String} id
 */
ProductResponseData.prototype['id'] = undefined;

/**
 * ประเภทสินค้า: 1 = บริการ / 3 = ไม่นับสต๊อก / 5 = นับสต๊อก
 * @member {Number} type
 * @default 1
 */
ProductResponseData.prototype['type'] = 1;

/**
 * รหัสสินค้า <br> <ex>Example: P001</ex>
 * @member {String} code
 */
ProductResponseData.prototype['code'] = undefined;

/**
 * ชื่อสินค้า <br> <ex>Example: Product</ex>
 * @member {String} name
 */
ProductResponseData.prototype['name'] = undefined;

/**
 * รายละเอียดสินค้า ฝั่งขาย
 * @member {String} sellDescription
 */
ProductResponseData.prototype['sellDescription'] = undefined;

/**
 * ราคาขายสินค้า
 * @member {Number} sellPrice
 */
ProductResponseData.prototype['sellPrice'] = undefined;

/**
 * ภาษีขาย: <br> 1 = ราคาขายรวมภาษี <br> 3 = ราคาขายไม่รวมภาษี <br> 5 = ราคาขายภาษี 0% <br> 7 = ราคาขายสินค้าได้รับการยกเว้นภาษี
 * @member {Number} sellVatType
 * @default 3
 */
ProductResponseData.prototype['sellVatType'] = 3;

/**
 * หน่วยสินค้า
 * @member {String} unitName
 */
ProductResponseData.prototype['unitName'] = undefined;

/**
 * id หมวดสินค้า
 * @member {Number} categoryId
 */
ProductResponseData.prototype['categoryId'] = undefined;

/**
 * หมวดสินค้า
 * @member {String} categoryName
 */
ProductResponseData.prototype['categoryName'] = undefined;

/**
 * บาร์โค้ด
 * @member {String} barcode
 */
ProductResponseData.prototype['barcode'] = undefined;

/**
 * รายละเอียดสินค้า ฝั่งซื้อ
 * @member {String} buyDescription
 */
ProductResponseData.prototype['buyDescription'] = undefined;

/**
 * ราคาซื้อสินค้า
 * @member {Number} buyPrice
 */
ProductResponseData.prototype['buyPrice'] = undefined;

/**
 * ภาษีซื้อ: <br> 1 = ราคาซื้อรวมภาษี <br> 3 = ราคาซื้อไม่รวมภาษี <br> 5 = ราคาซื้อภาษี 0% <br> 7 = ราคาซื้อสินค้าได้รับการยกเว้นภาษี
 * @member {Number} buyVatType
 * @default 3
 */
ProductResponseData.prototype['buyVatType'] = 3;

/**
 * วันที่ตั้งต้นสินค้า รูปแบบ yyyy-MM-dd <br> <ex>Example: 2020-01-01</ex>
 * @member {Date} inventoryPublishedOn
 */
ProductResponseData.prototype['inventoryPublishedOn'] = undefined;

/**
 * จำนวนยอดตั้งต้นสินค้า
 * @member {Number} inventoryQuantity
 */
ProductResponseData.prototype['inventoryQuantity'] = undefined;

/**
 * ราคาซื้อเฉลี่ยสินค้า
 * @member {Number} averageBuyPrice
 */
ProductResponseData.prototype['averageBuyPrice'] = undefined;

/**
 * ราคาขายเฉลี่ยสินค้า
 * @member {Number} averageSellPrice
 */
ProductResponseData.prototype['averageSellPrice'] = undefined;

/**
 * จำนวนสินค้าคงเหลือในสต๊อก
 * @member {Number} remainingStock
 */
ProductResponseData.prototype['remainingStock'] = undefined;

/**
 * มูลค่าสินค้าคงเหลือในสต๊อก
 * @member {Number} totalValueInHand
 */
ProductResponseData.prototype['totalValueInHand'] = undefined;






export default ProductResponseData;

