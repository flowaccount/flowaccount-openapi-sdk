/**
 * FlowAccount Open API
 * # Introduction  **Servers Production**    <site>Site:</site> https://www.flowaccount.com    <site>Api url:</site> https://openapi.flowaccount.com/v1    **Beta test**   <site>Site:</site> http://sandbox-new.flowaccount.com/    <site>Api url:</site> https://openapi.flowaccount.com/test    **PostMan Collection**   <site>Link:</site> https://www.getpostman.com/collections/01e7c68d7093e2092a64
 *
 * The version of the OpenAPI document: 2-oas3
 * Contact: developer_support@flowaccount.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ExpenseSimpleProductItem model module.
 * @module model/ExpenseSimpleProductItem
 * @version 2-oas3
 */
class ExpenseSimpleProductItem {
    /**
     * Constructs a new <code>ExpenseSimpleProductItem</code>.
     * @alias module:model/ExpenseSimpleProductItem
     * @param systemCode {Number} เลขที่ system code หมวดหมู่ค่าใช้จ่าย (เลือกใช้ หมวดหมู่ค่าใช้จ่ายสำหรับธุรกิจ)
     * @param categoryId {Number} เลขที่ id หมวดหมู่ค่าใช้จ่าย (เลือกใช้ หมวดหมู่ค่าใช้จ่ายสำหรับธุรกิจ) <br> <ex>Example: 40238</ex>
     * @param description {String} รายละเอียดค่าใช้จ่าย
     * @param nameLocal {String} ชื่อหมวดหมู่ค่าใช้จ่าย <br> <ex>Example: การตลาดและโฆษณา</ex>
     * @param nameForeign {String} ชื่อหมวดหมู่ค่าใช้จ่าย (ภาษาอังกฤษ) <br> <ex>Example: Marketing & Advertising</ex>
     * @param creditCategory {Number} เลขหมวดหมู่ ฝั่งเครดิต ของ หมวดหมู่ค่าใช้จ่าย <br> <ex>Example: 2</ex>
     * @param creditId {Number} เลข id หมวดหมู่ค่าใช้จ่ายทางบัญชี ฝั่งเครดิิต <br> <ex>Example: 1081994</ex>
     * @param creditCode {String} เลขที่หมวดหมู่ค่าใช้จ่ายทางบัญชี ฝั่งเครดิต <br> <ex>Example: 21399</ex>
     * @param creditNameLocal {String} ชื่อหมวดหมู่ค่าใช้จ่ายทางบัญชี ฝั่งเครดิต <br> <ex>Example: 21399 / เจ้าหนี้อื่นๆ</ex>
     * @param creditNameForeign {String} ชื่อหมวดหมู่ค่าใช้จ่ายทางบัญชี ฝั่งเครดิต (ภาษาอังกฤษ) <br> <ex>Example: 21399 / Other Payables</ex>
     * @param debitCategory {Number} เลขหมวดหมู่ ฝั่งเดบิต ของ หมวดหมู่ค่าใช้จ่าย
     * @param debitId {Number} เลข id หมวดหมู่ค่าใช้จ่ายทางบัญชี ฝั่งเดบิต <br> <ex>Example: 1082099</ex>
     * @param debitCode {String} เลขที่หมวดหมู่ค่าใช้จ่ายทางบัญชี ฝั่งเดบิต <br> <ex>Example: 53029</ex>
     * @param debitNameLocal {String} ชื่อหมวดหมู่ค่าใช้จ่ายทางบัญชี ฝั่งเดบิต <br> <ex>Example: 53029 / ค่าใช้จ่ายด้านโฆษณาและการตลาดอื่นๆ</ex>
     * @param debitNameForeign {String} ชื่อหมวดหมู่ค่าใช้จ่ายทางบัญชี ฝั่งเดบิต (ภาษาอังกฤษ) <br> <ex>Example: 53029 / Other advertising and marketing expenses</ex>
     * @param quantity {Number} จำนวนรายการค่าใช้จ่าย
     * @param pricePerUnit {Number} ราคาต่อหน่วยค่าใช้จ่าย
     * @param total {Number} ราคารวมค่าใช้จ่าย
     */
    constructor(systemCode, categoryId, description, nameLocal, nameForeign, creditCategory, creditId, creditCode, creditNameLocal, creditNameForeign, debitCategory, debitId, debitCode, debitNameLocal, debitNameForeign, quantity, pricePerUnit, total) { 
        
        ExpenseSimpleProductItem.initialize(this, systemCode, categoryId, description, nameLocal, nameForeign, creditCategory, creditId, creditCode, creditNameLocal, creditNameForeign, debitCategory, debitId, debitCode, debitNameLocal, debitNameForeign, quantity, pricePerUnit, total);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, systemCode, categoryId, description, nameLocal, nameForeign, creditCategory, creditId, creditCode, creditNameLocal, creditNameForeign, debitCategory, debitId, debitCode, debitNameLocal, debitNameForeign, quantity, pricePerUnit, total) { 
        obj['systemCode'] = systemCode;
        obj['categoryId'] = categoryId;
        obj['description'] = description;
        obj['nameLocal'] = nameLocal;
        obj['nameForeign'] = nameForeign;
        obj['creditCategory'] = creditCategory;
        obj['creditId'] = creditId;
        obj['creditCode'] = creditCode;
        obj['creditNameLocal'] = creditNameLocal;
        obj['creditNameForeign'] = creditNameForeign;
        obj['debitCategory'] = debitCategory;
        obj['debitId'] = debitId;
        obj['debitCode'] = debitCode;
        obj['debitNameLocal'] = debitNameLocal;
        obj['debitNameForeign'] = debitNameForeign;
        obj['quantity'] = quantity;
        obj['pricePerUnit'] = pricePerUnit;
        obj['total'] = total;
    }

    /**
     * Constructs a <code>ExpenseSimpleProductItem</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ExpenseSimpleProductItem} obj Optional instance to populate.
     * @return {module:model/ExpenseSimpleProductItem} The populated <code>ExpenseSimpleProductItem</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ExpenseSimpleProductItem();

            if (data.hasOwnProperty('systemCode')) {
                obj['systemCode'] = ApiClient.convertToType(data['systemCode'], 'Number');
            }
            if (data.hasOwnProperty('categoryId')) {
                obj['categoryId'] = ApiClient.convertToType(data['categoryId'], 'Number');
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('nameLocal')) {
                obj['nameLocal'] = ApiClient.convertToType(data['nameLocal'], 'String');
            }
            if (data.hasOwnProperty('nameForeign')) {
                obj['nameForeign'] = ApiClient.convertToType(data['nameForeign'], 'String');
            }
            if (data.hasOwnProperty('creditCategory')) {
                obj['creditCategory'] = ApiClient.convertToType(data['creditCategory'], 'Number');
            }
            if (data.hasOwnProperty('creditId')) {
                obj['creditId'] = ApiClient.convertToType(data['creditId'], 'Number');
            }
            if (data.hasOwnProperty('creditCode')) {
                obj['creditCode'] = ApiClient.convertToType(data['creditCode'], 'String');
            }
            if (data.hasOwnProperty('creditNameLocal')) {
                obj['creditNameLocal'] = ApiClient.convertToType(data['creditNameLocal'], 'String');
            }
            if (data.hasOwnProperty('creditNameForeign')) {
                obj['creditNameForeign'] = ApiClient.convertToType(data['creditNameForeign'], 'String');
            }
            if (data.hasOwnProperty('debitCategory')) {
                obj['debitCategory'] = ApiClient.convertToType(data['debitCategory'], 'Number');
            }
            if (data.hasOwnProperty('debitId')) {
                obj['debitId'] = ApiClient.convertToType(data['debitId'], 'Number');
            }
            if (data.hasOwnProperty('debitCode')) {
                obj['debitCode'] = ApiClient.convertToType(data['debitCode'], 'String');
            }
            if (data.hasOwnProperty('debitNameLocal')) {
                obj['debitNameLocal'] = ApiClient.convertToType(data['debitNameLocal'], 'String');
            }
            if (data.hasOwnProperty('debitNameForeign')) {
                obj['debitNameForeign'] = ApiClient.convertToType(data['debitNameForeign'], 'String');
            }
            if (data.hasOwnProperty('quantity')) {
                obj['quantity'] = ApiClient.convertToType(data['quantity'], 'Number');
            }
            if (data.hasOwnProperty('unitName')) {
                obj['unitName'] = ApiClient.convertToType(data['unitName'], 'String');
            }
            if (data.hasOwnProperty('pricePerUnit')) {
                obj['pricePerUnit'] = ApiClient.convertToType(data['pricePerUnit'], 'Number');
            }
            if (data.hasOwnProperty('total')) {
                obj['total'] = ApiClient.convertToType(data['total'], 'Number');
            }
        }
        return obj;
    }


}

/**
 * เลขที่ system code หมวดหมู่ค่าใช้จ่าย (เลือกใช้ หมวดหมู่ค่าใช้จ่ายสำหรับธุรกิจ)
 * @member {Number} systemCode
 */
ExpenseSimpleProductItem.prototype['systemCode'] = undefined;

/**
 * เลขที่ id หมวดหมู่ค่าใช้จ่าย (เลือกใช้ หมวดหมู่ค่าใช้จ่ายสำหรับธุรกิจ) <br> <ex>Example: 40238</ex>
 * @member {Number} categoryId
 */
ExpenseSimpleProductItem.prototype['categoryId'] = undefined;

/**
 * รายละเอียดค่าใช้จ่าย
 * @member {String} description
 */
ExpenseSimpleProductItem.prototype['description'] = undefined;

/**
 * ชื่อหมวดหมู่ค่าใช้จ่าย <br> <ex>Example: การตลาดและโฆษณา</ex>
 * @member {String} nameLocal
 */
ExpenseSimpleProductItem.prototype['nameLocal'] = undefined;

/**
 * ชื่อหมวดหมู่ค่าใช้จ่าย (ภาษาอังกฤษ) <br> <ex>Example: Marketing & Advertising</ex>
 * @member {String} nameForeign
 */
ExpenseSimpleProductItem.prototype['nameForeign'] = undefined;

/**
 * เลขหมวดหมู่ ฝั่งเครดิต ของ หมวดหมู่ค่าใช้จ่าย <br> <ex>Example: 2</ex>
 * @member {Number} creditCategory
 */
ExpenseSimpleProductItem.prototype['creditCategory'] = undefined;

/**
 * เลข id หมวดหมู่ค่าใช้จ่ายทางบัญชี ฝั่งเครดิิต <br> <ex>Example: 1081994</ex>
 * @member {Number} creditId
 */
ExpenseSimpleProductItem.prototype['creditId'] = undefined;

/**
 * เลขที่หมวดหมู่ค่าใช้จ่ายทางบัญชี ฝั่งเครดิต <br> <ex>Example: 21399</ex>
 * @member {String} creditCode
 */
ExpenseSimpleProductItem.prototype['creditCode'] = undefined;

/**
 * ชื่อหมวดหมู่ค่าใช้จ่ายทางบัญชี ฝั่งเครดิต <br> <ex>Example: 21399 / เจ้าหนี้อื่นๆ</ex>
 * @member {String} creditNameLocal
 */
ExpenseSimpleProductItem.prototype['creditNameLocal'] = undefined;

/**
 * ชื่อหมวดหมู่ค่าใช้จ่ายทางบัญชี ฝั่งเครดิต (ภาษาอังกฤษ) <br> <ex>Example: 21399 / Other Payables</ex>
 * @member {String} creditNameForeign
 */
ExpenseSimpleProductItem.prototype['creditNameForeign'] = undefined;

/**
 * เลขหมวดหมู่ ฝั่งเดบิต ของ หมวดหมู่ค่าใช้จ่าย
 * @member {Number} debitCategory
 */
ExpenseSimpleProductItem.prototype['debitCategory'] = undefined;

/**
 * เลข id หมวดหมู่ค่าใช้จ่ายทางบัญชี ฝั่งเดบิต <br> <ex>Example: 1082099</ex>
 * @member {Number} debitId
 */
ExpenseSimpleProductItem.prototype['debitId'] = undefined;

/**
 * เลขที่หมวดหมู่ค่าใช้จ่ายทางบัญชี ฝั่งเดบิต <br> <ex>Example: 53029</ex>
 * @member {String} debitCode
 */
ExpenseSimpleProductItem.prototype['debitCode'] = undefined;

/**
 * ชื่อหมวดหมู่ค่าใช้จ่ายทางบัญชี ฝั่งเดบิต <br> <ex>Example: 53029 / ค่าใช้จ่ายด้านโฆษณาและการตลาดอื่นๆ</ex>
 * @member {String} debitNameLocal
 */
ExpenseSimpleProductItem.prototype['debitNameLocal'] = undefined;

/**
 * ชื่อหมวดหมู่ค่าใช้จ่ายทางบัญชี ฝั่งเดบิต (ภาษาอังกฤษ) <br> <ex>Example: 53029 / Other advertising and marketing expenses</ex>
 * @member {String} debitNameForeign
 */
ExpenseSimpleProductItem.prototype['debitNameForeign'] = undefined;

/**
 * จำนวนรายการค่าใช้จ่าย
 * @member {Number} quantity
 */
ExpenseSimpleProductItem.prototype['quantity'] = undefined;

/**
 * หน่วยรายการค่าใช้จ่าย
 * @member {String} unitName
 */
ExpenseSimpleProductItem.prototype['unitName'] = undefined;

/**
 * ราคาต่อหน่วยค่าใช้จ่าย
 * @member {Number} pricePerUnit
 */
ExpenseSimpleProductItem.prototype['pricePerUnit'] = undefined;

/**
 * ราคารวมค่าใช้จ่าย
 * @member {Number} total
 */
ExpenseSimpleProductItem.prototype['total'] = undefined;






export default ExpenseSimpleProductItem;

