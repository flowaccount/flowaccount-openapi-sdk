//
// BusinessInfomationAPI.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation



open class BusinessInfomationAPI {
    /**
     Get business infomation
     
     - parameter authorization: (header)  
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func companyInfoGet(authorization: String, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: CompanyInfoResponse?,_ error: Error?) -> Void)) {
        companyInfoGetWithRequestBuilder(authorization: authorization).execute(apiResponseQueue) { result -> Void in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Get business infomation
     - GET /company/info
     - เรียกดูข้อมูลธรุกิจ
     - parameter authorization: (header)  
     - returns: RequestBuilder<CompanyInfoResponse> 
     */
    open class func companyInfoGetWithRequestBuilder(authorization: String) -> RequestBuilder<CompanyInfoResponse> {
        let path = "/company/info"
        let URLString = OpenAPIClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        
        let url = URLComponents(string: URLString)
        let nillableHeaders: [String: Any?] = [
            "Authorization": authorization.encodeToJSON()
        ]
        let headerParameters = APIHelper.rejectNilHeaders(nillableHeaders)

        let requestBuilder: RequestBuilder<CompanyInfoResponse>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false, headers: headerParameters)
    }

    /**
     Edit business infomation
     
     - parameter authorization: (header)  
     - parameter companyInfo: (body)  
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func companyInfoPut(authorization: String, companyInfo: CompanyInfo, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: CompanyInfoResponse?,_ error: Error?) -> Void)) {
        companyInfoPutWithRequestBuilder(authorization: authorization, companyInfo: companyInfo).execute(apiResponseQueue) { result -> Void in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Edit business infomation
     - PUT /company/info
     - แก้ไขข้อมูลธรุกิจ
     - parameter authorization: (header)  
     - parameter companyInfo: (body)  
     - returns: RequestBuilder<CompanyInfoResponse> 
     */
    open class func companyInfoPutWithRequestBuilder(authorization: String, companyInfo: CompanyInfo) -> RequestBuilder<CompanyInfoResponse> {
        let path = "/company/info"
        let URLString = OpenAPIClientAPI.basePath + path
        let parameters = JSONEncodingHelper.encodingParameters(forEncodableObject: companyInfo)

        let url = URLComponents(string: URLString)
        let nillableHeaders: [String: Any?] = [
            "Authorization": authorization.encodeToJSON()
        ]
        let headerParameters = APIHelper.rejectNilHeaders(nillableHeaders)

        let requestBuilder: RequestBuilder<CompanyInfoResponse>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "PUT", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true, headers: headerParameters)
    }

}
