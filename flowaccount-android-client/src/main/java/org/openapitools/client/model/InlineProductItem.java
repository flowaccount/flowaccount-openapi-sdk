/**
 * FlowAccount Open API
 * # Introduction  **Servers Production**    <site>Site:</site> https://www.flowaccount.com    <site>Api url:</site> https://openapi.flowaccount.com/v1    **Beta test**   <site>Site:</site> http://sandbox-new.flowaccount.com/    <site>Api url:</site> https://openapi.flowaccount.com/test    **PostMan Collection**   <site>Link:</site> https://www.getpostman.com/collections/01e7c68d7093e2092a64
 *
 * The version of the OpenAPI document: 2-oas3
 * Contact: developer_support@flowaccount.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.client.model;

import java.math.BigDecimal;
import org.openapitools.client.model.InlineProductItemAllOf;
import org.openapitools.client.model.ProductItem;
import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

@ApiModel(description = "")
public class InlineProductItem {
  
  @SerializedName("type")
  private Integer type = 1;
  @SerializedName("name")
  private String name = null;
  @SerializedName("description")
  private String description = null;
  @SerializedName("quantity")
  private BigDecimal quantity = null;
  @SerializedName("unitName")
  private String unitName = null;
  @SerializedName("pricePerUnit")
  private BigDecimal pricePerUnit = null;
  @SerializedName("total")
  private BigDecimal total = null;
  @SerializedName("sellChartOfAccountCode")
  private String sellChartOfAccountCode = null;
  @SerializedName("buyChartOfAccountCode")
  private String buyChartOfAccountCode = null;
  @SerializedName("discountAmount")
  private BigDecimal discountAmount = 0;
  @SerializedName("vatRate")
  private Integer vatRate = 7;

  /**
   * ประเภทสินค้า <br> 1 = บริการ (service) <br> 3 = สินค้าไม่นับสต๊อก (non inventory) <br> 5 = สินค้านับสต๊อก (inventory)
   **/
  @ApiModelProperty(value = "ประเภทสินค้า <br> 1 = บริการ (service) <br> 3 = สินค้าไม่นับสต๊อก (non inventory) <br> 5 = สินค้านับสต๊อก (inventory)")
  public Integer getType() {
    return type;
  }
  public void setType(Integer type) {
    this.type = type;
  }

  /**
   * ชื่อสินค้า
   **/
  @ApiModelProperty(required = true, value = "ชื่อสินค้า")
  public String getName() {
    return name;
  }
  public void setName(String name) {
    this.name = name;
  }

  /**
   * รายละเอียดสินค้า
   **/
  @ApiModelProperty(value = "รายละเอียดสินค้า")
  public String getDescription() {
    return description;
  }
  public void setDescription(String description) {
    this.description = description;
  }

  /**
   * จำนวนสินค้า
   **/
  @ApiModelProperty(required = true, value = "จำนวนสินค้า")
  public BigDecimal getQuantity() {
    return quantity;
  }
  public void setQuantity(BigDecimal quantity) {
    this.quantity = quantity;
  }

  /**
   * หน่วยสินค้า
   **/
  @ApiModelProperty(value = "หน่วยสินค้า")
  public String getUnitName() {
    return unitName;
  }
  public void setUnitName(String unitName) {
    this.unitName = unitName;
  }

  /**
   * ราคาสินค้าต่อหน่วย
   **/
  @ApiModelProperty(required = true, value = "ราคาสินค้าต่อหน่วย")
  public BigDecimal getPricePerUnit() {
    return pricePerUnit;
  }
  public void setPricePerUnit(BigDecimal pricePerUnit) {
    this.pricePerUnit = pricePerUnit;
  }

  /**
   * ราคารวมสินค้า
   **/
  @ApiModelProperty(required = true, value = "ราคารวมสินค้า")
  public BigDecimal getTotal() {
    return total;
  }
  public void setTotal(BigDecimal total) {
    this.total = total;
  }

  /**
   * เลือกลงบันทึกบัญชีรายได้ สำหรับเอกสารฝั่งขาย <br> <ex>Example: 41111</ex>
   **/
  @ApiModelProperty(value = "เลือกลงบันทึกบัญชีรายได้ สำหรับเอกสารฝั่งขาย <br> <ex>Example: 41111</ex>")
  public String getSellChartOfAccountCode() {
    return sellChartOfAccountCode;
  }
  public void setSellChartOfAccountCode(String sellChartOfAccountCode) {
    this.sellChartOfAccountCode = sellChartOfAccountCode;
  }

  /**
   * เลือกลงบันทึกบัญชีค่าใช้จ่าย สำหรับเอกสารฝั่งซื้อ <br> <ex>Example: 51111.02</ex>
   **/
  @ApiModelProperty(value = "เลือกลงบันทึกบัญชีค่าใช้จ่าย สำหรับเอกสารฝั่งซื้อ <br> <ex>Example: 51111.02</ex>")
  public String getBuyChartOfAccountCode() {
    return buyChartOfAccountCode;
  }
  public void setBuyChartOfAccountCode(String buyChartOfAccountCode) {
    this.buyChartOfAccountCode = buyChartOfAccountCode;
  }

  /**
   * จำนวนส่วนลดสินค้า
   **/
  @ApiModelProperty(value = "จำนวนส่วนลดสินค้า")
  public BigDecimal getDiscountAmount() {
    return discountAmount;
  }
  public void setDiscountAmount(BigDecimal discountAmount) {
    this.discountAmount = discountAmount;
  }

  /**
   * รูปแบบภาษี <br> 7 = ภาษี 7% <br> 0 = ภาษี 0% <br> -1 = ยกเว้นภาษี
   **/
  @ApiModelProperty(value = "รูปแบบภาษี <br> 7 = ภาษี 7% <br> 0 = ภาษี 0% <br> -1 = ยกเว้นภาษี")
  public Integer getVatRate() {
    return vatRate;
  }
  public void setVatRate(Integer vatRate) {
    this.vatRate = vatRate;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InlineProductItem inlineProductItem = (InlineProductItem) o;
    return (this.type == null ? inlineProductItem.type == null : this.type.equals(inlineProductItem.type)) &&
        (this.name == null ? inlineProductItem.name == null : this.name.equals(inlineProductItem.name)) &&
        (this.description == null ? inlineProductItem.description == null : this.description.equals(inlineProductItem.description)) &&
        (this.quantity == null ? inlineProductItem.quantity == null : this.quantity.equals(inlineProductItem.quantity)) &&
        (this.unitName == null ? inlineProductItem.unitName == null : this.unitName.equals(inlineProductItem.unitName)) &&
        (this.pricePerUnit == null ? inlineProductItem.pricePerUnit == null : this.pricePerUnit.equals(inlineProductItem.pricePerUnit)) &&
        (this.total == null ? inlineProductItem.total == null : this.total.equals(inlineProductItem.total)) &&
        (this.sellChartOfAccountCode == null ? inlineProductItem.sellChartOfAccountCode == null : this.sellChartOfAccountCode.equals(inlineProductItem.sellChartOfAccountCode)) &&
        (this.buyChartOfAccountCode == null ? inlineProductItem.buyChartOfAccountCode == null : this.buyChartOfAccountCode.equals(inlineProductItem.buyChartOfAccountCode)) &&
        (this.discountAmount == null ? inlineProductItem.discountAmount == null : this.discountAmount.equals(inlineProductItem.discountAmount)) &&
        (this.vatRate == null ? inlineProductItem.vatRate == null : this.vatRate.equals(inlineProductItem.vatRate));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.type == null ? 0: this.type.hashCode());
    result = 31 * result + (this.name == null ? 0: this.name.hashCode());
    result = 31 * result + (this.description == null ? 0: this.description.hashCode());
    result = 31 * result + (this.quantity == null ? 0: this.quantity.hashCode());
    result = 31 * result + (this.unitName == null ? 0: this.unitName.hashCode());
    result = 31 * result + (this.pricePerUnit == null ? 0: this.pricePerUnit.hashCode());
    result = 31 * result + (this.total == null ? 0: this.total.hashCode());
    result = 31 * result + (this.sellChartOfAccountCode == null ? 0: this.sellChartOfAccountCode.hashCode());
    result = 31 * result + (this.buyChartOfAccountCode == null ? 0: this.buyChartOfAccountCode.hashCode());
    result = 31 * result + (this.discountAmount == null ? 0: this.discountAmount.hashCode());
    result = 31 * result + (this.vatRate == null ? 0: this.vatRate.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class InlineProductItem {\n");
    
    sb.append("  type: ").append(type).append("\n");
    sb.append("  name: ").append(name).append("\n");
    sb.append("  description: ").append(description).append("\n");
    sb.append("  quantity: ").append(quantity).append("\n");
    sb.append("  unitName: ").append(unitName).append("\n");
    sb.append("  pricePerUnit: ").append(pricePerUnit).append("\n");
    sb.append("  total: ").append(total).append("\n");
    sb.append("  sellChartOfAccountCode: ").append(sellChartOfAccountCode).append("\n");
    sb.append("  buyChartOfAccountCode: ").append(buyChartOfAccountCode).append("\n");
    sb.append("  discountAmount: ").append(discountAmount).append("\n");
    sb.append("  vatRate: ").append(vatRate).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
