/**
 * FlowAccount Open API
 * # Introduction  **Servers Production**    <site>Site:</site> https://www.flowaccount.com    <site>Api url:</site> https://openapi.flowaccount.com/v1    **Beta test**   <site>Site:</site> http://sandbox-new.flowaccount.com/    <site>Api url:</site> https://openapi.flowaccount.com/test    **PostMan Collection**   <site>Link:</site> https://www.getpostman.com/collections/01e7c68d7093e2092a64
 *
 * The version of the OpenAPI document: 2-oas3
 * Contact: developer_support@flowaccount.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.client.model;

import java.math.BigDecimal;
import java.util.*;
import java.util.Date;
import org.openapitools.client.model.WithholidingTaxItem;
import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

@ApiModel(description = "")
public class WithholidingTaxDocument {
  
  @SerializedName("contactCode")
  private String contactCode = null;
  @SerializedName("contactName")
  private String contactName = null;
  @SerializedName("contactAddress")
  private String contactAddress = null;
  @SerializedName("contactTaxId")
  private String contactTaxId = null;
  @SerializedName("contactBranch")
  private String contactBranch = null;
  @SerializedName("contactPerson")
  private String contactPerson = null;
  @SerializedName("contactEmail")
  private String contactEmail = null;
  @SerializedName("contactNumber")
  private String contactNumber = null;
  @SerializedName("contactZipCode")
  private String contactZipCode = null;
  @SerializedName("contactGroup")
  private Integer contactGroup = 1;
  @SerializedName("publishedOn")
  private Date publishedOn = null;
  @SerializedName("entity")
  private Integer entity = 1;
  @SerializedName("textOther")
  private String textOther = null;
  @SerializedName("withholdingTaxItems")
  private List<WithholidingTaxItem> withholdingTaxItems = null;
  @SerializedName("total")
  private BigDecimal total = null;
  @SerializedName("totalTaxWithheld")
  private BigDecimal totalTaxWithheld = null;
  @SerializedName("taxPayment")
  private Integer taxPayment = 1;
  @SerializedName("taxPaymentOthers")
  private String taxPaymentOthers = null;
  @SerializedName("providentFundNumber")
  private String providentFundNumber = null;
  @SerializedName("providentFundAmount")
  private String providentFundAmount = null;
  @SerializedName("socialSecurityAmount")
  private String socialSecurityAmount = null;
  @SerializedName("remarks")
  private String remarks = null;
  @SerializedName("internalNotes")
  private String internalNotes = null;
  @SerializedName("showSignatureOrStamp")
  private Boolean showSignatureOrStamp = true;

  /**
   * รหัส ผู้จำหน่าย หรือ ผู้จำหน่าย/ลูกค้า
   **/
  @ApiModelProperty(value = "รหัส ผู้จำหน่าย หรือ ผู้จำหน่าย/ลูกค้า")
  public String getContactCode() {
    return contactCode;
  }
  public void setContactCode(String contactCode) {
    this.contactCode = contactCode;
  }

  /**
   * ชื่อ ผู้จำหน่าย หรือ ผู้จำหน่าย/ลูกค้า
   **/
  @ApiModelProperty(required = true, value = "ชื่อ ผู้จำหน่าย หรือ ผู้จำหน่าย/ลูกค้า")
  public String getContactName() {
    return contactName;
  }
  public void setContactName(String contactName) {
    this.contactName = contactName;
  }

  /**
   * ที่อยู่ ผู้จำหน่าย หรือ ผู้จำหน่าย/ลูกค้า
   **/
  @ApiModelProperty(value = "ที่อยู่ ผู้จำหน่าย หรือ ผู้จำหน่าย/ลูกค้า")
  public String getContactAddress() {
    return contactAddress;
  }
  public void setContactAddress(String contactAddress) {
    this.contactAddress = contactAddress;
  }

  /**
   * เลขประจำตัวผู้เสียภาษี ผู้จำหน่าย หรือ ผู้จำหน่าย/ลูกค้า <br> (ถ้ามีจำเป็นต้องครบ 13 หลัก) <br> <ex>Example: 1234567890123 </ex>
   **/
  @ApiModelProperty(value = "เลขประจำตัวผู้เสียภาษี ผู้จำหน่าย หรือ ผู้จำหน่าย/ลูกค้า <br> (ถ้ามีจำเป็นต้องครบ 13 หลัก) <br> <ex>Example: 1234567890123 </ex>")
  public String getContactTaxId() {
    return contactTaxId;
  }
  public void setContactTaxId(String contactTaxId) {
    this.contactTaxId = contactTaxId;
  }

  /**
   * สำนักงาน/สาขา
   **/
  @ApiModelProperty(value = "สำนักงาน/สาขา")
  public String getContactBranch() {
    return contactBranch;
  }
  public void setContactBranch(String contactBranch) {
    this.contactBranch = contactBranch;
  }

  /**
   * ชื่อผู้ติดต่อ
   **/
  @ApiModelProperty(value = "ชื่อผู้ติดต่อ")
  public String getContactPerson() {
    return contactPerson;
  }
  public void setContactPerson(String contactPerson) {
    this.contactPerson = contactPerson;
  }

  /**
   * อีเมลผู้ติดต่อ <br> <ex>Example: contact@email.com</ex>
   **/
  @ApiModelProperty(value = "อีเมลผู้ติดต่อ <br> <ex>Example: contact@email.com</ex>")
  public String getContactEmail() {
    return contactEmail;
  }
  public void setContactEmail(String contactEmail) {
    this.contactEmail = contactEmail;
  }

  /**
   * เบอร์มือถือผู้ติดต่อ <br> <ex>Example: 099-999-9999</ex>
   **/
  @ApiModelProperty(value = "เบอร์มือถือผู้ติดต่อ <br> <ex>Example: 099-999-9999</ex>")
  public String getContactNumber() {
    return contactNumber;
  }
  public void setContactNumber(String contactNumber) {
    this.contactNumber = contactNumber;
  }

  /**
   * รหัสไปรษณีย์ติดต่อ
   **/
  @ApiModelProperty(value = "รหัสไปรษณีย์ติดต่อ")
  public String getContactZipCode() {
    return contactZipCode;
  }
  public void setContactZipCode(String contactZipCode) {
    this.contactZipCode = contactZipCode;
  }

  /**
   * ประผู้ติดต่อ <br> 1 = บุคคลธรรมดา <br> 3 = นิติบุคคล
   **/
  @ApiModelProperty(value = "ประผู้ติดต่อ <br> 1 = บุคคลธรรมดา <br> 3 = นิติบุคคล")
  public Integer getContactGroup() {
    return contactGroup;
  }
  public void setContactGroup(Integer contactGroup) {
    this.contactGroup = contactGroup;
  }

  /**
   * วันที่เอกสาร รูปแบบ yyyy-MM-dd <br> <ex>Example: 2020-01-01</ex>
   **/
  @ApiModelProperty(required = true, value = "วันที่เอกสาร รูปแบบ yyyy-MM-dd <br> <ex>Example: 2020-01-01</ex>")
  public Date getPublishedOn() {
    return publishedOn;
  }
  public void setPublishedOn(Date publishedOn) {
    this.publishedOn = publishedOn;
  }

  /**
   * แบบฟอร์มเอกสารหัก ณ ที่จ่าย <br> ภงด 3 = 1 <br> ภงด 53 = 3 <br> ภงด 1ก = 1 <br> ภงด 1ก (พิเศษ) = 7 <br> ภงด 2 = 9 <br> ภงด 2ก = 11 <br> ภงด 3ก = 13
   **/
  @ApiModelProperty(required = true, value = "แบบฟอร์มเอกสารหัก ณ ที่จ่าย <br> ภงด 3 = 1 <br> ภงด 53 = 3 <br> ภงด 1ก = 1 <br> ภงด 1ก (พิเศษ) = 7 <br> ภงด 2 = 9 <br> ภงด 2ก = 11 <br> ภงด 3ก = 13")
  public Integer getEntity() {
    return entity;
  }
  public void setEntity(Integer entity) {
    this.entity = entity;
  }

  /**
   * ระบุปีของเอกสาร เช่น 2020 (สำหรับแบบฟอร์มเอกสาร ภงด 1ก หรือ ภงด 1ก (พิเศษ) <br>Example: 2020</ex>
   **/
  @ApiModelProperty(value = "ระบุปีของเอกสาร เช่น 2020 (สำหรับแบบฟอร์มเอกสาร ภงด 1ก หรือ ภงด 1ก (พิเศษ) <br>Example: 2020</ex>")
  public String getTextOther() {
    return textOther;
  }
  public void setTextOther(String textOther) {
    this.textOther = textOther;
  }

  /**
   * รายการหัก ของเอกสารหัก ณ ที่จ่าย
   **/
  @ApiModelProperty(required = true, value = "รายการหัก ของเอกสารหัก ณ ที่จ่าย")
  public List<WithholidingTaxItem> getWithholdingTaxItems() {
    return withholdingTaxItems;
  }
  public void setWithholdingTaxItems(List<WithholidingTaxItem> withholdingTaxItems) {
    this.withholdingTaxItems = withholdingTaxItems;
  }

  /**
   * จำนวนเงิน (ไม่รวมภาษี)
   **/
  @ApiModelProperty(required = true, value = "จำนวนเงิน (ไม่รวมภาษี)")
  public BigDecimal getTotal() {
    return total;
  }
  public void setTotal(BigDecimal total) {
    this.total = total;
  }

  /**
   * ภาษีที่หัก
   **/
  @ApiModelProperty(required = true, value = "ภาษีที่หัก")
  public BigDecimal getTotalTaxWithheld() {
    return totalTaxWithheld;
  }
  public void setTotalTaxWithheld(BigDecimal totalTaxWithheld) {
    this.totalTaxWithheld = totalTaxWithheld;
  }

  /**
   * ผู้จ่ายเงิน <br> 1 = ภาษีหัก ณ ที่จ่าย <br> 3 = ออกภาษีให้ตลอดไป <br> 5 = ออกภาษีให้ครั้งเดียว <br> 7 = อื่น ๆ
   **/
  @ApiModelProperty(value = "ผู้จ่ายเงิน <br> 1 = ภาษีหัก ณ ที่จ่าย <br> 3 = ออกภาษีให้ตลอดไป <br> 5 = ออกภาษีให้ครั้งเดียว <br> 7 = อื่น ๆ")
  public Integer getTaxPayment() {
    return taxPayment;
  }
  public void setTaxPayment(Integer taxPayment) {
    this.taxPayment = taxPayment;
  }

  /**
   * ข้อความ สำหรับผู้จ่ายเงิน อื่นๆ 
   **/
  @ApiModelProperty(value = "ข้อความ สำหรับผู้จ่ายเงิน อื่นๆ ")
  public String getTaxPaymentOthers() {
    return taxPaymentOthers;
  }
  public void setTaxPaymentOthers(String taxPaymentOthers) {
    this.taxPaymentOthers = taxPaymentOthers;
  }

  /**
   * ใบอนุญาตเลขที่
   **/
  @ApiModelProperty(value = "ใบอนุญาตเลขที่")
  public String getProvidentFundNumber() {
    return providentFundNumber;
  }
  public void setProvidentFundNumber(String providentFundNumber) {
    this.providentFundNumber = providentFundNumber;
  }

  /**
   * จำนวนเงินที่ต้องจ่ายเข้า กองทุนสำรองเลี้ยงชีพ
   **/
  @ApiModelProperty(value = "จำนวนเงินที่ต้องจ่ายเข้า กองทุนสำรองเลี้ยงชีพ")
  public String getProvidentFundAmount() {
    return providentFundAmount;
  }
  public void setProvidentFundAmount(String providentFundAmount) {
    this.providentFundAmount = providentFundAmount;
  }

  /**
   * จำนวนเงินที่ต้องจ่ายเข้า กองทุนประกันสังคม
   **/
  @ApiModelProperty(value = "จำนวนเงินที่ต้องจ่ายเข้า กองทุนประกันสังคม")
  public String getSocialSecurityAmount() {
    return socialSecurityAmount;
  }
  public void setSocialSecurityAmount(String socialSecurityAmount) {
    this.socialSecurityAmount = socialSecurityAmount;
  }

  /**
   * หมายเหตุเอกสาร
   **/
  @ApiModelProperty(value = "หมายเหตุเอกสาร")
  public String getRemarks() {
    return remarks;
  }
  public void setRemarks(String remarks) {
    this.remarks = remarks;
  }

  /**
   * โน๊ตภายในบริษัท
   **/
  @ApiModelProperty(value = "โน๊ตภายในบริษัท")
  public String getInternalNotes() {
    return internalNotes;
  }
  public void setInternalNotes(String internalNotes) {
    this.internalNotes = internalNotes;
  }

  /**
   * ลายเซ็นอิเล็กทรอนิกส์และตรายาง
   **/
  @ApiModelProperty(value = "ลายเซ็นอิเล็กทรอนิกส์และตรายาง")
  public Boolean getShowSignatureOrStamp() {
    return showSignatureOrStamp;
  }
  public void setShowSignatureOrStamp(Boolean showSignatureOrStamp) {
    this.showSignatureOrStamp = showSignatureOrStamp;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    WithholidingTaxDocument withholidingTaxDocument = (WithholidingTaxDocument) o;
    return (this.contactCode == null ? withholidingTaxDocument.contactCode == null : this.contactCode.equals(withholidingTaxDocument.contactCode)) &&
        (this.contactName == null ? withholidingTaxDocument.contactName == null : this.contactName.equals(withholidingTaxDocument.contactName)) &&
        (this.contactAddress == null ? withholidingTaxDocument.contactAddress == null : this.contactAddress.equals(withholidingTaxDocument.contactAddress)) &&
        (this.contactTaxId == null ? withholidingTaxDocument.contactTaxId == null : this.contactTaxId.equals(withholidingTaxDocument.contactTaxId)) &&
        (this.contactBranch == null ? withholidingTaxDocument.contactBranch == null : this.contactBranch.equals(withholidingTaxDocument.contactBranch)) &&
        (this.contactPerson == null ? withholidingTaxDocument.contactPerson == null : this.contactPerson.equals(withholidingTaxDocument.contactPerson)) &&
        (this.contactEmail == null ? withholidingTaxDocument.contactEmail == null : this.contactEmail.equals(withholidingTaxDocument.contactEmail)) &&
        (this.contactNumber == null ? withholidingTaxDocument.contactNumber == null : this.contactNumber.equals(withholidingTaxDocument.contactNumber)) &&
        (this.contactZipCode == null ? withholidingTaxDocument.contactZipCode == null : this.contactZipCode.equals(withholidingTaxDocument.contactZipCode)) &&
        (this.contactGroup == null ? withholidingTaxDocument.contactGroup == null : this.contactGroup.equals(withholidingTaxDocument.contactGroup)) &&
        (this.publishedOn == null ? withholidingTaxDocument.publishedOn == null : this.publishedOn.equals(withholidingTaxDocument.publishedOn)) &&
        (this.entity == null ? withholidingTaxDocument.entity == null : this.entity.equals(withholidingTaxDocument.entity)) &&
        (this.textOther == null ? withholidingTaxDocument.textOther == null : this.textOther.equals(withholidingTaxDocument.textOther)) &&
        (this.withholdingTaxItems == null ? withholidingTaxDocument.withholdingTaxItems == null : this.withholdingTaxItems.equals(withholidingTaxDocument.withholdingTaxItems)) &&
        (this.total == null ? withholidingTaxDocument.total == null : this.total.equals(withholidingTaxDocument.total)) &&
        (this.totalTaxWithheld == null ? withholidingTaxDocument.totalTaxWithheld == null : this.totalTaxWithheld.equals(withholidingTaxDocument.totalTaxWithheld)) &&
        (this.taxPayment == null ? withholidingTaxDocument.taxPayment == null : this.taxPayment.equals(withholidingTaxDocument.taxPayment)) &&
        (this.taxPaymentOthers == null ? withholidingTaxDocument.taxPaymentOthers == null : this.taxPaymentOthers.equals(withholidingTaxDocument.taxPaymentOthers)) &&
        (this.providentFundNumber == null ? withholidingTaxDocument.providentFundNumber == null : this.providentFundNumber.equals(withholidingTaxDocument.providentFundNumber)) &&
        (this.providentFundAmount == null ? withholidingTaxDocument.providentFundAmount == null : this.providentFundAmount.equals(withholidingTaxDocument.providentFundAmount)) &&
        (this.socialSecurityAmount == null ? withholidingTaxDocument.socialSecurityAmount == null : this.socialSecurityAmount.equals(withholidingTaxDocument.socialSecurityAmount)) &&
        (this.remarks == null ? withholidingTaxDocument.remarks == null : this.remarks.equals(withholidingTaxDocument.remarks)) &&
        (this.internalNotes == null ? withholidingTaxDocument.internalNotes == null : this.internalNotes.equals(withholidingTaxDocument.internalNotes)) &&
        (this.showSignatureOrStamp == null ? withholidingTaxDocument.showSignatureOrStamp == null : this.showSignatureOrStamp.equals(withholidingTaxDocument.showSignatureOrStamp));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.contactCode == null ? 0: this.contactCode.hashCode());
    result = 31 * result + (this.contactName == null ? 0: this.contactName.hashCode());
    result = 31 * result + (this.contactAddress == null ? 0: this.contactAddress.hashCode());
    result = 31 * result + (this.contactTaxId == null ? 0: this.contactTaxId.hashCode());
    result = 31 * result + (this.contactBranch == null ? 0: this.contactBranch.hashCode());
    result = 31 * result + (this.contactPerson == null ? 0: this.contactPerson.hashCode());
    result = 31 * result + (this.contactEmail == null ? 0: this.contactEmail.hashCode());
    result = 31 * result + (this.contactNumber == null ? 0: this.contactNumber.hashCode());
    result = 31 * result + (this.contactZipCode == null ? 0: this.contactZipCode.hashCode());
    result = 31 * result + (this.contactGroup == null ? 0: this.contactGroup.hashCode());
    result = 31 * result + (this.publishedOn == null ? 0: this.publishedOn.hashCode());
    result = 31 * result + (this.entity == null ? 0: this.entity.hashCode());
    result = 31 * result + (this.textOther == null ? 0: this.textOther.hashCode());
    result = 31 * result + (this.withholdingTaxItems == null ? 0: this.withholdingTaxItems.hashCode());
    result = 31 * result + (this.total == null ? 0: this.total.hashCode());
    result = 31 * result + (this.totalTaxWithheld == null ? 0: this.totalTaxWithheld.hashCode());
    result = 31 * result + (this.taxPayment == null ? 0: this.taxPayment.hashCode());
    result = 31 * result + (this.taxPaymentOthers == null ? 0: this.taxPaymentOthers.hashCode());
    result = 31 * result + (this.providentFundNumber == null ? 0: this.providentFundNumber.hashCode());
    result = 31 * result + (this.providentFundAmount == null ? 0: this.providentFundAmount.hashCode());
    result = 31 * result + (this.socialSecurityAmount == null ? 0: this.socialSecurityAmount.hashCode());
    result = 31 * result + (this.remarks == null ? 0: this.remarks.hashCode());
    result = 31 * result + (this.internalNotes == null ? 0: this.internalNotes.hashCode());
    result = 31 * result + (this.showSignatureOrStamp == null ? 0: this.showSignatureOrStamp.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class WithholidingTaxDocument {\n");
    
    sb.append("  contactCode: ").append(contactCode).append("\n");
    sb.append("  contactName: ").append(contactName).append("\n");
    sb.append("  contactAddress: ").append(contactAddress).append("\n");
    sb.append("  contactTaxId: ").append(contactTaxId).append("\n");
    sb.append("  contactBranch: ").append(contactBranch).append("\n");
    sb.append("  contactPerson: ").append(contactPerson).append("\n");
    sb.append("  contactEmail: ").append(contactEmail).append("\n");
    sb.append("  contactNumber: ").append(contactNumber).append("\n");
    sb.append("  contactZipCode: ").append(contactZipCode).append("\n");
    sb.append("  contactGroup: ").append(contactGroup).append("\n");
    sb.append("  publishedOn: ").append(publishedOn).append("\n");
    sb.append("  entity: ").append(entity).append("\n");
    sb.append("  textOther: ").append(textOther).append("\n");
    sb.append("  withholdingTaxItems: ").append(withholdingTaxItems).append("\n");
    sb.append("  total: ").append(total).append("\n");
    sb.append("  totalTaxWithheld: ").append(totalTaxWithheld).append("\n");
    sb.append("  taxPayment: ").append(taxPayment).append("\n");
    sb.append("  taxPaymentOthers: ").append(taxPaymentOthers).append("\n");
    sb.append("  providentFundNumber: ").append(providentFundNumber).append("\n");
    sb.append("  providentFundAmount: ").append(providentFundAmount).append("\n");
    sb.append("  socialSecurityAmount: ").append(socialSecurityAmount).append("\n");
    sb.append("  remarks: ").append(remarks).append("\n");
    sb.append("  internalNotes: ").append(internalNotes).append("\n");
    sb.append("  showSignatureOrStamp: ").append(showSignatureOrStamp).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
