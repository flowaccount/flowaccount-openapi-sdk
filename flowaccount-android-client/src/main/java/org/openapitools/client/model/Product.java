/**
 * FlowAccount Open API
 * # Introduction  **Servers Production**    <site>Site:</site> https://www.flowaccount.com    <site>Api url:</site> https://openapi.flowaccount.com/v1    **Beta test**   <site>Site:</site> http://sandbox-new.flowaccount.com/    <site>Api url:</site> https://openapi.flowaccount.com/test    **PostMan Collection**   <site>Link:</site> https://www.getpostman.com/collections/01e7c68d7093e2092a64
 *
 * The version of the OpenAPI document: 2-oas3
 * Contact: developer_support@flowaccount.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.client.model;

import java.math.BigDecimal;
import java.util.Date;
import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

@ApiModel(description = "")
public class Product {
  
  @SerializedName("id")
  private String id = null;
  @SerializedName("type")
  private Long type = 1;
  @SerializedName("code")
  private String code = null;
  @SerializedName("name")
  private String name = null;
  @SerializedName("sellDescription")
  private String sellDescription = null;
  @SerializedName("sellPrice")
  private BigDecimal sellPrice = null;
  @SerializedName("sellVatType")
  private Long sellVatType = 3;
  @SerializedName("unitName")
  private String unitName = null;
  @SerializedName("categoryId")
  private Long categoryId = null;
  @SerializedName("categoryName")
  private String categoryName = null;
  @SerializedName("barcode")
  private String barcode = null;
  @SerializedName("buyDescription")
  private String buyDescription = null;
  @SerializedName("buyPrice")
  private BigDecimal buyPrice = null;
  @SerializedName("buyVatType")
  private Long buyVatType = 3;
  @SerializedName("inventoryPublishedOn")
  private Date inventoryPublishedOn = null;
  @SerializedName("inventoryQuantity")
  private BigDecimal inventoryQuantity = null;
  @SerializedName("averageBuyPrice")
  private BigDecimal averageBuyPrice = null;
  @SerializedName("averageSellPrice")
  private BigDecimal averageSellPrice = null;
  @SerializedName("remainingStock")
  private BigDecimal remainingStock = null;
  @SerializedName("totalValueInHand")
  private BigDecimal totalValueInHand = null;

  /**
   * เลข id Product
   **/
  @ApiModelProperty(value = "เลข id Product")
  public String getId() {
    return id;
  }
  public void setId(String id) {
    this.id = id;
  }

  /**
   * ประเภทสินค้า: 1 = บริการ / 3 = ไม่นับสต๊อก / 5 = นับสต๊อก
   **/
  @ApiModelProperty(value = "ประเภทสินค้า: 1 = บริการ / 3 = ไม่นับสต๊อก / 5 = นับสต๊อก")
  public Long getType() {
    return type;
  }
  public void setType(Long type) {
    this.type = type;
  }

  /**
   * รหัสสินค้า <br> <ex>Example: P001</ex>
   **/
  @ApiModelProperty(value = "รหัสสินค้า <br> <ex>Example: P001</ex>")
  public String getCode() {
    return code;
  }
  public void setCode(String code) {
    this.code = code;
  }

  /**
   * ชื่อสินค้า <br> <ex>Example: Product</ex>
   **/
  @ApiModelProperty(value = "ชื่อสินค้า <br> <ex>Example: Product</ex>")
  public String getName() {
    return name;
  }
  public void setName(String name) {
    this.name = name;
  }

  /**
   * รายละเอียดสินค้า ฝั่งขาย
   **/
  @ApiModelProperty(value = "รายละเอียดสินค้า ฝั่งขาย")
  public String getSellDescription() {
    return sellDescription;
  }
  public void setSellDescription(String sellDescription) {
    this.sellDescription = sellDescription;
  }

  /**
   * ราคาขายสินค้า
   **/
  @ApiModelProperty(value = "ราคาขายสินค้า")
  public BigDecimal getSellPrice() {
    return sellPrice;
  }
  public void setSellPrice(BigDecimal sellPrice) {
    this.sellPrice = sellPrice;
  }

  /**
   * ภาษีขาย: <br> 1 = ราคาขายรวมภาษี <br> 3 = ราคาขายไม่รวมภาษี <br> 5 = ราคาขายภาษี 0% <br> 7 = ราคาขายสินค้าได้รับการยกเว้นภาษี
   **/
  @ApiModelProperty(value = "ภาษีขาย: <br> 1 = ราคาขายรวมภาษี <br> 3 = ราคาขายไม่รวมภาษี <br> 5 = ราคาขายภาษี 0% <br> 7 = ราคาขายสินค้าได้รับการยกเว้นภาษี")
  public Long getSellVatType() {
    return sellVatType;
  }
  public void setSellVatType(Long sellVatType) {
    this.sellVatType = sellVatType;
  }

  /**
   * หน่วยสินค้า
   **/
  @ApiModelProperty(value = "หน่วยสินค้า")
  public String getUnitName() {
    return unitName;
  }
  public void setUnitName(String unitName) {
    this.unitName = unitName;
  }

  /**
   * id หมวดสินค้า
   **/
  @ApiModelProperty(value = "id หมวดสินค้า")
  public Long getCategoryId() {
    return categoryId;
  }
  public void setCategoryId(Long categoryId) {
    this.categoryId = categoryId;
  }

  /**
   * หมวดสินค้า
   **/
  @ApiModelProperty(value = "หมวดสินค้า")
  public String getCategoryName() {
    return categoryName;
  }
  public void setCategoryName(String categoryName) {
    this.categoryName = categoryName;
  }

  /**
   * บาร์โค้ด
   **/
  @ApiModelProperty(value = "บาร์โค้ด")
  public String getBarcode() {
    return barcode;
  }
  public void setBarcode(String barcode) {
    this.barcode = barcode;
  }

  /**
   * รายละเอียดสินค้า ฝั่งซื้อ
   **/
  @ApiModelProperty(value = "รายละเอียดสินค้า ฝั่งซื้อ")
  public String getBuyDescription() {
    return buyDescription;
  }
  public void setBuyDescription(String buyDescription) {
    this.buyDescription = buyDescription;
  }

  /**
   * ราคาซื้อสินค้า
   **/
  @ApiModelProperty(value = "ราคาซื้อสินค้า")
  public BigDecimal getBuyPrice() {
    return buyPrice;
  }
  public void setBuyPrice(BigDecimal buyPrice) {
    this.buyPrice = buyPrice;
  }

  /**
   * ภาษีซื้อ: <br> 1 = ราคาซื้อรวมภาษี <br> 3 = ราคาซื้อไม่รวมภาษี <br> 5 = ราคาซื้อภาษี 0% <br> 7 = ราคาซื้อสินค้าได้รับการยกเว้นภาษี
   **/
  @ApiModelProperty(value = "ภาษีซื้อ: <br> 1 = ราคาซื้อรวมภาษี <br> 3 = ราคาซื้อไม่รวมภาษี <br> 5 = ราคาซื้อภาษี 0% <br> 7 = ราคาซื้อสินค้าได้รับการยกเว้นภาษี")
  public Long getBuyVatType() {
    return buyVatType;
  }
  public void setBuyVatType(Long buyVatType) {
    this.buyVatType = buyVatType;
  }

  /**
   * วันที่ตั้งต้นสินค้า รูปแบบ yyyy-MM-dd <br> <ex>Example: 2020-01-01</ex>
   **/
  @ApiModelProperty(value = "วันที่ตั้งต้นสินค้า รูปแบบ yyyy-MM-dd <br> <ex>Example: 2020-01-01</ex>")
  public Date getInventoryPublishedOn() {
    return inventoryPublishedOn;
  }
  public void setInventoryPublishedOn(Date inventoryPublishedOn) {
    this.inventoryPublishedOn = inventoryPublishedOn;
  }

  /**
   * จำนวนยอดตั้งต้นสินค้า
   **/
  @ApiModelProperty(value = "จำนวนยอดตั้งต้นสินค้า")
  public BigDecimal getInventoryQuantity() {
    return inventoryQuantity;
  }
  public void setInventoryQuantity(BigDecimal inventoryQuantity) {
    this.inventoryQuantity = inventoryQuantity;
  }

  /**
   * ราคาซื้อเฉลี่ยสินค้า
   **/
  @ApiModelProperty(value = "ราคาซื้อเฉลี่ยสินค้า")
  public BigDecimal getAverageBuyPrice() {
    return averageBuyPrice;
  }
  public void setAverageBuyPrice(BigDecimal averageBuyPrice) {
    this.averageBuyPrice = averageBuyPrice;
  }

  /**
   * ราคาขายเฉลี่ยสินค้า
   **/
  @ApiModelProperty(value = "ราคาขายเฉลี่ยสินค้า")
  public BigDecimal getAverageSellPrice() {
    return averageSellPrice;
  }
  public void setAverageSellPrice(BigDecimal averageSellPrice) {
    this.averageSellPrice = averageSellPrice;
  }

  /**
   * จำนวนสินค้าคงเหลือในสต๊อก
   **/
  @ApiModelProperty(value = "จำนวนสินค้าคงเหลือในสต๊อก")
  public BigDecimal getRemainingStock() {
    return remainingStock;
  }
  public void setRemainingStock(BigDecimal remainingStock) {
    this.remainingStock = remainingStock;
  }

  /**
   * มูลค่าสินค้าคงเหลือในสต๊อก
   **/
  @ApiModelProperty(value = "มูลค่าสินค้าคงเหลือในสต๊อก")
  public BigDecimal getTotalValueInHand() {
    return totalValueInHand;
  }
  public void setTotalValueInHand(BigDecimal totalValueInHand) {
    this.totalValueInHand = totalValueInHand;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Product product = (Product) o;
    return (this.id == null ? product.id == null : this.id.equals(product.id)) &&
        (this.type == null ? product.type == null : this.type.equals(product.type)) &&
        (this.code == null ? product.code == null : this.code.equals(product.code)) &&
        (this.name == null ? product.name == null : this.name.equals(product.name)) &&
        (this.sellDescription == null ? product.sellDescription == null : this.sellDescription.equals(product.sellDescription)) &&
        (this.sellPrice == null ? product.sellPrice == null : this.sellPrice.equals(product.sellPrice)) &&
        (this.sellVatType == null ? product.sellVatType == null : this.sellVatType.equals(product.sellVatType)) &&
        (this.unitName == null ? product.unitName == null : this.unitName.equals(product.unitName)) &&
        (this.categoryId == null ? product.categoryId == null : this.categoryId.equals(product.categoryId)) &&
        (this.categoryName == null ? product.categoryName == null : this.categoryName.equals(product.categoryName)) &&
        (this.barcode == null ? product.barcode == null : this.barcode.equals(product.barcode)) &&
        (this.buyDescription == null ? product.buyDescription == null : this.buyDescription.equals(product.buyDescription)) &&
        (this.buyPrice == null ? product.buyPrice == null : this.buyPrice.equals(product.buyPrice)) &&
        (this.buyVatType == null ? product.buyVatType == null : this.buyVatType.equals(product.buyVatType)) &&
        (this.inventoryPublishedOn == null ? product.inventoryPublishedOn == null : this.inventoryPublishedOn.equals(product.inventoryPublishedOn)) &&
        (this.inventoryQuantity == null ? product.inventoryQuantity == null : this.inventoryQuantity.equals(product.inventoryQuantity)) &&
        (this.averageBuyPrice == null ? product.averageBuyPrice == null : this.averageBuyPrice.equals(product.averageBuyPrice)) &&
        (this.averageSellPrice == null ? product.averageSellPrice == null : this.averageSellPrice.equals(product.averageSellPrice)) &&
        (this.remainingStock == null ? product.remainingStock == null : this.remainingStock.equals(product.remainingStock)) &&
        (this.totalValueInHand == null ? product.totalValueInHand == null : this.totalValueInHand.equals(product.totalValueInHand));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.id == null ? 0: this.id.hashCode());
    result = 31 * result + (this.type == null ? 0: this.type.hashCode());
    result = 31 * result + (this.code == null ? 0: this.code.hashCode());
    result = 31 * result + (this.name == null ? 0: this.name.hashCode());
    result = 31 * result + (this.sellDescription == null ? 0: this.sellDescription.hashCode());
    result = 31 * result + (this.sellPrice == null ? 0: this.sellPrice.hashCode());
    result = 31 * result + (this.sellVatType == null ? 0: this.sellVatType.hashCode());
    result = 31 * result + (this.unitName == null ? 0: this.unitName.hashCode());
    result = 31 * result + (this.categoryId == null ? 0: this.categoryId.hashCode());
    result = 31 * result + (this.categoryName == null ? 0: this.categoryName.hashCode());
    result = 31 * result + (this.barcode == null ? 0: this.barcode.hashCode());
    result = 31 * result + (this.buyDescription == null ? 0: this.buyDescription.hashCode());
    result = 31 * result + (this.buyPrice == null ? 0: this.buyPrice.hashCode());
    result = 31 * result + (this.buyVatType == null ? 0: this.buyVatType.hashCode());
    result = 31 * result + (this.inventoryPublishedOn == null ? 0: this.inventoryPublishedOn.hashCode());
    result = 31 * result + (this.inventoryQuantity == null ? 0: this.inventoryQuantity.hashCode());
    result = 31 * result + (this.averageBuyPrice == null ? 0: this.averageBuyPrice.hashCode());
    result = 31 * result + (this.averageSellPrice == null ? 0: this.averageSellPrice.hashCode());
    result = 31 * result + (this.remainingStock == null ? 0: this.remainingStock.hashCode());
    result = 31 * result + (this.totalValueInHand == null ? 0: this.totalValueInHand.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class Product {\n");
    
    sb.append("  id: ").append(id).append("\n");
    sb.append("  type: ").append(type).append("\n");
    sb.append("  code: ").append(code).append("\n");
    sb.append("  name: ").append(name).append("\n");
    sb.append("  sellDescription: ").append(sellDescription).append("\n");
    sb.append("  sellPrice: ").append(sellPrice).append("\n");
    sb.append("  sellVatType: ").append(sellVatType).append("\n");
    sb.append("  unitName: ").append(unitName).append("\n");
    sb.append("  categoryId: ").append(categoryId).append("\n");
    sb.append("  categoryName: ").append(categoryName).append("\n");
    sb.append("  barcode: ").append(barcode).append("\n");
    sb.append("  buyDescription: ").append(buyDescription).append("\n");
    sb.append("  buyPrice: ").append(buyPrice).append("\n");
    sb.append("  buyVatType: ").append(buyVatType).append("\n");
    sb.append("  inventoryPublishedOn: ").append(inventoryPublishedOn).append("\n");
    sb.append("  inventoryQuantity: ").append(inventoryQuantity).append("\n");
    sb.append("  averageBuyPrice: ").append(averageBuyPrice).append("\n");
    sb.append("  averageSellPrice: ").append(averageSellPrice).append("\n");
    sb.append("  remainingStock: ").append(remainingStock).append("\n");
    sb.append("  totalValueInHand: ").append(totalValueInHand).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
